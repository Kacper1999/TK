Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN

Grammar

Rule 0     S' -> statements_list
Rule 1     number -> INTNUM
Rule 2     number -> FLOATNUM
Rule 3     matrix_el -> ID [ number , number ]
Rule 4     expression -> ID
Rule 5     expression -> number
Rule 6     expression -> STRING
Rule 7     table -> expression , expression
Rule 8     table -> table , expression
Rule 9     expression -> [ expression ]
Rule 10    expression -> [ table ]
Rule 11    expression -> ZEROES ( number )
Rule 12    expression -> EYE ( number )
Rule 13    expression -> ONES ( number )
Rule 14    expression -> - expression
Rule 15    expression -> expression + expression
Rule 16    expression -> expression - expression
Rule 17    expression -> expression * expression
Rule 18    expression -> expression / expression
Rule 19    expression -> expression DOTADD expression
Rule 20    expression -> expression DOTSUB expression
Rule 21    expression -> expression DOTMLP expression
Rule 22    expression -> expression DOTDIV expression
Rule 23    expression -> expression TRANSPOSE
Rule 24    expression -> expression EQ expression
Rule 25    expression -> expression NE expression
Rule 26    expression -> expression > expression
Rule 27    expression -> expression GOE expression
Rule 28    expression -> expression < expression
Rule 29    expression -> expression LOE expression
Rule 30    range -> expression : expression
Rule 31    instruction -> ID = expression ;
Rule 32    instruction -> ID SUBASSIGN expression ;
Rule 33    instruction -> ID ADDASSIGN expression ;
Rule 34    instruction -> ID MLPASSIGN expression ;
Rule 35    instruction -> ID DIVASSIGN expression ;
Rule 36    instruction -> matrix_el = expression ;
Rule 37    instruction -> matrix_el SUBASSIGN expression ;
Rule 38    instruction -> matrix_el ADDASSIGN expression ;
Rule 39    instruction -> matrix_el MLPASSIGN expression ;
Rule 40    instruction -> matrix_el DIVASSIGN expression ;
Rule 41    statements_list -> statements_list code_block
Rule 42    statements_list -> statements_list instruction
Rule 43    statements_list -> instruction code_block
Rule 44    statements_list -> instruction instruction
Rule 45    code_block -> expression ;
Rule 46    code_block -> { statements_list }
Rule 47    code_block -> { instruction }
Rule 48    instruction -> BREAK ;
Rule 49    instruction -> CONTINUE ;
Rule 50    instruction -> FOR ID = range code_block
Rule 51    instruction -> FOR ID = range instruction
Rule 52    instruction -> WHILE ( expression ) code_block
Rule 53    instruction -> WHILE ( expression ) instruction
Rule 54    instruction -> if_block
Rule 55    if_block -> IF ( expression ) code_block
Rule 56    if_block -> IF ( expression ) code_block elseif_block else_block
Rule 57    elseif_block -> ELSE if_block
Rule 58    else_block -> ELSE code_block
Rule 59    instruction -> PRINT table ;
Rule 60    instruction -> PRINT expression ;
Rule 61    instruction -> RETURN ;
Rule 62    instruction -> RETURN expression ;

Terminals, with rules where they appear

(                    : 11 12 13 52 53 55 56
)                    : 11 12 13 52 53 55 56
*                    : 17
+                    : 15
,                    : 3 7 8
-                    : 14 16
/                    : 18
:                    : 30
;                    : 31 32 33 34 35 36 37 38 39 40 45 48 49 59 60 61 62
<                    : 28
=                    : 31 36 50 51
>                    : 26
ADDASSIGN            : 33 38
BREAK                : 48
CONTINUE             : 49
DIVASSIGN            : 35 40
DOTADD               : 19
DOTDIV               : 22
DOTMLP               : 21
DOTSUB               : 20
ELSE                 : 57 58
EQ                   : 24
EYE                  : 12
FLOATNUM             : 2
FOR                  : 50 51
GOE                  : 27
ID                   : 3 4 31 32 33 34 35 50 51
IF                   : 55 56
INTNUM               : 1
LOE                  : 29
MLPASSIGN            : 34 39
NE                   : 25
ONES                 : 13
PRINT                : 59 60
RETURN               : 61 62
STRING               : 6
SUBASSIGN            : 32 37
THEN                 : 
TRANSPOSE            : 23
WHILE                : 52 53
ZEROES               : 11
[                    : 3 9 10
]                    : 3 9 10
error                : 
{                    : 46 47
}                    : 46 47

Nonterminals, with rules where they appear

code_block           : 41 43 50 52 55 56 58
else_block           : 56
elseif_block         : 56
expression           : 7 7 8 9 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32 33 34 35 36 37 38 39 40 45 52 53 55 56 60 62
if_block             : 54 57
instruction          : 42 43 44 44 47 51 53
matrix_el            : 36 37 38 39 40
number               : 3 3 5 11 12 13
range                : 50 51
statements_list      : 41 42 46 0
table                : 8 10 59

Parsing method: LALR

state 0

    (0) S' -> . statements_list
    (41) statements_list -> . statements_list code_block
    (42) statements_list -> . statements_list instruction
    (43) statements_list -> . instruction code_block
    (44) statements_list -> . instruction instruction
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block

    ID              shift and go to state 3
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    IF              shift and go to state 12

    statements_list                shift and go to state 1
    instruction                    shift and go to state 2
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9

state 1

    (0) S' -> statements_list .
    (41) statements_list -> statements_list . code_block
    (42) statements_list -> statements_list . instruction
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 16
    ID              shift and go to state 17
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    IF              shift and go to state 12
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    code_block                     shift and go to state 13
    instruction                    shift and go to state 14
    expression                     shift and go to state 15
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9
    number                         shift and go to state 18

state 2

    (43) statements_list -> instruction . code_block
    (44) statements_list -> instruction . instruction
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 16
    ID              shift and go to state 17
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    IF              shift and go to state 12
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    instruction                    shift and go to state 27
    code_block                     shift and go to state 28
    expression                     shift and go to state 15
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9
    number                         shift and go to state 18

state 3

    (31) instruction -> ID . = expression ;
    (32) instruction -> ID . SUBASSIGN expression ;
    (33) instruction -> ID . ADDASSIGN expression ;
    (34) instruction -> ID . MLPASSIGN expression ;
    (35) instruction -> ID . DIVASSIGN expression ;
    (3) matrix_el -> ID . [ number , number ]

    =               shift and go to state 29
    SUBASSIGN       shift and go to state 30
    ADDASSIGN       shift and go to state 31
    MLPASSIGN       shift and go to state 32
    DIVASSIGN       shift and go to state 33
    [               shift and go to state 34


state 4

    (36) instruction -> matrix_el . = expression ;
    (37) instruction -> matrix_el . SUBASSIGN expression ;
    (38) instruction -> matrix_el . ADDASSIGN expression ;
    (39) instruction -> matrix_el . MLPASSIGN expression ;
    (40) instruction -> matrix_el . DIVASSIGN expression ;

    =               shift and go to state 35
    SUBASSIGN       shift and go to state 36
    ADDASSIGN       shift and go to state 37
    MLPASSIGN       shift and go to state 38
    DIVASSIGN       shift and go to state 39


state 5

    (48) instruction -> BREAK . ;

    ;               shift and go to state 40


state 6

    (49) instruction -> CONTINUE . ;

    ;               shift and go to state 41


state 7

    (50) instruction -> FOR . ID = range code_block
    (51) instruction -> FOR . ID = range instruction

    ID              shift and go to state 42


state 8

    (52) instruction -> WHILE . ( expression ) code_block
    (53) instruction -> WHILE . ( expression ) instruction

    (               shift and go to state 43


state 9

    (54) instruction -> if_block .

    {               reduce using rule 54 (instruction -> if_block .)
    ID              reduce using rule 54 (instruction -> if_block .)
    BREAK           reduce using rule 54 (instruction -> if_block .)
    CONTINUE        reduce using rule 54 (instruction -> if_block .)
    FOR             reduce using rule 54 (instruction -> if_block .)
    WHILE           reduce using rule 54 (instruction -> if_block .)
    PRINT           reduce using rule 54 (instruction -> if_block .)
    RETURN          reduce using rule 54 (instruction -> if_block .)
    STRING          reduce using rule 54 (instruction -> if_block .)
    [               reduce using rule 54 (instruction -> if_block .)
    ZEROES          reduce using rule 54 (instruction -> if_block .)
    EYE             reduce using rule 54 (instruction -> if_block .)
    ONES            reduce using rule 54 (instruction -> if_block .)
    -               reduce using rule 54 (instruction -> if_block .)
    IF              reduce using rule 54 (instruction -> if_block .)
    INTNUM          reduce using rule 54 (instruction -> if_block .)
    FLOATNUM        reduce using rule 54 (instruction -> if_block .)
    $end            reduce using rule 54 (instruction -> if_block .)
    }               reduce using rule 54 (instruction -> if_block .)


state 10

    (59) instruction -> PRINT . table ;
    (60) instruction -> PRINT . expression ;
    (7) table -> . expression , expression
    (8) table -> . table , expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    table                          shift and go to state 44
    expression                     shift and go to state 45
    number                         shift and go to state 18

state 11

    (61) instruction -> RETURN . ;
    (62) instruction -> RETURN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ;               shift and go to state 47
    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 48
    number                         shift and go to state 18

state 12

    (55) if_block -> IF . ( expression ) code_block
    (56) if_block -> IF . ( expression ) code_block elseif_block else_block

    (               shift and go to state 49


state 13

    (41) statements_list -> statements_list code_block .

    {               reduce using rule 41 (statements_list -> statements_list code_block .)
    ID              reduce using rule 41 (statements_list -> statements_list code_block .)
    BREAK           reduce using rule 41 (statements_list -> statements_list code_block .)
    CONTINUE        reduce using rule 41 (statements_list -> statements_list code_block .)
    FOR             reduce using rule 41 (statements_list -> statements_list code_block .)
    WHILE           reduce using rule 41 (statements_list -> statements_list code_block .)
    PRINT           reduce using rule 41 (statements_list -> statements_list code_block .)
    RETURN          reduce using rule 41 (statements_list -> statements_list code_block .)
    STRING          reduce using rule 41 (statements_list -> statements_list code_block .)
    [               reduce using rule 41 (statements_list -> statements_list code_block .)
    ZEROES          reduce using rule 41 (statements_list -> statements_list code_block .)
    EYE             reduce using rule 41 (statements_list -> statements_list code_block .)
    ONES            reduce using rule 41 (statements_list -> statements_list code_block .)
    -               reduce using rule 41 (statements_list -> statements_list code_block .)
    IF              reduce using rule 41 (statements_list -> statements_list code_block .)
    INTNUM          reduce using rule 41 (statements_list -> statements_list code_block .)
    FLOATNUM        reduce using rule 41 (statements_list -> statements_list code_block .)
    $end            reduce using rule 41 (statements_list -> statements_list code_block .)
    }               reduce using rule 41 (statements_list -> statements_list code_block .)


state 14

    (42) statements_list -> statements_list instruction .

    {               reduce using rule 42 (statements_list -> statements_list instruction .)
    ID              reduce using rule 42 (statements_list -> statements_list instruction .)
    BREAK           reduce using rule 42 (statements_list -> statements_list instruction .)
    CONTINUE        reduce using rule 42 (statements_list -> statements_list instruction .)
    FOR             reduce using rule 42 (statements_list -> statements_list instruction .)
    WHILE           reduce using rule 42 (statements_list -> statements_list instruction .)
    PRINT           reduce using rule 42 (statements_list -> statements_list instruction .)
    RETURN          reduce using rule 42 (statements_list -> statements_list instruction .)
    STRING          reduce using rule 42 (statements_list -> statements_list instruction .)
    [               reduce using rule 42 (statements_list -> statements_list instruction .)
    ZEROES          reduce using rule 42 (statements_list -> statements_list instruction .)
    EYE             reduce using rule 42 (statements_list -> statements_list instruction .)
    ONES            reduce using rule 42 (statements_list -> statements_list instruction .)
    -               reduce using rule 42 (statements_list -> statements_list instruction .)
    IF              reduce using rule 42 (statements_list -> statements_list instruction .)
    INTNUM          reduce using rule 42 (statements_list -> statements_list instruction .)
    FLOATNUM        reduce using rule 42 (statements_list -> statements_list instruction .)
    $end            reduce using rule 42 (statements_list -> statements_list instruction .)
    }               reduce using rule 42 (statements_list -> statements_list instruction .)


state 15

    (45) code_block -> expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 50
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 16

    (46) code_block -> { . statements_list }
    (47) code_block -> { . instruction }
    (41) statements_list -> . statements_list code_block
    (42) statements_list -> . statements_list instruction
    (43) statements_list -> . instruction code_block
    (44) statements_list -> . instruction instruction
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block

    ID              shift and go to state 3
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    IF              shift and go to state 12

    statements_list                shift and go to state 66
    instruction                    shift and go to state 67
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9

state 17

    (31) instruction -> ID . = expression ;
    (32) instruction -> ID . SUBASSIGN expression ;
    (33) instruction -> ID . ADDASSIGN expression ;
    (34) instruction -> ID . MLPASSIGN expression ;
    (35) instruction -> ID . DIVASSIGN expression ;
    (4) expression -> ID .
    (3) matrix_el -> ID . [ number , number ]

    =               shift and go to state 29
    SUBASSIGN       shift and go to state 30
    ADDASSIGN       shift and go to state 31
    MLPASSIGN       shift and go to state 32
    DIVASSIGN       shift and go to state 33
    ;               reduce using rule 4 (expression -> ID .)
    +               reduce using rule 4 (expression -> ID .)
    -               reduce using rule 4 (expression -> ID .)
    *               reduce using rule 4 (expression -> ID .)
    /               reduce using rule 4 (expression -> ID .)
    DOTADD          reduce using rule 4 (expression -> ID .)
    DOTSUB          reduce using rule 4 (expression -> ID .)
    DOTMLP          reduce using rule 4 (expression -> ID .)
    DOTDIV          reduce using rule 4 (expression -> ID .)
    TRANSPOSE       reduce using rule 4 (expression -> ID .)
    EQ              reduce using rule 4 (expression -> ID .)
    NE              reduce using rule 4 (expression -> ID .)
    >               reduce using rule 4 (expression -> ID .)
    GOE             reduce using rule 4 (expression -> ID .)
    <               reduce using rule 4 (expression -> ID .)
    LOE             reduce using rule 4 (expression -> ID .)
    [               shift and go to state 34


state 18

    (5) expression -> number .

    ;               reduce using rule 5 (expression -> number .)
    +               reduce using rule 5 (expression -> number .)
    -               reduce using rule 5 (expression -> number .)
    *               reduce using rule 5 (expression -> number .)
    /               reduce using rule 5 (expression -> number .)
    DOTADD          reduce using rule 5 (expression -> number .)
    DOTSUB          reduce using rule 5 (expression -> number .)
    DOTMLP          reduce using rule 5 (expression -> number .)
    DOTDIV          reduce using rule 5 (expression -> number .)
    TRANSPOSE       reduce using rule 5 (expression -> number .)
    EQ              reduce using rule 5 (expression -> number .)
    NE              reduce using rule 5 (expression -> number .)
    >               reduce using rule 5 (expression -> number .)
    GOE             reduce using rule 5 (expression -> number .)
    <               reduce using rule 5 (expression -> number .)
    LOE             reduce using rule 5 (expression -> number .)
    ,               reduce using rule 5 (expression -> number .)
    ]               reduce using rule 5 (expression -> number .)
    )               reduce using rule 5 (expression -> number .)
    :               reduce using rule 5 (expression -> number .)
    {               reduce using rule 5 (expression -> number .)
    ID              reduce using rule 5 (expression -> number .)
    BREAK           reduce using rule 5 (expression -> number .)
    CONTINUE        reduce using rule 5 (expression -> number .)
    FOR             reduce using rule 5 (expression -> number .)
    WHILE           reduce using rule 5 (expression -> number .)
    PRINT           reduce using rule 5 (expression -> number .)
    RETURN          reduce using rule 5 (expression -> number .)
    STRING          reduce using rule 5 (expression -> number .)
    [               reduce using rule 5 (expression -> number .)
    ZEROES          reduce using rule 5 (expression -> number .)
    EYE             reduce using rule 5 (expression -> number .)
    ONES            reduce using rule 5 (expression -> number .)
    IF              reduce using rule 5 (expression -> number .)
    INTNUM          reduce using rule 5 (expression -> number .)
    FLOATNUM        reduce using rule 5 (expression -> number .)


state 19

    (6) expression -> STRING .

    ;               reduce using rule 6 (expression -> STRING .)
    +               reduce using rule 6 (expression -> STRING .)
    -               reduce using rule 6 (expression -> STRING .)
    *               reduce using rule 6 (expression -> STRING .)
    /               reduce using rule 6 (expression -> STRING .)
    DOTADD          reduce using rule 6 (expression -> STRING .)
    DOTSUB          reduce using rule 6 (expression -> STRING .)
    DOTMLP          reduce using rule 6 (expression -> STRING .)
    DOTDIV          reduce using rule 6 (expression -> STRING .)
    TRANSPOSE       reduce using rule 6 (expression -> STRING .)
    EQ              reduce using rule 6 (expression -> STRING .)
    NE              reduce using rule 6 (expression -> STRING .)
    >               reduce using rule 6 (expression -> STRING .)
    GOE             reduce using rule 6 (expression -> STRING .)
    <               reduce using rule 6 (expression -> STRING .)
    LOE             reduce using rule 6 (expression -> STRING .)
    ,               reduce using rule 6 (expression -> STRING .)
    ]               reduce using rule 6 (expression -> STRING .)
    )               reduce using rule 6 (expression -> STRING .)
    :               reduce using rule 6 (expression -> STRING .)
    {               reduce using rule 6 (expression -> STRING .)
    ID              reduce using rule 6 (expression -> STRING .)
    BREAK           reduce using rule 6 (expression -> STRING .)
    CONTINUE        reduce using rule 6 (expression -> STRING .)
    FOR             reduce using rule 6 (expression -> STRING .)
    WHILE           reduce using rule 6 (expression -> STRING .)
    PRINT           reduce using rule 6 (expression -> STRING .)
    RETURN          reduce using rule 6 (expression -> STRING .)
    STRING          reduce using rule 6 (expression -> STRING .)
    [               reduce using rule 6 (expression -> STRING .)
    ZEROES          reduce using rule 6 (expression -> STRING .)
    EYE             reduce using rule 6 (expression -> STRING .)
    ONES            reduce using rule 6 (expression -> STRING .)
    IF              reduce using rule 6 (expression -> STRING .)
    INTNUM          reduce using rule 6 (expression -> STRING .)
    FLOATNUM        reduce using rule 6 (expression -> STRING .)


state 20

    (9) expression -> [ . expression ]
    (10) expression -> [ . table ]
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (7) table -> . expression , expression
    (8) table -> . table , expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 68
    table                          shift and go to state 69
    number                         shift and go to state 18

state 21

    (11) expression -> ZEROES . ( number )

    (               shift and go to state 70


state 22

    (12) expression -> EYE . ( number )

    (               shift and go to state 71


state 23

    (13) expression -> ONES . ( number )

    (               shift and go to state 72


state 24

    (14) expression -> - . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 73
    number                         shift and go to state 18

state 25

    (1) number -> INTNUM .

    ;               reduce using rule 1 (number -> INTNUM .)
    +               reduce using rule 1 (number -> INTNUM .)
    -               reduce using rule 1 (number -> INTNUM .)
    *               reduce using rule 1 (number -> INTNUM .)
    /               reduce using rule 1 (number -> INTNUM .)
    DOTADD          reduce using rule 1 (number -> INTNUM .)
    DOTSUB          reduce using rule 1 (number -> INTNUM .)
    DOTMLP          reduce using rule 1 (number -> INTNUM .)
    DOTDIV          reduce using rule 1 (number -> INTNUM .)
    TRANSPOSE       reduce using rule 1 (number -> INTNUM .)
    EQ              reduce using rule 1 (number -> INTNUM .)
    NE              reduce using rule 1 (number -> INTNUM .)
    >               reduce using rule 1 (number -> INTNUM .)
    GOE             reduce using rule 1 (number -> INTNUM .)
    <               reduce using rule 1 (number -> INTNUM .)
    LOE             reduce using rule 1 (number -> INTNUM .)
    ,               reduce using rule 1 (number -> INTNUM .)
    ]               reduce using rule 1 (number -> INTNUM .)
    )               reduce using rule 1 (number -> INTNUM .)
    :               reduce using rule 1 (number -> INTNUM .)
    {               reduce using rule 1 (number -> INTNUM .)
    ID              reduce using rule 1 (number -> INTNUM .)
    BREAK           reduce using rule 1 (number -> INTNUM .)
    CONTINUE        reduce using rule 1 (number -> INTNUM .)
    FOR             reduce using rule 1 (number -> INTNUM .)
    WHILE           reduce using rule 1 (number -> INTNUM .)
    PRINT           reduce using rule 1 (number -> INTNUM .)
    RETURN          reduce using rule 1 (number -> INTNUM .)
    STRING          reduce using rule 1 (number -> INTNUM .)
    [               reduce using rule 1 (number -> INTNUM .)
    ZEROES          reduce using rule 1 (number -> INTNUM .)
    EYE             reduce using rule 1 (number -> INTNUM .)
    ONES            reduce using rule 1 (number -> INTNUM .)
    IF              reduce using rule 1 (number -> INTNUM .)
    INTNUM          reduce using rule 1 (number -> INTNUM .)
    FLOATNUM        reduce using rule 1 (number -> INTNUM .)


state 26

    (2) number -> FLOATNUM .

    ;               reduce using rule 2 (number -> FLOATNUM .)
    +               reduce using rule 2 (number -> FLOATNUM .)
    -               reduce using rule 2 (number -> FLOATNUM .)
    *               reduce using rule 2 (number -> FLOATNUM .)
    /               reduce using rule 2 (number -> FLOATNUM .)
    DOTADD          reduce using rule 2 (number -> FLOATNUM .)
    DOTSUB          reduce using rule 2 (number -> FLOATNUM .)
    DOTMLP          reduce using rule 2 (number -> FLOATNUM .)
    DOTDIV          reduce using rule 2 (number -> FLOATNUM .)
    TRANSPOSE       reduce using rule 2 (number -> FLOATNUM .)
    EQ              reduce using rule 2 (number -> FLOATNUM .)
    NE              reduce using rule 2 (number -> FLOATNUM .)
    >               reduce using rule 2 (number -> FLOATNUM .)
    GOE             reduce using rule 2 (number -> FLOATNUM .)
    <               reduce using rule 2 (number -> FLOATNUM .)
    LOE             reduce using rule 2 (number -> FLOATNUM .)
    ,               reduce using rule 2 (number -> FLOATNUM .)
    ]               reduce using rule 2 (number -> FLOATNUM .)
    )               reduce using rule 2 (number -> FLOATNUM .)
    :               reduce using rule 2 (number -> FLOATNUM .)
    {               reduce using rule 2 (number -> FLOATNUM .)
    ID              reduce using rule 2 (number -> FLOATNUM .)
    BREAK           reduce using rule 2 (number -> FLOATNUM .)
    CONTINUE        reduce using rule 2 (number -> FLOATNUM .)
    FOR             reduce using rule 2 (number -> FLOATNUM .)
    WHILE           reduce using rule 2 (number -> FLOATNUM .)
    PRINT           reduce using rule 2 (number -> FLOATNUM .)
    RETURN          reduce using rule 2 (number -> FLOATNUM .)
    STRING          reduce using rule 2 (number -> FLOATNUM .)
    [               reduce using rule 2 (number -> FLOATNUM .)
    ZEROES          reduce using rule 2 (number -> FLOATNUM .)
    EYE             reduce using rule 2 (number -> FLOATNUM .)
    ONES            reduce using rule 2 (number -> FLOATNUM .)
    IF              reduce using rule 2 (number -> FLOATNUM .)
    INTNUM          reduce using rule 2 (number -> FLOATNUM .)
    FLOATNUM        reduce using rule 2 (number -> FLOATNUM .)


state 27

    (44) statements_list -> instruction instruction .

    {               reduce using rule 44 (statements_list -> instruction instruction .)
    ID              reduce using rule 44 (statements_list -> instruction instruction .)
    BREAK           reduce using rule 44 (statements_list -> instruction instruction .)
    CONTINUE        reduce using rule 44 (statements_list -> instruction instruction .)
    FOR             reduce using rule 44 (statements_list -> instruction instruction .)
    WHILE           reduce using rule 44 (statements_list -> instruction instruction .)
    PRINT           reduce using rule 44 (statements_list -> instruction instruction .)
    RETURN          reduce using rule 44 (statements_list -> instruction instruction .)
    STRING          reduce using rule 44 (statements_list -> instruction instruction .)
    [               reduce using rule 44 (statements_list -> instruction instruction .)
    ZEROES          reduce using rule 44 (statements_list -> instruction instruction .)
    EYE             reduce using rule 44 (statements_list -> instruction instruction .)
    ONES            reduce using rule 44 (statements_list -> instruction instruction .)
    -               reduce using rule 44 (statements_list -> instruction instruction .)
    IF              reduce using rule 44 (statements_list -> instruction instruction .)
    INTNUM          reduce using rule 44 (statements_list -> instruction instruction .)
    FLOATNUM        reduce using rule 44 (statements_list -> instruction instruction .)
    $end            reduce using rule 44 (statements_list -> instruction instruction .)
    }               reduce using rule 44 (statements_list -> instruction instruction .)


state 28

    (43) statements_list -> instruction code_block .

    {               reduce using rule 43 (statements_list -> instruction code_block .)
    ID              reduce using rule 43 (statements_list -> instruction code_block .)
    BREAK           reduce using rule 43 (statements_list -> instruction code_block .)
    CONTINUE        reduce using rule 43 (statements_list -> instruction code_block .)
    FOR             reduce using rule 43 (statements_list -> instruction code_block .)
    WHILE           reduce using rule 43 (statements_list -> instruction code_block .)
    PRINT           reduce using rule 43 (statements_list -> instruction code_block .)
    RETURN          reduce using rule 43 (statements_list -> instruction code_block .)
    STRING          reduce using rule 43 (statements_list -> instruction code_block .)
    [               reduce using rule 43 (statements_list -> instruction code_block .)
    ZEROES          reduce using rule 43 (statements_list -> instruction code_block .)
    EYE             reduce using rule 43 (statements_list -> instruction code_block .)
    ONES            reduce using rule 43 (statements_list -> instruction code_block .)
    -               reduce using rule 43 (statements_list -> instruction code_block .)
    IF              reduce using rule 43 (statements_list -> instruction code_block .)
    INTNUM          reduce using rule 43 (statements_list -> instruction code_block .)
    FLOATNUM        reduce using rule 43 (statements_list -> instruction code_block .)
    $end            reduce using rule 43 (statements_list -> instruction code_block .)
    }               reduce using rule 43 (statements_list -> instruction code_block .)


state 29

    (31) instruction -> ID = . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 74
    number                         shift and go to state 18

state 30

    (32) instruction -> ID SUBASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 75
    number                         shift and go to state 18

state 31

    (33) instruction -> ID ADDASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 76
    number                         shift and go to state 18

state 32

    (34) instruction -> ID MLPASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 77
    number                         shift and go to state 18

state 33

    (35) instruction -> ID DIVASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 78
    number                         shift and go to state 18

state 34

    (3) matrix_el -> ID [ . number , number ]
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    number                         shift and go to state 79

state 35

    (36) instruction -> matrix_el = . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 80
    number                         shift and go to state 18

state 36

    (37) instruction -> matrix_el SUBASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 81
    number                         shift and go to state 18

state 37

    (38) instruction -> matrix_el ADDASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 82
    number                         shift and go to state 18

state 38

    (39) instruction -> matrix_el MLPASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 83
    number                         shift and go to state 18

state 39

    (40) instruction -> matrix_el DIVASSIGN . expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 84
    number                         shift and go to state 18

state 40

    (48) instruction -> BREAK ; .

    {               reduce using rule 48 (instruction -> BREAK ; .)
    ID              reduce using rule 48 (instruction -> BREAK ; .)
    BREAK           reduce using rule 48 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 48 (instruction -> BREAK ; .)
    FOR             reduce using rule 48 (instruction -> BREAK ; .)
    WHILE           reduce using rule 48 (instruction -> BREAK ; .)
    PRINT           reduce using rule 48 (instruction -> BREAK ; .)
    RETURN          reduce using rule 48 (instruction -> BREAK ; .)
    STRING          reduce using rule 48 (instruction -> BREAK ; .)
    [               reduce using rule 48 (instruction -> BREAK ; .)
    ZEROES          reduce using rule 48 (instruction -> BREAK ; .)
    EYE             reduce using rule 48 (instruction -> BREAK ; .)
    ONES            reduce using rule 48 (instruction -> BREAK ; .)
    -               reduce using rule 48 (instruction -> BREAK ; .)
    IF              reduce using rule 48 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 48 (instruction -> BREAK ; .)
    FLOATNUM        reduce using rule 48 (instruction -> BREAK ; .)
    $end            reduce using rule 48 (instruction -> BREAK ; .)
    }               reduce using rule 48 (instruction -> BREAK ; .)


state 41

    (49) instruction -> CONTINUE ; .

    {               reduce using rule 49 (instruction -> CONTINUE ; .)
    ID              reduce using rule 49 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 49 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 49 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 49 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 49 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 49 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 49 (instruction -> CONTINUE ; .)
    STRING          reduce using rule 49 (instruction -> CONTINUE ; .)
    [               reduce using rule 49 (instruction -> CONTINUE ; .)
    ZEROES          reduce using rule 49 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 49 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 49 (instruction -> CONTINUE ; .)
    -               reduce using rule 49 (instruction -> CONTINUE ; .)
    IF              reduce using rule 49 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 49 (instruction -> CONTINUE ; .)
    FLOATNUM        reduce using rule 49 (instruction -> CONTINUE ; .)
    $end            reduce using rule 49 (instruction -> CONTINUE ; .)
    }               reduce using rule 49 (instruction -> CONTINUE ; .)


state 42

    (50) instruction -> FOR ID . = range code_block
    (51) instruction -> FOR ID . = range instruction

    =               shift and go to state 85


state 43

    (52) instruction -> WHILE ( . expression ) code_block
    (53) instruction -> WHILE ( . expression ) instruction
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 86
    number                         shift and go to state 18

state 44

    (59) instruction -> PRINT table . ;
    (8) table -> table . , expression

    ;               shift and go to state 87
    ,               shift and go to state 88


state 45

    (60) instruction -> PRINT expression . ;
    (7) table -> expression . , expression
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 89
    ,               shift and go to state 90
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 46

    (4) expression -> ID .

    ;               reduce using rule 4 (expression -> ID .)
    ,               reduce using rule 4 (expression -> ID .)
    +               reduce using rule 4 (expression -> ID .)
    -               reduce using rule 4 (expression -> ID .)
    *               reduce using rule 4 (expression -> ID .)
    /               reduce using rule 4 (expression -> ID .)
    DOTADD          reduce using rule 4 (expression -> ID .)
    DOTSUB          reduce using rule 4 (expression -> ID .)
    DOTMLP          reduce using rule 4 (expression -> ID .)
    DOTDIV          reduce using rule 4 (expression -> ID .)
    TRANSPOSE       reduce using rule 4 (expression -> ID .)
    EQ              reduce using rule 4 (expression -> ID .)
    NE              reduce using rule 4 (expression -> ID .)
    >               reduce using rule 4 (expression -> ID .)
    GOE             reduce using rule 4 (expression -> ID .)
    <               reduce using rule 4 (expression -> ID .)
    LOE             reduce using rule 4 (expression -> ID .)
    ]               reduce using rule 4 (expression -> ID .)
    )               reduce using rule 4 (expression -> ID .)
    :               reduce using rule 4 (expression -> ID .)
    {               reduce using rule 4 (expression -> ID .)
    ID              reduce using rule 4 (expression -> ID .)
    BREAK           reduce using rule 4 (expression -> ID .)
    CONTINUE        reduce using rule 4 (expression -> ID .)
    FOR             reduce using rule 4 (expression -> ID .)
    WHILE           reduce using rule 4 (expression -> ID .)
    PRINT           reduce using rule 4 (expression -> ID .)
    RETURN          reduce using rule 4 (expression -> ID .)
    STRING          reduce using rule 4 (expression -> ID .)
    [               reduce using rule 4 (expression -> ID .)
    ZEROES          reduce using rule 4 (expression -> ID .)
    EYE             reduce using rule 4 (expression -> ID .)
    ONES            reduce using rule 4 (expression -> ID .)
    IF              reduce using rule 4 (expression -> ID .)
    INTNUM          reduce using rule 4 (expression -> ID .)
    FLOATNUM        reduce using rule 4 (expression -> ID .)


state 47

    (61) instruction -> RETURN ; .

    {               reduce using rule 61 (instruction -> RETURN ; .)
    ID              reduce using rule 61 (instruction -> RETURN ; .)
    BREAK           reduce using rule 61 (instruction -> RETURN ; .)
    CONTINUE        reduce using rule 61 (instruction -> RETURN ; .)
    FOR             reduce using rule 61 (instruction -> RETURN ; .)
    WHILE           reduce using rule 61 (instruction -> RETURN ; .)
    PRINT           reduce using rule 61 (instruction -> RETURN ; .)
    RETURN          reduce using rule 61 (instruction -> RETURN ; .)
    STRING          reduce using rule 61 (instruction -> RETURN ; .)
    [               reduce using rule 61 (instruction -> RETURN ; .)
    ZEROES          reduce using rule 61 (instruction -> RETURN ; .)
    EYE             reduce using rule 61 (instruction -> RETURN ; .)
    ONES            reduce using rule 61 (instruction -> RETURN ; .)
    -               reduce using rule 61 (instruction -> RETURN ; .)
    IF              reduce using rule 61 (instruction -> RETURN ; .)
    INTNUM          reduce using rule 61 (instruction -> RETURN ; .)
    FLOATNUM        reduce using rule 61 (instruction -> RETURN ; .)
    $end            reduce using rule 61 (instruction -> RETURN ; .)
    }               reduce using rule 61 (instruction -> RETURN ; .)


state 48

    (62) instruction -> RETURN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 91
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 49

    (55) if_block -> IF ( . expression ) code_block
    (56) if_block -> IF ( . expression ) code_block elseif_block else_block
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 92
    number                         shift and go to state 18

state 50

    (45) code_block -> expression ; .

    {               reduce using rule 45 (code_block -> expression ; .)
    ID              reduce using rule 45 (code_block -> expression ; .)
    BREAK           reduce using rule 45 (code_block -> expression ; .)
    CONTINUE        reduce using rule 45 (code_block -> expression ; .)
    FOR             reduce using rule 45 (code_block -> expression ; .)
    WHILE           reduce using rule 45 (code_block -> expression ; .)
    PRINT           reduce using rule 45 (code_block -> expression ; .)
    RETURN          reduce using rule 45 (code_block -> expression ; .)
    STRING          reduce using rule 45 (code_block -> expression ; .)
    [               reduce using rule 45 (code_block -> expression ; .)
    ZEROES          reduce using rule 45 (code_block -> expression ; .)
    EYE             reduce using rule 45 (code_block -> expression ; .)
    ONES            reduce using rule 45 (code_block -> expression ; .)
    -               reduce using rule 45 (code_block -> expression ; .)
    IF              reduce using rule 45 (code_block -> expression ; .)
    INTNUM          reduce using rule 45 (code_block -> expression ; .)
    FLOATNUM        reduce using rule 45 (code_block -> expression ; .)
    $end            reduce using rule 45 (code_block -> expression ; .)
    }               reduce using rule 45 (code_block -> expression ; .)
    ELSE            reduce using rule 45 (code_block -> expression ; .)


state 51

    (15) expression -> expression + . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 93
    number                         shift and go to state 18

state 52

    (16) expression -> expression - . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 94
    number                         shift and go to state 18

state 53

    (17) expression -> expression * . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 95
    number                         shift and go to state 18

state 54

    (18) expression -> expression / . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 96
    number                         shift and go to state 18

state 55

    (19) expression -> expression DOTADD . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 97
    number                         shift and go to state 18

state 56

    (20) expression -> expression DOTSUB . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 98
    number                         shift and go to state 18

state 57

    (21) expression -> expression DOTMLP . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 99
    number                         shift and go to state 18

state 58

    (22) expression -> expression DOTDIV . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 100
    number                         shift and go to state 18

state 59

    (23) expression -> expression TRANSPOSE .

    ;               reduce using rule 23 (expression -> expression TRANSPOSE .)
    +               reduce using rule 23 (expression -> expression TRANSPOSE .)
    -               reduce using rule 23 (expression -> expression TRANSPOSE .)
    *               reduce using rule 23 (expression -> expression TRANSPOSE .)
    /               reduce using rule 23 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 23 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 23 (expression -> expression TRANSPOSE .)
    DOTMLP          reduce using rule 23 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 23 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 23 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 23 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 23 (expression -> expression TRANSPOSE .)
    >               reduce using rule 23 (expression -> expression TRANSPOSE .)
    GOE             reduce using rule 23 (expression -> expression TRANSPOSE .)
    <               reduce using rule 23 (expression -> expression TRANSPOSE .)
    LOE             reduce using rule 23 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 23 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 23 (expression -> expression TRANSPOSE .)
    )               reduce using rule 23 (expression -> expression TRANSPOSE .)
    :               reduce using rule 23 (expression -> expression TRANSPOSE .)
    {               reduce using rule 23 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 23 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 23 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 23 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 23 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 23 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 23 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 23 (expression -> expression TRANSPOSE .)
    STRING          reduce using rule 23 (expression -> expression TRANSPOSE .)
    [               reduce using rule 23 (expression -> expression TRANSPOSE .)
    ZEROES          reduce using rule 23 (expression -> expression TRANSPOSE .)
    EYE             reduce using rule 23 (expression -> expression TRANSPOSE .)
    ONES            reduce using rule 23 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 23 (expression -> expression TRANSPOSE .)
    INTNUM          reduce using rule 23 (expression -> expression TRANSPOSE .)
    FLOATNUM        reduce using rule 23 (expression -> expression TRANSPOSE .)


state 60

    (24) expression -> expression EQ . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 101
    number                         shift and go to state 18

state 61

    (25) expression -> expression NE . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 102
    number                         shift and go to state 18

state 62

    (26) expression -> expression > . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 103
    number                         shift and go to state 18

state 63

    (27) expression -> expression GOE . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 104
    number                         shift and go to state 18

state 64

    (28) expression -> expression < . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 105
    number                         shift and go to state 18

state 65

    (29) expression -> expression LOE . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 106
    number                         shift and go to state 18

state 66

    (46) code_block -> { statements_list . }
    (41) statements_list -> statements_list . code_block
    (42) statements_list -> statements_list . instruction
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    }               shift and go to state 107
    {               shift and go to state 16
    ID              shift and go to state 17
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    IF              shift and go to state 12
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    code_block                     shift and go to state 13
    instruction                    shift and go to state 14
    expression                     shift and go to state 15
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9
    number                         shift and go to state 18

state 67

    (47) code_block -> { instruction . }
    (43) statements_list -> instruction . code_block
    (44) statements_list -> instruction . instruction
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    }               shift and go to state 108
    {               shift and go to state 16
    ID              shift and go to state 17
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    IF              shift and go to state 12
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    instruction                    shift and go to state 27
    code_block                     shift and go to state 28
    expression                     shift and go to state 15
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9
    number                         shift and go to state 18

state 68

    (9) expression -> [ expression . ]
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression
    (7) table -> expression . , expression

    ]               shift and go to state 109
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65
    ,               shift and go to state 90


state 69

    (10) expression -> [ table . ]
    (8) table -> table . , expression

    ]               shift and go to state 110
    ,               shift and go to state 88


state 70

    (11) expression -> ZEROES ( . number )
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    number                         shift and go to state 111

state 71

    (12) expression -> EYE ( . number )
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    number                         shift and go to state 112

state 72

    (13) expression -> ONES ( . number )
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    number                         shift and go to state 113

state 73

    (14) expression -> - expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 14 (expression -> - expression .)
    +               reduce using rule 14 (expression -> - expression .)
    -               reduce using rule 14 (expression -> - expression .)
    TRANSPOSE       reduce using rule 14 (expression -> - expression .)
    EQ              reduce using rule 14 (expression -> - expression .)
    NE              reduce using rule 14 (expression -> - expression .)
    >               reduce using rule 14 (expression -> - expression .)
    GOE             reduce using rule 14 (expression -> - expression .)
    <               reduce using rule 14 (expression -> - expression .)
    LOE             reduce using rule 14 (expression -> - expression .)
    ,               reduce using rule 14 (expression -> - expression .)
    ]               reduce using rule 14 (expression -> - expression .)
    )               reduce using rule 14 (expression -> - expression .)
    :               reduce using rule 14 (expression -> - expression .)
    {               reduce using rule 14 (expression -> - expression .)
    ID              reduce using rule 14 (expression -> - expression .)
    BREAK           reduce using rule 14 (expression -> - expression .)
    CONTINUE        reduce using rule 14 (expression -> - expression .)
    FOR             reduce using rule 14 (expression -> - expression .)
    WHILE           reduce using rule 14 (expression -> - expression .)
    PRINT           reduce using rule 14 (expression -> - expression .)
    RETURN          reduce using rule 14 (expression -> - expression .)
    STRING          reduce using rule 14 (expression -> - expression .)
    [               reduce using rule 14 (expression -> - expression .)
    ZEROES          reduce using rule 14 (expression -> - expression .)
    EYE             reduce using rule 14 (expression -> - expression .)
    ONES            reduce using rule 14 (expression -> - expression .)
    IF              reduce using rule 14 (expression -> - expression .)
    INTNUM          reduce using rule 14 (expression -> - expression .)
    FLOATNUM        reduce using rule 14 (expression -> - expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! *               [ reduce using rule 14 (expression -> - expression .) ]
  ! /               [ reduce using rule 14 (expression -> - expression .) ]
  ! DOTADD          [ reduce using rule 14 (expression -> - expression .) ]
  ! DOTSUB          [ reduce using rule 14 (expression -> - expression .) ]
  ! DOTMLP          [ reduce using rule 14 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 14 (expression -> - expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 74

    (31) instruction -> ID = expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 114
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 75

    (32) instruction -> ID SUBASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 115
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 76

    (33) instruction -> ID ADDASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 116
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 77

    (34) instruction -> ID MLPASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 117
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 78

    (35) instruction -> ID DIVASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 118
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 79

    (3) matrix_el -> ID [ number . , number ]

    ,               shift and go to state 119


state 80

    (36) instruction -> matrix_el = expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 120
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 81

    (37) instruction -> matrix_el SUBASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 121
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 82

    (38) instruction -> matrix_el ADDASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 122
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 83

    (39) instruction -> matrix_el MLPASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 123
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 84

    (40) instruction -> matrix_el DIVASSIGN expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               shift and go to state 124
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 85

    (50) instruction -> FOR ID = . range code_block
    (51) instruction -> FOR ID = . range instruction
    (30) range -> . expression : expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    range                          shift and go to state 125
    expression                     shift and go to state 126
    number                         shift and go to state 18

state 86

    (52) instruction -> WHILE ( expression . ) code_block
    (53) instruction -> WHILE ( expression . ) instruction
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    )               shift and go to state 127
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 87

    (59) instruction -> PRINT table ; .

    {               reduce using rule 59 (instruction -> PRINT table ; .)
    ID              reduce using rule 59 (instruction -> PRINT table ; .)
    BREAK           reduce using rule 59 (instruction -> PRINT table ; .)
    CONTINUE        reduce using rule 59 (instruction -> PRINT table ; .)
    FOR             reduce using rule 59 (instruction -> PRINT table ; .)
    WHILE           reduce using rule 59 (instruction -> PRINT table ; .)
    PRINT           reduce using rule 59 (instruction -> PRINT table ; .)
    RETURN          reduce using rule 59 (instruction -> PRINT table ; .)
    STRING          reduce using rule 59 (instruction -> PRINT table ; .)
    [               reduce using rule 59 (instruction -> PRINT table ; .)
    ZEROES          reduce using rule 59 (instruction -> PRINT table ; .)
    EYE             reduce using rule 59 (instruction -> PRINT table ; .)
    ONES            reduce using rule 59 (instruction -> PRINT table ; .)
    -               reduce using rule 59 (instruction -> PRINT table ; .)
    IF              reduce using rule 59 (instruction -> PRINT table ; .)
    INTNUM          reduce using rule 59 (instruction -> PRINT table ; .)
    FLOATNUM        reduce using rule 59 (instruction -> PRINT table ; .)
    $end            reduce using rule 59 (instruction -> PRINT table ; .)
    }               reduce using rule 59 (instruction -> PRINT table ; .)


state 88

    (8) table -> table , . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 128
    number                         shift and go to state 18

state 89

    (60) instruction -> PRINT expression ; .

    {               reduce using rule 60 (instruction -> PRINT expression ; .)
    ID              reduce using rule 60 (instruction -> PRINT expression ; .)
    BREAK           reduce using rule 60 (instruction -> PRINT expression ; .)
    CONTINUE        reduce using rule 60 (instruction -> PRINT expression ; .)
    FOR             reduce using rule 60 (instruction -> PRINT expression ; .)
    WHILE           reduce using rule 60 (instruction -> PRINT expression ; .)
    PRINT           reduce using rule 60 (instruction -> PRINT expression ; .)
    RETURN          reduce using rule 60 (instruction -> PRINT expression ; .)
    STRING          reduce using rule 60 (instruction -> PRINT expression ; .)
    [               reduce using rule 60 (instruction -> PRINT expression ; .)
    ZEROES          reduce using rule 60 (instruction -> PRINT expression ; .)
    EYE             reduce using rule 60 (instruction -> PRINT expression ; .)
    ONES            reduce using rule 60 (instruction -> PRINT expression ; .)
    -               reduce using rule 60 (instruction -> PRINT expression ; .)
    IF              reduce using rule 60 (instruction -> PRINT expression ; .)
    INTNUM          reduce using rule 60 (instruction -> PRINT expression ; .)
    FLOATNUM        reduce using rule 60 (instruction -> PRINT expression ; .)
    $end            reduce using rule 60 (instruction -> PRINT expression ; .)
    }               reduce using rule 60 (instruction -> PRINT expression ; .)


state 90

    (7) table -> expression , . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 129
    number                         shift and go to state 18

state 91

    (62) instruction -> RETURN expression ; .

    {               reduce using rule 62 (instruction -> RETURN expression ; .)
    ID              reduce using rule 62 (instruction -> RETURN expression ; .)
    BREAK           reduce using rule 62 (instruction -> RETURN expression ; .)
    CONTINUE        reduce using rule 62 (instruction -> RETURN expression ; .)
    FOR             reduce using rule 62 (instruction -> RETURN expression ; .)
    WHILE           reduce using rule 62 (instruction -> RETURN expression ; .)
    PRINT           reduce using rule 62 (instruction -> RETURN expression ; .)
    RETURN          reduce using rule 62 (instruction -> RETURN expression ; .)
    STRING          reduce using rule 62 (instruction -> RETURN expression ; .)
    [               reduce using rule 62 (instruction -> RETURN expression ; .)
    ZEROES          reduce using rule 62 (instruction -> RETURN expression ; .)
    EYE             reduce using rule 62 (instruction -> RETURN expression ; .)
    ONES            reduce using rule 62 (instruction -> RETURN expression ; .)
    -               reduce using rule 62 (instruction -> RETURN expression ; .)
    IF              reduce using rule 62 (instruction -> RETURN expression ; .)
    INTNUM          reduce using rule 62 (instruction -> RETURN expression ; .)
    FLOATNUM        reduce using rule 62 (instruction -> RETURN expression ; .)
    $end            reduce using rule 62 (instruction -> RETURN expression ; .)
    }               reduce using rule 62 (instruction -> RETURN expression ; .)


state 92

    (55) if_block -> IF ( expression . ) code_block
    (56) if_block -> IF ( expression . ) code_block elseif_block else_block
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    )               shift and go to state 130
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 93

    (15) expression -> expression + expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 15 (expression -> expression + expression .)
    +               reduce using rule 15 (expression -> expression + expression .)
    -               reduce using rule 15 (expression -> expression + expression .)
    TRANSPOSE       reduce using rule 15 (expression -> expression + expression .)
    EQ              reduce using rule 15 (expression -> expression + expression .)
    NE              reduce using rule 15 (expression -> expression + expression .)
    >               reduce using rule 15 (expression -> expression + expression .)
    GOE             reduce using rule 15 (expression -> expression + expression .)
    <               reduce using rule 15 (expression -> expression + expression .)
    LOE             reduce using rule 15 (expression -> expression + expression .)
    ,               reduce using rule 15 (expression -> expression + expression .)
    ]               reduce using rule 15 (expression -> expression + expression .)
    )               reduce using rule 15 (expression -> expression + expression .)
    :               reduce using rule 15 (expression -> expression + expression .)
    {               reduce using rule 15 (expression -> expression + expression .)
    ID              reduce using rule 15 (expression -> expression + expression .)
    BREAK           reduce using rule 15 (expression -> expression + expression .)
    CONTINUE        reduce using rule 15 (expression -> expression + expression .)
    FOR             reduce using rule 15 (expression -> expression + expression .)
    WHILE           reduce using rule 15 (expression -> expression + expression .)
    PRINT           reduce using rule 15 (expression -> expression + expression .)
    RETURN          reduce using rule 15 (expression -> expression + expression .)
    STRING          reduce using rule 15 (expression -> expression + expression .)
    [               reduce using rule 15 (expression -> expression + expression .)
    ZEROES          reduce using rule 15 (expression -> expression + expression .)
    EYE             reduce using rule 15 (expression -> expression + expression .)
    ONES            reduce using rule 15 (expression -> expression + expression .)
    IF              reduce using rule 15 (expression -> expression + expression .)
    INTNUM          reduce using rule 15 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 15 (expression -> expression + expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! *               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! DOTADD          [ reduce using rule 15 (expression -> expression + expression .) ]
  ! DOTSUB          [ reduce using rule 15 (expression -> expression + expression .) ]
  ! DOTMLP          [ reduce using rule 15 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 15 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 94

    (16) expression -> expression - expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 16 (expression -> expression - expression .)
    +               reduce using rule 16 (expression -> expression - expression .)
    -               reduce using rule 16 (expression -> expression - expression .)
    TRANSPOSE       reduce using rule 16 (expression -> expression - expression .)
    EQ              reduce using rule 16 (expression -> expression - expression .)
    NE              reduce using rule 16 (expression -> expression - expression .)
    >               reduce using rule 16 (expression -> expression - expression .)
    GOE             reduce using rule 16 (expression -> expression - expression .)
    <               reduce using rule 16 (expression -> expression - expression .)
    LOE             reduce using rule 16 (expression -> expression - expression .)
    ,               reduce using rule 16 (expression -> expression - expression .)
    ]               reduce using rule 16 (expression -> expression - expression .)
    )               reduce using rule 16 (expression -> expression - expression .)
    :               reduce using rule 16 (expression -> expression - expression .)
    {               reduce using rule 16 (expression -> expression - expression .)
    ID              reduce using rule 16 (expression -> expression - expression .)
    BREAK           reduce using rule 16 (expression -> expression - expression .)
    CONTINUE        reduce using rule 16 (expression -> expression - expression .)
    FOR             reduce using rule 16 (expression -> expression - expression .)
    WHILE           reduce using rule 16 (expression -> expression - expression .)
    PRINT           reduce using rule 16 (expression -> expression - expression .)
    RETURN          reduce using rule 16 (expression -> expression - expression .)
    STRING          reduce using rule 16 (expression -> expression - expression .)
    [               reduce using rule 16 (expression -> expression - expression .)
    ZEROES          reduce using rule 16 (expression -> expression - expression .)
    EYE             reduce using rule 16 (expression -> expression - expression .)
    ONES            reduce using rule 16 (expression -> expression - expression .)
    IF              reduce using rule 16 (expression -> expression - expression .)
    INTNUM          reduce using rule 16 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 16 (expression -> expression - expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! *               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 16 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 16 (expression -> expression - expression .) ]
  ! DOTMLP          [ reduce using rule 16 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 16 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 95

    (17) expression -> expression * expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 17 (expression -> expression * expression .)
    +               reduce using rule 17 (expression -> expression * expression .)
    -               reduce using rule 17 (expression -> expression * expression .)
    *               reduce using rule 17 (expression -> expression * expression .)
    /               reduce using rule 17 (expression -> expression * expression .)
    TRANSPOSE       reduce using rule 17 (expression -> expression * expression .)
    EQ              reduce using rule 17 (expression -> expression * expression .)
    NE              reduce using rule 17 (expression -> expression * expression .)
    >               reduce using rule 17 (expression -> expression * expression .)
    GOE             reduce using rule 17 (expression -> expression * expression .)
    <               reduce using rule 17 (expression -> expression * expression .)
    LOE             reduce using rule 17 (expression -> expression * expression .)
    ,               reduce using rule 17 (expression -> expression * expression .)
    ]               reduce using rule 17 (expression -> expression * expression .)
    )               reduce using rule 17 (expression -> expression * expression .)
    :               reduce using rule 17 (expression -> expression * expression .)
    {               reduce using rule 17 (expression -> expression * expression .)
    ID              reduce using rule 17 (expression -> expression * expression .)
    BREAK           reduce using rule 17 (expression -> expression * expression .)
    CONTINUE        reduce using rule 17 (expression -> expression * expression .)
    FOR             reduce using rule 17 (expression -> expression * expression .)
    WHILE           reduce using rule 17 (expression -> expression * expression .)
    PRINT           reduce using rule 17 (expression -> expression * expression .)
    RETURN          reduce using rule 17 (expression -> expression * expression .)
    STRING          reduce using rule 17 (expression -> expression * expression .)
    [               reduce using rule 17 (expression -> expression * expression .)
    ZEROES          reduce using rule 17 (expression -> expression * expression .)
    EYE             reduce using rule 17 (expression -> expression * expression .)
    ONES            reduce using rule 17 (expression -> expression * expression .)
    IF              reduce using rule 17 (expression -> expression * expression .)
    INTNUM          reduce using rule 17 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 17 (expression -> expression * expression .)
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! DOTADD          [ reduce using rule 17 (expression -> expression * expression .) ]
  ! DOTSUB          [ reduce using rule 17 (expression -> expression * expression .) ]
  ! DOTMLP          [ reduce using rule 17 (expression -> expression * expression .) ]
  ! DOTDIV          [ reduce using rule 17 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 96

    (18) expression -> expression / expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 18 (expression -> expression / expression .)
    +               reduce using rule 18 (expression -> expression / expression .)
    -               reduce using rule 18 (expression -> expression / expression .)
    *               reduce using rule 18 (expression -> expression / expression .)
    /               reduce using rule 18 (expression -> expression / expression .)
    TRANSPOSE       reduce using rule 18 (expression -> expression / expression .)
    EQ              reduce using rule 18 (expression -> expression / expression .)
    NE              reduce using rule 18 (expression -> expression / expression .)
    >               reduce using rule 18 (expression -> expression / expression .)
    GOE             reduce using rule 18 (expression -> expression / expression .)
    <               reduce using rule 18 (expression -> expression / expression .)
    LOE             reduce using rule 18 (expression -> expression / expression .)
    ,               reduce using rule 18 (expression -> expression / expression .)
    ]               reduce using rule 18 (expression -> expression / expression .)
    )               reduce using rule 18 (expression -> expression / expression .)
    :               reduce using rule 18 (expression -> expression / expression .)
    {               reduce using rule 18 (expression -> expression / expression .)
    ID              reduce using rule 18 (expression -> expression / expression .)
    BREAK           reduce using rule 18 (expression -> expression / expression .)
    CONTINUE        reduce using rule 18 (expression -> expression / expression .)
    FOR             reduce using rule 18 (expression -> expression / expression .)
    WHILE           reduce using rule 18 (expression -> expression / expression .)
    PRINT           reduce using rule 18 (expression -> expression / expression .)
    RETURN          reduce using rule 18 (expression -> expression / expression .)
    STRING          reduce using rule 18 (expression -> expression / expression .)
    [               reduce using rule 18 (expression -> expression / expression .)
    ZEROES          reduce using rule 18 (expression -> expression / expression .)
    EYE             reduce using rule 18 (expression -> expression / expression .)
    ONES            reduce using rule 18 (expression -> expression / expression .)
    IF              reduce using rule 18 (expression -> expression / expression .)
    INTNUM          reduce using rule 18 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 18 (expression -> expression / expression .)
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! DOTADD          [ reduce using rule 18 (expression -> expression / expression .) ]
  ! DOTSUB          [ reduce using rule 18 (expression -> expression / expression .) ]
  ! DOTMLP          [ reduce using rule 18 (expression -> expression / expression .) ]
  ! DOTDIV          [ reduce using rule 18 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 97

    (19) expression -> expression DOTADD expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 19 (expression -> expression DOTADD expression .)
    +               reduce using rule 19 (expression -> expression DOTADD expression .)
    -               reduce using rule 19 (expression -> expression DOTADD expression .)
    *               reduce using rule 19 (expression -> expression DOTADD expression .)
    /               reduce using rule 19 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 19 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 19 (expression -> expression DOTADD expression .)
    TRANSPOSE       reduce using rule 19 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 19 (expression -> expression DOTADD expression .)
    NE              reduce using rule 19 (expression -> expression DOTADD expression .)
    >               reduce using rule 19 (expression -> expression DOTADD expression .)
    GOE             reduce using rule 19 (expression -> expression DOTADD expression .)
    <               reduce using rule 19 (expression -> expression DOTADD expression .)
    LOE             reduce using rule 19 (expression -> expression DOTADD expression .)
    ,               reduce using rule 19 (expression -> expression DOTADD expression .)
    ]               reduce using rule 19 (expression -> expression DOTADD expression .)
    )               reduce using rule 19 (expression -> expression DOTADD expression .)
    :               reduce using rule 19 (expression -> expression DOTADD expression .)
    {               reduce using rule 19 (expression -> expression DOTADD expression .)
    ID              reduce using rule 19 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 19 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 19 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 19 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 19 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 19 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 19 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 19 (expression -> expression DOTADD expression .)
    [               reduce using rule 19 (expression -> expression DOTADD expression .)
    ZEROES          reduce using rule 19 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 19 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 19 (expression -> expression DOTADD expression .)
    IF              reduce using rule 19 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 19 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 19 (expression -> expression DOTADD expression .)
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! DOTMLP          [ reduce using rule 19 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 19 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTSUB          [ shift and go to state 56 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 98

    (20) expression -> expression DOTSUB expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 20 (expression -> expression DOTSUB expression .)
    +               reduce using rule 20 (expression -> expression DOTSUB expression .)
    -               reduce using rule 20 (expression -> expression DOTSUB expression .)
    *               reduce using rule 20 (expression -> expression DOTSUB expression .)
    /               reduce using rule 20 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 20 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 20 (expression -> expression DOTSUB expression .)
    TRANSPOSE       reduce using rule 20 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 20 (expression -> expression DOTSUB expression .)
    NE              reduce using rule 20 (expression -> expression DOTSUB expression .)
    >               reduce using rule 20 (expression -> expression DOTSUB expression .)
    GOE             reduce using rule 20 (expression -> expression DOTSUB expression .)
    <               reduce using rule 20 (expression -> expression DOTSUB expression .)
    LOE             reduce using rule 20 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 20 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 20 (expression -> expression DOTSUB expression .)
    )               reduce using rule 20 (expression -> expression DOTSUB expression .)
    :               reduce using rule 20 (expression -> expression DOTSUB expression .)
    {               reduce using rule 20 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 20 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 20 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 20 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 20 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 20 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 20 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 20 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 20 (expression -> expression DOTSUB expression .)
    [               reduce using rule 20 (expression -> expression DOTSUB expression .)
    ZEROES          reduce using rule 20 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 20 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 20 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 20 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 20 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 20 (expression -> expression DOTSUB expression .)
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! DOTMLP          [ reduce using rule 20 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 20 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTSUB          [ shift and go to state 56 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 99

    (21) expression -> expression DOTMLP expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 21 (expression -> expression DOTMLP expression .)
    +               reduce using rule 21 (expression -> expression DOTMLP expression .)
    -               reduce using rule 21 (expression -> expression DOTMLP expression .)
    *               reduce using rule 21 (expression -> expression DOTMLP expression .)
    /               reduce using rule 21 (expression -> expression DOTMLP expression .)
    DOTADD          reduce using rule 21 (expression -> expression DOTMLP expression .)
    DOTSUB          reduce using rule 21 (expression -> expression DOTMLP expression .)
    DOTMLP          reduce using rule 21 (expression -> expression DOTMLP expression .)
    DOTDIV          reduce using rule 21 (expression -> expression DOTMLP expression .)
    TRANSPOSE       reduce using rule 21 (expression -> expression DOTMLP expression .)
    EQ              reduce using rule 21 (expression -> expression DOTMLP expression .)
    NE              reduce using rule 21 (expression -> expression DOTMLP expression .)
    >               reduce using rule 21 (expression -> expression DOTMLP expression .)
    GOE             reduce using rule 21 (expression -> expression DOTMLP expression .)
    <               reduce using rule 21 (expression -> expression DOTMLP expression .)
    LOE             reduce using rule 21 (expression -> expression DOTMLP expression .)
    ,               reduce using rule 21 (expression -> expression DOTMLP expression .)
    ]               reduce using rule 21 (expression -> expression DOTMLP expression .)
    )               reduce using rule 21 (expression -> expression DOTMLP expression .)
    :               reduce using rule 21 (expression -> expression DOTMLP expression .)
    {               reduce using rule 21 (expression -> expression DOTMLP expression .)
    ID              reduce using rule 21 (expression -> expression DOTMLP expression .)
    BREAK           reduce using rule 21 (expression -> expression DOTMLP expression .)
    CONTINUE        reduce using rule 21 (expression -> expression DOTMLP expression .)
    FOR             reduce using rule 21 (expression -> expression DOTMLP expression .)
    WHILE           reduce using rule 21 (expression -> expression DOTMLP expression .)
    PRINT           reduce using rule 21 (expression -> expression DOTMLP expression .)
    RETURN          reduce using rule 21 (expression -> expression DOTMLP expression .)
    STRING          reduce using rule 21 (expression -> expression DOTMLP expression .)
    [               reduce using rule 21 (expression -> expression DOTMLP expression .)
    ZEROES          reduce using rule 21 (expression -> expression DOTMLP expression .)
    EYE             reduce using rule 21 (expression -> expression DOTMLP expression .)
    ONES            reduce using rule 21 (expression -> expression DOTMLP expression .)
    IF              reduce using rule 21 (expression -> expression DOTMLP expression .)
    INTNUM          reduce using rule 21 (expression -> expression DOTMLP expression .)
    FLOATNUM        reduce using rule 21 (expression -> expression DOTMLP expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTSUB          [ shift and go to state 56 ]
  ! DOTMLP          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 100

    (22) expression -> expression DOTDIV expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 22 (expression -> expression DOTDIV expression .)
    +               reduce using rule 22 (expression -> expression DOTDIV expression .)
    -               reduce using rule 22 (expression -> expression DOTDIV expression .)
    *               reduce using rule 22 (expression -> expression DOTDIV expression .)
    /               reduce using rule 22 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 22 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 22 (expression -> expression DOTDIV expression .)
    DOTMLP          reduce using rule 22 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 22 (expression -> expression DOTDIV expression .)
    TRANSPOSE       reduce using rule 22 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 22 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 22 (expression -> expression DOTDIV expression .)
    >               reduce using rule 22 (expression -> expression DOTDIV expression .)
    GOE             reduce using rule 22 (expression -> expression DOTDIV expression .)
    <               reduce using rule 22 (expression -> expression DOTDIV expression .)
    LOE             reduce using rule 22 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 22 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 22 (expression -> expression DOTDIV expression .)
    )               reduce using rule 22 (expression -> expression DOTDIV expression .)
    :               reduce using rule 22 (expression -> expression DOTDIV expression .)
    {               reduce using rule 22 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 22 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 22 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 22 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 22 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 22 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 22 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 22 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 22 (expression -> expression DOTDIV expression .)
    [               reduce using rule 22 (expression -> expression DOTDIV expression .)
    ZEROES          reduce using rule 22 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 22 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 22 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 22 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 22 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 22 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTSUB          [ shift and go to state 56 ]
  ! DOTMLP          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 101

    (24) expression -> expression EQ expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 24 (expression -> expression EQ expression .)
    TRANSPOSE       reduce using rule 24 (expression -> expression EQ expression .)
    EQ              reduce using rule 24 (expression -> expression EQ expression .)
    NE              reduce using rule 24 (expression -> expression EQ expression .)
    >               reduce using rule 24 (expression -> expression EQ expression .)
    GOE             reduce using rule 24 (expression -> expression EQ expression .)
    <               reduce using rule 24 (expression -> expression EQ expression .)
    LOE             reduce using rule 24 (expression -> expression EQ expression .)
    ,               reduce using rule 24 (expression -> expression EQ expression .)
    ]               reduce using rule 24 (expression -> expression EQ expression .)
    )               reduce using rule 24 (expression -> expression EQ expression .)
    :               reduce using rule 24 (expression -> expression EQ expression .)
    {               reduce using rule 24 (expression -> expression EQ expression .)
    ID              reduce using rule 24 (expression -> expression EQ expression .)
    BREAK           reduce using rule 24 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 24 (expression -> expression EQ expression .)
    FOR             reduce using rule 24 (expression -> expression EQ expression .)
    WHILE           reduce using rule 24 (expression -> expression EQ expression .)
    PRINT           reduce using rule 24 (expression -> expression EQ expression .)
    RETURN          reduce using rule 24 (expression -> expression EQ expression .)
    STRING          reduce using rule 24 (expression -> expression EQ expression .)
    [               reduce using rule 24 (expression -> expression EQ expression .)
    ZEROES          reduce using rule 24 (expression -> expression EQ expression .)
    EYE             reduce using rule 24 (expression -> expression EQ expression .)
    ONES            reduce using rule 24 (expression -> expression EQ expression .)
    IF              reduce using rule 24 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 24 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression EQ expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! +               [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DOTMLP          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 102

    (25) expression -> expression NE expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 25 (expression -> expression NE expression .)
    TRANSPOSE       reduce using rule 25 (expression -> expression NE expression .)
    EQ              reduce using rule 25 (expression -> expression NE expression .)
    NE              reduce using rule 25 (expression -> expression NE expression .)
    >               reduce using rule 25 (expression -> expression NE expression .)
    GOE             reduce using rule 25 (expression -> expression NE expression .)
    <               reduce using rule 25 (expression -> expression NE expression .)
    LOE             reduce using rule 25 (expression -> expression NE expression .)
    ,               reduce using rule 25 (expression -> expression NE expression .)
    ]               reduce using rule 25 (expression -> expression NE expression .)
    )               reduce using rule 25 (expression -> expression NE expression .)
    :               reduce using rule 25 (expression -> expression NE expression .)
    {               reduce using rule 25 (expression -> expression NE expression .)
    ID              reduce using rule 25 (expression -> expression NE expression .)
    BREAK           reduce using rule 25 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 25 (expression -> expression NE expression .)
    FOR             reduce using rule 25 (expression -> expression NE expression .)
    WHILE           reduce using rule 25 (expression -> expression NE expression .)
    PRINT           reduce using rule 25 (expression -> expression NE expression .)
    RETURN          reduce using rule 25 (expression -> expression NE expression .)
    STRING          reduce using rule 25 (expression -> expression NE expression .)
    [               reduce using rule 25 (expression -> expression NE expression .)
    ZEROES          reduce using rule 25 (expression -> expression NE expression .)
    EYE             reduce using rule 25 (expression -> expression NE expression .)
    ONES            reduce using rule 25 (expression -> expression NE expression .)
    IF              reduce using rule 25 (expression -> expression NE expression .)
    INTNUM          reduce using rule 25 (expression -> expression NE expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression NE expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! +               [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! -               [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! *               [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DOTADD          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DOTSUB          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DOTMLP          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 103

    (26) expression -> expression > expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 26 (expression -> expression > expression .)
    TRANSPOSE       reduce using rule 26 (expression -> expression > expression .)
    EQ              reduce using rule 26 (expression -> expression > expression .)
    NE              reduce using rule 26 (expression -> expression > expression .)
    >               reduce using rule 26 (expression -> expression > expression .)
    GOE             reduce using rule 26 (expression -> expression > expression .)
    <               reduce using rule 26 (expression -> expression > expression .)
    LOE             reduce using rule 26 (expression -> expression > expression .)
    ,               reduce using rule 26 (expression -> expression > expression .)
    ]               reduce using rule 26 (expression -> expression > expression .)
    )               reduce using rule 26 (expression -> expression > expression .)
    :               reduce using rule 26 (expression -> expression > expression .)
    {               reduce using rule 26 (expression -> expression > expression .)
    ID              reduce using rule 26 (expression -> expression > expression .)
    BREAK           reduce using rule 26 (expression -> expression > expression .)
    CONTINUE        reduce using rule 26 (expression -> expression > expression .)
    FOR             reduce using rule 26 (expression -> expression > expression .)
    WHILE           reduce using rule 26 (expression -> expression > expression .)
    PRINT           reduce using rule 26 (expression -> expression > expression .)
    RETURN          reduce using rule 26 (expression -> expression > expression .)
    STRING          reduce using rule 26 (expression -> expression > expression .)
    [               reduce using rule 26 (expression -> expression > expression .)
    ZEROES          reduce using rule 26 (expression -> expression > expression .)
    EYE             reduce using rule 26 (expression -> expression > expression .)
    ONES            reduce using rule 26 (expression -> expression > expression .)
    IF              reduce using rule 26 (expression -> expression > expression .)
    INTNUM          reduce using rule 26 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 26 (expression -> expression > expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! +               [ reduce using rule 26 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 26 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 26 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 26 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 26 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 26 (expression -> expression > expression .) ]
  ! DOTMLP          [ reduce using rule 26 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 26 (expression -> expression > expression .) ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 104

    (27) expression -> expression GOE expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 27 (expression -> expression GOE expression .)
    TRANSPOSE       reduce using rule 27 (expression -> expression GOE expression .)
    EQ              reduce using rule 27 (expression -> expression GOE expression .)
    NE              reduce using rule 27 (expression -> expression GOE expression .)
    >               reduce using rule 27 (expression -> expression GOE expression .)
    GOE             reduce using rule 27 (expression -> expression GOE expression .)
    <               reduce using rule 27 (expression -> expression GOE expression .)
    LOE             reduce using rule 27 (expression -> expression GOE expression .)
    ,               reduce using rule 27 (expression -> expression GOE expression .)
    ]               reduce using rule 27 (expression -> expression GOE expression .)
    )               reduce using rule 27 (expression -> expression GOE expression .)
    :               reduce using rule 27 (expression -> expression GOE expression .)
    {               reduce using rule 27 (expression -> expression GOE expression .)
    ID              reduce using rule 27 (expression -> expression GOE expression .)
    BREAK           reduce using rule 27 (expression -> expression GOE expression .)
    CONTINUE        reduce using rule 27 (expression -> expression GOE expression .)
    FOR             reduce using rule 27 (expression -> expression GOE expression .)
    WHILE           reduce using rule 27 (expression -> expression GOE expression .)
    PRINT           reduce using rule 27 (expression -> expression GOE expression .)
    RETURN          reduce using rule 27 (expression -> expression GOE expression .)
    STRING          reduce using rule 27 (expression -> expression GOE expression .)
    [               reduce using rule 27 (expression -> expression GOE expression .)
    ZEROES          reduce using rule 27 (expression -> expression GOE expression .)
    EYE             reduce using rule 27 (expression -> expression GOE expression .)
    ONES            reduce using rule 27 (expression -> expression GOE expression .)
    IF              reduce using rule 27 (expression -> expression GOE expression .)
    INTNUM          reduce using rule 27 (expression -> expression GOE expression .)
    FLOATNUM        reduce using rule 27 (expression -> expression GOE expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! +               [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! -               [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! *               [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! /               [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! DOTADD          [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! DOTSUB          [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! DOTMLP          [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! DOTDIV          [ reduce using rule 27 (expression -> expression GOE expression .) ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 105

    (28) expression -> expression < expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 28 (expression -> expression < expression .)
    TRANSPOSE       reduce using rule 28 (expression -> expression < expression .)
    EQ              reduce using rule 28 (expression -> expression < expression .)
    NE              reduce using rule 28 (expression -> expression < expression .)
    >               reduce using rule 28 (expression -> expression < expression .)
    GOE             reduce using rule 28 (expression -> expression < expression .)
    <               reduce using rule 28 (expression -> expression < expression .)
    LOE             reduce using rule 28 (expression -> expression < expression .)
    ,               reduce using rule 28 (expression -> expression < expression .)
    ]               reduce using rule 28 (expression -> expression < expression .)
    )               reduce using rule 28 (expression -> expression < expression .)
    :               reduce using rule 28 (expression -> expression < expression .)
    {               reduce using rule 28 (expression -> expression < expression .)
    ID              reduce using rule 28 (expression -> expression < expression .)
    BREAK           reduce using rule 28 (expression -> expression < expression .)
    CONTINUE        reduce using rule 28 (expression -> expression < expression .)
    FOR             reduce using rule 28 (expression -> expression < expression .)
    WHILE           reduce using rule 28 (expression -> expression < expression .)
    PRINT           reduce using rule 28 (expression -> expression < expression .)
    RETURN          reduce using rule 28 (expression -> expression < expression .)
    STRING          reduce using rule 28 (expression -> expression < expression .)
    [               reduce using rule 28 (expression -> expression < expression .)
    ZEROES          reduce using rule 28 (expression -> expression < expression .)
    EYE             reduce using rule 28 (expression -> expression < expression .)
    ONES            reduce using rule 28 (expression -> expression < expression .)
    IF              reduce using rule 28 (expression -> expression < expression .)
    INTNUM          reduce using rule 28 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 28 (expression -> expression < expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! +               [ reduce using rule 28 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 28 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 28 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 28 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> expression < expression .) ]
  ! DOTMLP          [ reduce using rule 28 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> expression < expression .) ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 106

    (29) expression -> expression LOE expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 29 (expression -> expression LOE expression .)
    TRANSPOSE       reduce using rule 29 (expression -> expression LOE expression .)
    EQ              reduce using rule 29 (expression -> expression LOE expression .)
    NE              reduce using rule 29 (expression -> expression LOE expression .)
    >               reduce using rule 29 (expression -> expression LOE expression .)
    GOE             reduce using rule 29 (expression -> expression LOE expression .)
    <               reduce using rule 29 (expression -> expression LOE expression .)
    LOE             reduce using rule 29 (expression -> expression LOE expression .)
    ,               reduce using rule 29 (expression -> expression LOE expression .)
    ]               reduce using rule 29 (expression -> expression LOE expression .)
    )               reduce using rule 29 (expression -> expression LOE expression .)
    :               reduce using rule 29 (expression -> expression LOE expression .)
    {               reduce using rule 29 (expression -> expression LOE expression .)
    ID              reduce using rule 29 (expression -> expression LOE expression .)
    BREAK           reduce using rule 29 (expression -> expression LOE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression LOE expression .)
    FOR             reduce using rule 29 (expression -> expression LOE expression .)
    WHILE           reduce using rule 29 (expression -> expression LOE expression .)
    PRINT           reduce using rule 29 (expression -> expression LOE expression .)
    RETURN          reduce using rule 29 (expression -> expression LOE expression .)
    STRING          reduce using rule 29 (expression -> expression LOE expression .)
    [               reduce using rule 29 (expression -> expression LOE expression .)
    ZEROES          reduce using rule 29 (expression -> expression LOE expression .)
    EYE             reduce using rule 29 (expression -> expression LOE expression .)
    ONES            reduce using rule 29 (expression -> expression LOE expression .)
    IF              reduce using rule 29 (expression -> expression LOE expression .)
    INTNUM          reduce using rule 29 (expression -> expression LOE expression .)
    FLOATNUM        reduce using rule 29 (expression -> expression LOE expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! +               [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! -               [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! *               [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! /               [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! DOTADD          [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! DOTSUB          [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! DOTMLP          [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> expression LOE expression .) ]
  ! TRANSPOSE       [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 60 ]
  ! NE              [ shift and go to state 61 ]
  ! >               [ shift and go to state 62 ]
  ! GOE             [ shift and go to state 63 ]
  ! <               [ shift and go to state 64 ]
  ! LOE             [ shift and go to state 65 ]


state 107

    (46) code_block -> { statements_list } .

    {               reduce using rule 46 (code_block -> { statements_list } .)
    ID              reduce using rule 46 (code_block -> { statements_list } .)
    BREAK           reduce using rule 46 (code_block -> { statements_list } .)
    CONTINUE        reduce using rule 46 (code_block -> { statements_list } .)
    FOR             reduce using rule 46 (code_block -> { statements_list } .)
    WHILE           reduce using rule 46 (code_block -> { statements_list } .)
    PRINT           reduce using rule 46 (code_block -> { statements_list } .)
    RETURN          reduce using rule 46 (code_block -> { statements_list } .)
    STRING          reduce using rule 46 (code_block -> { statements_list } .)
    [               reduce using rule 46 (code_block -> { statements_list } .)
    ZEROES          reduce using rule 46 (code_block -> { statements_list } .)
    EYE             reduce using rule 46 (code_block -> { statements_list } .)
    ONES            reduce using rule 46 (code_block -> { statements_list } .)
    -               reduce using rule 46 (code_block -> { statements_list } .)
    IF              reduce using rule 46 (code_block -> { statements_list } .)
    INTNUM          reduce using rule 46 (code_block -> { statements_list } .)
    FLOATNUM        reduce using rule 46 (code_block -> { statements_list } .)
    $end            reduce using rule 46 (code_block -> { statements_list } .)
    }               reduce using rule 46 (code_block -> { statements_list } .)
    ELSE            reduce using rule 46 (code_block -> { statements_list } .)


state 108

    (47) code_block -> { instruction } .

    {               reduce using rule 47 (code_block -> { instruction } .)
    ID              reduce using rule 47 (code_block -> { instruction } .)
    BREAK           reduce using rule 47 (code_block -> { instruction } .)
    CONTINUE        reduce using rule 47 (code_block -> { instruction } .)
    FOR             reduce using rule 47 (code_block -> { instruction } .)
    WHILE           reduce using rule 47 (code_block -> { instruction } .)
    PRINT           reduce using rule 47 (code_block -> { instruction } .)
    RETURN          reduce using rule 47 (code_block -> { instruction } .)
    STRING          reduce using rule 47 (code_block -> { instruction } .)
    [               reduce using rule 47 (code_block -> { instruction } .)
    ZEROES          reduce using rule 47 (code_block -> { instruction } .)
    EYE             reduce using rule 47 (code_block -> { instruction } .)
    ONES            reduce using rule 47 (code_block -> { instruction } .)
    -               reduce using rule 47 (code_block -> { instruction } .)
    IF              reduce using rule 47 (code_block -> { instruction } .)
    INTNUM          reduce using rule 47 (code_block -> { instruction } .)
    FLOATNUM        reduce using rule 47 (code_block -> { instruction } .)
    $end            reduce using rule 47 (code_block -> { instruction } .)
    }               reduce using rule 47 (code_block -> { instruction } .)
    ELSE            reduce using rule 47 (code_block -> { instruction } .)


state 109

    (9) expression -> [ expression ] .

    ;               reduce using rule 9 (expression -> [ expression ] .)
    +               reduce using rule 9 (expression -> [ expression ] .)
    -               reduce using rule 9 (expression -> [ expression ] .)
    *               reduce using rule 9 (expression -> [ expression ] .)
    /               reduce using rule 9 (expression -> [ expression ] .)
    DOTADD          reduce using rule 9 (expression -> [ expression ] .)
    DOTSUB          reduce using rule 9 (expression -> [ expression ] .)
    DOTMLP          reduce using rule 9 (expression -> [ expression ] .)
    DOTDIV          reduce using rule 9 (expression -> [ expression ] .)
    TRANSPOSE       reduce using rule 9 (expression -> [ expression ] .)
    EQ              reduce using rule 9 (expression -> [ expression ] .)
    NE              reduce using rule 9 (expression -> [ expression ] .)
    >               reduce using rule 9 (expression -> [ expression ] .)
    GOE             reduce using rule 9 (expression -> [ expression ] .)
    <               reduce using rule 9 (expression -> [ expression ] .)
    LOE             reduce using rule 9 (expression -> [ expression ] .)
    ,               reduce using rule 9 (expression -> [ expression ] .)
    ]               reduce using rule 9 (expression -> [ expression ] .)
    )               reduce using rule 9 (expression -> [ expression ] .)
    :               reduce using rule 9 (expression -> [ expression ] .)
    {               reduce using rule 9 (expression -> [ expression ] .)
    ID              reduce using rule 9 (expression -> [ expression ] .)
    BREAK           reduce using rule 9 (expression -> [ expression ] .)
    CONTINUE        reduce using rule 9 (expression -> [ expression ] .)
    FOR             reduce using rule 9 (expression -> [ expression ] .)
    WHILE           reduce using rule 9 (expression -> [ expression ] .)
    PRINT           reduce using rule 9 (expression -> [ expression ] .)
    RETURN          reduce using rule 9 (expression -> [ expression ] .)
    STRING          reduce using rule 9 (expression -> [ expression ] .)
    [               reduce using rule 9 (expression -> [ expression ] .)
    ZEROES          reduce using rule 9 (expression -> [ expression ] .)
    EYE             reduce using rule 9 (expression -> [ expression ] .)
    ONES            reduce using rule 9 (expression -> [ expression ] .)
    IF              reduce using rule 9 (expression -> [ expression ] .)
    INTNUM          reduce using rule 9 (expression -> [ expression ] .)
    FLOATNUM        reduce using rule 9 (expression -> [ expression ] .)


state 110

    (10) expression -> [ table ] .

    ;               reduce using rule 10 (expression -> [ table ] .)
    +               reduce using rule 10 (expression -> [ table ] .)
    -               reduce using rule 10 (expression -> [ table ] .)
    *               reduce using rule 10 (expression -> [ table ] .)
    /               reduce using rule 10 (expression -> [ table ] .)
    DOTADD          reduce using rule 10 (expression -> [ table ] .)
    DOTSUB          reduce using rule 10 (expression -> [ table ] .)
    DOTMLP          reduce using rule 10 (expression -> [ table ] .)
    DOTDIV          reduce using rule 10 (expression -> [ table ] .)
    TRANSPOSE       reduce using rule 10 (expression -> [ table ] .)
    EQ              reduce using rule 10 (expression -> [ table ] .)
    NE              reduce using rule 10 (expression -> [ table ] .)
    >               reduce using rule 10 (expression -> [ table ] .)
    GOE             reduce using rule 10 (expression -> [ table ] .)
    <               reduce using rule 10 (expression -> [ table ] .)
    LOE             reduce using rule 10 (expression -> [ table ] .)
    ,               reduce using rule 10 (expression -> [ table ] .)
    ]               reduce using rule 10 (expression -> [ table ] .)
    )               reduce using rule 10 (expression -> [ table ] .)
    :               reduce using rule 10 (expression -> [ table ] .)
    {               reduce using rule 10 (expression -> [ table ] .)
    ID              reduce using rule 10 (expression -> [ table ] .)
    BREAK           reduce using rule 10 (expression -> [ table ] .)
    CONTINUE        reduce using rule 10 (expression -> [ table ] .)
    FOR             reduce using rule 10 (expression -> [ table ] .)
    WHILE           reduce using rule 10 (expression -> [ table ] .)
    PRINT           reduce using rule 10 (expression -> [ table ] .)
    RETURN          reduce using rule 10 (expression -> [ table ] .)
    STRING          reduce using rule 10 (expression -> [ table ] .)
    [               reduce using rule 10 (expression -> [ table ] .)
    ZEROES          reduce using rule 10 (expression -> [ table ] .)
    EYE             reduce using rule 10 (expression -> [ table ] .)
    ONES            reduce using rule 10 (expression -> [ table ] .)
    IF              reduce using rule 10 (expression -> [ table ] .)
    INTNUM          reduce using rule 10 (expression -> [ table ] .)
    FLOATNUM        reduce using rule 10 (expression -> [ table ] .)


state 111

    (11) expression -> ZEROES ( number . )

    )               shift and go to state 131


state 112

    (12) expression -> EYE ( number . )

    )               shift and go to state 132


state 113

    (13) expression -> ONES ( number . )

    )               shift and go to state 133


state 114

    (31) instruction -> ID = expression ; .

    {               reduce using rule 31 (instruction -> ID = expression ; .)
    ID              reduce using rule 31 (instruction -> ID = expression ; .)
    BREAK           reduce using rule 31 (instruction -> ID = expression ; .)
    CONTINUE        reduce using rule 31 (instruction -> ID = expression ; .)
    FOR             reduce using rule 31 (instruction -> ID = expression ; .)
    WHILE           reduce using rule 31 (instruction -> ID = expression ; .)
    PRINT           reduce using rule 31 (instruction -> ID = expression ; .)
    RETURN          reduce using rule 31 (instruction -> ID = expression ; .)
    STRING          reduce using rule 31 (instruction -> ID = expression ; .)
    [               reduce using rule 31 (instruction -> ID = expression ; .)
    ZEROES          reduce using rule 31 (instruction -> ID = expression ; .)
    EYE             reduce using rule 31 (instruction -> ID = expression ; .)
    ONES            reduce using rule 31 (instruction -> ID = expression ; .)
    -               reduce using rule 31 (instruction -> ID = expression ; .)
    IF              reduce using rule 31 (instruction -> ID = expression ; .)
    INTNUM          reduce using rule 31 (instruction -> ID = expression ; .)
    FLOATNUM        reduce using rule 31 (instruction -> ID = expression ; .)
    $end            reduce using rule 31 (instruction -> ID = expression ; .)
    }               reduce using rule 31 (instruction -> ID = expression ; .)


state 115

    (32) instruction -> ID SUBASSIGN expression ; .

    {               reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    ID              reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    BREAK           reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    FOR             reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    WHILE           reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    PRINT           reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    RETURN          reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    STRING          reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    [               reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    ZEROES          reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    EYE             reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    ONES            reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    -               reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    IF              reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    INTNUM          reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    FLOATNUM        reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    $end            reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)
    }               reduce using rule 32 (instruction -> ID SUBASSIGN expression ; .)


state 116

    (33) instruction -> ID ADDASSIGN expression ; .

    {               reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    ID              reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    BREAK           reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    FOR             reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    WHILE           reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    PRINT           reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    RETURN          reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    STRING          reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    [               reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    ZEROES          reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    EYE             reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    ONES            reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    -               reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    IF              reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    INTNUM          reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    FLOATNUM        reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    $end            reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)
    }               reduce using rule 33 (instruction -> ID ADDASSIGN expression ; .)


state 117

    (34) instruction -> ID MLPASSIGN expression ; .

    {               reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    ID              reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    BREAK           reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    CONTINUE        reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    FOR             reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    WHILE           reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    PRINT           reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    RETURN          reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    STRING          reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    [               reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    ZEROES          reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    EYE             reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    ONES            reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    -               reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    IF              reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    INTNUM          reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    FLOATNUM        reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    $end            reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)
    }               reduce using rule 34 (instruction -> ID MLPASSIGN expression ; .)


state 118

    (35) instruction -> ID DIVASSIGN expression ; .

    {               reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    ID              reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    BREAK           reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    FOR             reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    WHILE           reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    PRINT           reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    RETURN          reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    STRING          reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    [               reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    ZEROES          reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    EYE             reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    ONES            reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    -               reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    IF              reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    INTNUM          reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    FLOATNUM        reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    $end            reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)
    }               reduce using rule 35 (instruction -> ID DIVASSIGN expression ; .)


state 119

    (3) matrix_el -> ID [ number , . number ]
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    number                         shift and go to state 134

state 120

    (36) instruction -> matrix_el = expression ; .

    {               reduce using rule 36 (instruction -> matrix_el = expression ; .)
    ID              reduce using rule 36 (instruction -> matrix_el = expression ; .)
    BREAK           reduce using rule 36 (instruction -> matrix_el = expression ; .)
    CONTINUE        reduce using rule 36 (instruction -> matrix_el = expression ; .)
    FOR             reduce using rule 36 (instruction -> matrix_el = expression ; .)
    WHILE           reduce using rule 36 (instruction -> matrix_el = expression ; .)
    PRINT           reduce using rule 36 (instruction -> matrix_el = expression ; .)
    RETURN          reduce using rule 36 (instruction -> matrix_el = expression ; .)
    STRING          reduce using rule 36 (instruction -> matrix_el = expression ; .)
    [               reduce using rule 36 (instruction -> matrix_el = expression ; .)
    ZEROES          reduce using rule 36 (instruction -> matrix_el = expression ; .)
    EYE             reduce using rule 36 (instruction -> matrix_el = expression ; .)
    ONES            reduce using rule 36 (instruction -> matrix_el = expression ; .)
    -               reduce using rule 36 (instruction -> matrix_el = expression ; .)
    IF              reduce using rule 36 (instruction -> matrix_el = expression ; .)
    INTNUM          reduce using rule 36 (instruction -> matrix_el = expression ; .)
    FLOATNUM        reduce using rule 36 (instruction -> matrix_el = expression ; .)
    $end            reduce using rule 36 (instruction -> matrix_el = expression ; .)
    }               reduce using rule 36 (instruction -> matrix_el = expression ; .)


state 121

    (37) instruction -> matrix_el SUBASSIGN expression ; .

    {               reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    ID              reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    BREAK           reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    FOR             reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    WHILE           reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    PRINT           reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    RETURN          reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    STRING          reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    [               reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    ZEROES          reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    EYE             reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    ONES            reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    -               reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    IF              reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    INTNUM          reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    FLOATNUM        reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    $end            reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)
    }               reduce using rule 37 (instruction -> matrix_el SUBASSIGN expression ; .)


state 122

    (38) instruction -> matrix_el ADDASSIGN expression ; .

    {               reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    ID              reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    BREAK           reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    FOR             reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    WHILE           reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    PRINT           reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    RETURN          reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    STRING          reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    [               reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    ZEROES          reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    EYE             reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    ONES            reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    -               reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    IF              reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    INTNUM          reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    FLOATNUM        reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    $end            reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)
    }               reduce using rule 38 (instruction -> matrix_el ADDASSIGN expression ; .)


state 123

    (39) instruction -> matrix_el MLPASSIGN expression ; .

    {               reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    ID              reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    BREAK           reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    CONTINUE        reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    FOR             reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    WHILE           reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    PRINT           reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    RETURN          reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    STRING          reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    [               reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    ZEROES          reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    EYE             reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    ONES            reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    -               reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    IF              reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    INTNUM          reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    FLOATNUM        reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    $end            reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)
    }               reduce using rule 39 (instruction -> matrix_el MLPASSIGN expression ; .)


state 124

    (40) instruction -> matrix_el DIVASSIGN expression ; .

    {               reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    ID              reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    BREAK           reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    FOR             reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    WHILE           reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    PRINT           reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    RETURN          reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    STRING          reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    [               reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    ZEROES          reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    EYE             reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    ONES            reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    -               reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    IF              reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    INTNUM          reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    FLOATNUM        reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    $end            reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)
    }               reduce using rule 40 (instruction -> matrix_el DIVASSIGN expression ; .)


state 125

    (50) instruction -> FOR ID = range . code_block
    (51) instruction -> FOR ID = range . instruction
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 16
    ID              shift and go to state 17
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    IF              shift and go to state 12
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    code_block                     shift and go to state 135
    instruction                    shift and go to state 136
    expression                     shift and go to state 15
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9
    number                         shift and go to state 18

state 126

    (30) range -> expression . : expression
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    :               shift and go to state 137
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 127

    (52) instruction -> WHILE ( expression ) . code_block
    (53) instruction -> WHILE ( expression ) . instruction
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (31) instruction -> . ID = expression ;
    (32) instruction -> . ID SUBASSIGN expression ;
    (33) instruction -> . ID ADDASSIGN expression ;
    (34) instruction -> . ID MLPASSIGN expression ;
    (35) instruction -> . ID DIVASSIGN expression ;
    (36) instruction -> . matrix_el = expression ;
    (37) instruction -> . matrix_el SUBASSIGN expression ;
    (38) instruction -> . matrix_el ADDASSIGN expression ;
    (39) instruction -> . matrix_el MLPASSIGN expression ;
    (40) instruction -> . matrix_el DIVASSIGN expression ;
    (48) instruction -> . BREAK ;
    (49) instruction -> . CONTINUE ;
    (50) instruction -> . FOR ID = range code_block
    (51) instruction -> . FOR ID = range instruction
    (52) instruction -> . WHILE ( expression ) code_block
    (53) instruction -> . WHILE ( expression ) instruction
    (54) instruction -> . if_block
    (59) instruction -> . PRINT table ;
    (60) instruction -> . PRINT expression ;
    (61) instruction -> . RETURN ;
    (62) instruction -> . RETURN expression ;
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (3) matrix_el -> . ID [ number , number ]
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 16
    ID              shift and go to state 17
    BREAK           shift and go to state 5
    CONTINUE        shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 10
    RETURN          shift and go to state 11
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    IF              shift and go to state 12
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 15
    code_block                     shift and go to state 138
    instruction                    shift and go to state 139
    matrix_el                      shift and go to state 4
    if_block                       shift and go to state 9
    number                         shift and go to state 18

state 128

    (8) table -> table , expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 8 (table -> table , expression .)
    ,               reduce using rule 8 (table -> table , expression .)
    ]               reduce using rule 8 (table -> table , expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 129

    (7) table -> expression , expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

    ;               reduce using rule 7 (table -> expression , expression .)
    ,               reduce using rule 7 (table -> expression , expression .)
    ]               reduce using rule 7 (table -> expression , expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65


state 130

    (55) if_block -> IF ( expression ) . code_block
    (56) if_block -> IF ( expression ) . code_block elseif_block else_block
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 16
    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 15
    code_block                     shift and go to state 140
    number                         shift and go to state 18

state 131

    (11) expression -> ZEROES ( number ) .

    ;               reduce using rule 11 (expression -> ZEROES ( number ) .)
    +               reduce using rule 11 (expression -> ZEROES ( number ) .)
    -               reduce using rule 11 (expression -> ZEROES ( number ) .)
    *               reduce using rule 11 (expression -> ZEROES ( number ) .)
    /               reduce using rule 11 (expression -> ZEROES ( number ) .)
    DOTADD          reduce using rule 11 (expression -> ZEROES ( number ) .)
    DOTSUB          reduce using rule 11 (expression -> ZEROES ( number ) .)
    DOTMLP          reduce using rule 11 (expression -> ZEROES ( number ) .)
    DOTDIV          reduce using rule 11 (expression -> ZEROES ( number ) .)
    TRANSPOSE       reduce using rule 11 (expression -> ZEROES ( number ) .)
    EQ              reduce using rule 11 (expression -> ZEROES ( number ) .)
    NE              reduce using rule 11 (expression -> ZEROES ( number ) .)
    >               reduce using rule 11 (expression -> ZEROES ( number ) .)
    GOE             reduce using rule 11 (expression -> ZEROES ( number ) .)
    <               reduce using rule 11 (expression -> ZEROES ( number ) .)
    LOE             reduce using rule 11 (expression -> ZEROES ( number ) .)
    ,               reduce using rule 11 (expression -> ZEROES ( number ) .)
    ]               reduce using rule 11 (expression -> ZEROES ( number ) .)
    )               reduce using rule 11 (expression -> ZEROES ( number ) .)
    :               reduce using rule 11 (expression -> ZEROES ( number ) .)
    {               reduce using rule 11 (expression -> ZEROES ( number ) .)
    ID              reduce using rule 11 (expression -> ZEROES ( number ) .)
    BREAK           reduce using rule 11 (expression -> ZEROES ( number ) .)
    CONTINUE        reduce using rule 11 (expression -> ZEROES ( number ) .)
    FOR             reduce using rule 11 (expression -> ZEROES ( number ) .)
    WHILE           reduce using rule 11 (expression -> ZEROES ( number ) .)
    PRINT           reduce using rule 11 (expression -> ZEROES ( number ) .)
    RETURN          reduce using rule 11 (expression -> ZEROES ( number ) .)
    STRING          reduce using rule 11 (expression -> ZEROES ( number ) .)
    [               reduce using rule 11 (expression -> ZEROES ( number ) .)
    ZEROES          reduce using rule 11 (expression -> ZEROES ( number ) .)
    EYE             reduce using rule 11 (expression -> ZEROES ( number ) .)
    ONES            reduce using rule 11 (expression -> ZEROES ( number ) .)
    IF              reduce using rule 11 (expression -> ZEROES ( number ) .)
    INTNUM          reduce using rule 11 (expression -> ZEROES ( number ) .)
    FLOATNUM        reduce using rule 11 (expression -> ZEROES ( number ) .)


state 132

    (12) expression -> EYE ( number ) .

    ;               reduce using rule 12 (expression -> EYE ( number ) .)
    +               reduce using rule 12 (expression -> EYE ( number ) .)
    -               reduce using rule 12 (expression -> EYE ( number ) .)
    *               reduce using rule 12 (expression -> EYE ( number ) .)
    /               reduce using rule 12 (expression -> EYE ( number ) .)
    DOTADD          reduce using rule 12 (expression -> EYE ( number ) .)
    DOTSUB          reduce using rule 12 (expression -> EYE ( number ) .)
    DOTMLP          reduce using rule 12 (expression -> EYE ( number ) .)
    DOTDIV          reduce using rule 12 (expression -> EYE ( number ) .)
    TRANSPOSE       reduce using rule 12 (expression -> EYE ( number ) .)
    EQ              reduce using rule 12 (expression -> EYE ( number ) .)
    NE              reduce using rule 12 (expression -> EYE ( number ) .)
    >               reduce using rule 12 (expression -> EYE ( number ) .)
    GOE             reduce using rule 12 (expression -> EYE ( number ) .)
    <               reduce using rule 12 (expression -> EYE ( number ) .)
    LOE             reduce using rule 12 (expression -> EYE ( number ) .)
    ,               reduce using rule 12 (expression -> EYE ( number ) .)
    ]               reduce using rule 12 (expression -> EYE ( number ) .)
    )               reduce using rule 12 (expression -> EYE ( number ) .)
    :               reduce using rule 12 (expression -> EYE ( number ) .)
    {               reduce using rule 12 (expression -> EYE ( number ) .)
    ID              reduce using rule 12 (expression -> EYE ( number ) .)
    BREAK           reduce using rule 12 (expression -> EYE ( number ) .)
    CONTINUE        reduce using rule 12 (expression -> EYE ( number ) .)
    FOR             reduce using rule 12 (expression -> EYE ( number ) .)
    WHILE           reduce using rule 12 (expression -> EYE ( number ) .)
    PRINT           reduce using rule 12 (expression -> EYE ( number ) .)
    RETURN          reduce using rule 12 (expression -> EYE ( number ) .)
    STRING          reduce using rule 12 (expression -> EYE ( number ) .)
    [               reduce using rule 12 (expression -> EYE ( number ) .)
    ZEROES          reduce using rule 12 (expression -> EYE ( number ) .)
    EYE             reduce using rule 12 (expression -> EYE ( number ) .)
    ONES            reduce using rule 12 (expression -> EYE ( number ) .)
    IF              reduce using rule 12 (expression -> EYE ( number ) .)
    INTNUM          reduce using rule 12 (expression -> EYE ( number ) .)
    FLOATNUM        reduce using rule 12 (expression -> EYE ( number ) .)


state 133

    (13) expression -> ONES ( number ) .

    ;               reduce using rule 13 (expression -> ONES ( number ) .)
    +               reduce using rule 13 (expression -> ONES ( number ) .)
    -               reduce using rule 13 (expression -> ONES ( number ) .)
    *               reduce using rule 13 (expression -> ONES ( number ) .)
    /               reduce using rule 13 (expression -> ONES ( number ) .)
    DOTADD          reduce using rule 13 (expression -> ONES ( number ) .)
    DOTSUB          reduce using rule 13 (expression -> ONES ( number ) .)
    DOTMLP          reduce using rule 13 (expression -> ONES ( number ) .)
    DOTDIV          reduce using rule 13 (expression -> ONES ( number ) .)
    TRANSPOSE       reduce using rule 13 (expression -> ONES ( number ) .)
    EQ              reduce using rule 13 (expression -> ONES ( number ) .)
    NE              reduce using rule 13 (expression -> ONES ( number ) .)
    >               reduce using rule 13 (expression -> ONES ( number ) .)
    GOE             reduce using rule 13 (expression -> ONES ( number ) .)
    <               reduce using rule 13 (expression -> ONES ( number ) .)
    LOE             reduce using rule 13 (expression -> ONES ( number ) .)
    ,               reduce using rule 13 (expression -> ONES ( number ) .)
    ]               reduce using rule 13 (expression -> ONES ( number ) .)
    )               reduce using rule 13 (expression -> ONES ( number ) .)
    :               reduce using rule 13 (expression -> ONES ( number ) .)
    {               reduce using rule 13 (expression -> ONES ( number ) .)
    ID              reduce using rule 13 (expression -> ONES ( number ) .)
    BREAK           reduce using rule 13 (expression -> ONES ( number ) .)
    CONTINUE        reduce using rule 13 (expression -> ONES ( number ) .)
    FOR             reduce using rule 13 (expression -> ONES ( number ) .)
    WHILE           reduce using rule 13 (expression -> ONES ( number ) .)
    PRINT           reduce using rule 13 (expression -> ONES ( number ) .)
    RETURN          reduce using rule 13 (expression -> ONES ( number ) .)
    STRING          reduce using rule 13 (expression -> ONES ( number ) .)
    [               reduce using rule 13 (expression -> ONES ( number ) .)
    ZEROES          reduce using rule 13 (expression -> ONES ( number ) .)
    EYE             reduce using rule 13 (expression -> ONES ( number ) .)
    ONES            reduce using rule 13 (expression -> ONES ( number ) .)
    IF              reduce using rule 13 (expression -> ONES ( number ) .)
    INTNUM          reduce using rule 13 (expression -> ONES ( number ) .)
    FLOATNUM        reduce using rule 13 (expression -> ONES ( number ) .)


state 134

    (3) matrix_el -> ID [ number , number . ]

    ]               shift and go to state 141


state 135

    (50) instruction -> FOR ID = range code_block .

    {               reduce using rule 50 (instruction -> FOR ID = range code_block .)
    ID              reduce using rule 50 (instruction -> FOR ID = range code_block .)
    BREAK           reduce using rule 50 (instruction -> FOR ID = range code_block .)
    CONTINUE        reduce using rule 50 (instruction -> FOR ID = range code_block .)
    FOR             reduce using rule 50 (instruction -> FOR ID = range code_block .)
    WHILE           reduce using rule 50 (instruction -> FOR ID = range code_block .)
    PRINT           reduce using rule 50 (instruction -> FOR ID = range code_block .)
    RETURN          reduce using rule 50 (instruction -> FOR ID = range code_block .)
    STRING          reduce using rule 50 (instruction -> FOR ID = range code_block .)
    [               reduce using rule 50 (instruction -> FOR ID = range code_block .)
    ZEROES          reduce using rule 50 (instruction -> FOR ID = range code_block .)
    EYE             reduce using rule 50 (instruction -> FOR ID = range code_block .)
    ONES            reduce using rule 50 (instruction -> FOR ID = range code_block .)
    -               reduce using rule 50 (instruction -> FOR ID = range code_block .)
    IF              reduce using rule 50 (instruction -> FOR ID = range code_block .)
    INTNUM          reduce using rule 50 (instruction -> FOR ID = range code_block .)
    FLOATNUM        reduce using rule 50 (instruction -> FOR ID = range code_block .)
    $end            reduce using rule 50 (instruction -> FOR ID = range code_block .)
    }               reduce using rule 50 (instruction -> FOR ID = range code_block .)


state 136

    (51) instruction -> FOR ID = range instruction .

    {               reduce using rule 51 (instruction -> FOR ID = range instruction .)
    ID              reduce using rule 51 (instruction -> FOR ID = range instruction .)
    BREAK           reduce using rule 51 (instruction -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 51 (instruction -> FOR ID = range instruction .)
    FOR             reduce using rule 51 (instruction -> FOR ID = range instruction .)
    WHILE           reduce using rule 51 (instruction -> FOR ID = range instruction .)
    PRINT           reduce using rule 51 (instruction -> FOR ID = range instruction .)
    RETURN          reduce using rule 51 (instruction -> FOR ID = range instruction .)
    STRING          reduce using rule 51 (instruction -> FOR ID = range instruction .)
    [               reduce using rule 51 (instruction -> FOR ID = range instruction .)
    ZEROES          reduce using rule 51 (instruction -> FOR ID = range instruction .)
    EYE             reduce using rule 51 (instruction -> FOR ID = range instruction .)
    ONES            reduce using rule 51 (instruction -> FOR ID = range instruction .)
    -               reduce using rule 51 (instruction -> FOR ID = range instruction .)
    IF              reduce using rule 51 (instruction -> FOR ID = range instruction .)
    INTNUM          reduce using rule 51 (instruction -> FOR ID = range instruction .)
    FLOATNUM        reduce using rule 51 (instruction -> FOR ID = range instruction .)
    $end            reduce using rule 51 (instruction -> FOR ID = range instruction .)
    }               reduce using rule 51 (instruction -> FOR ID = range instruction .)


state 137

    (30) range -> expression : . expression
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    expression                     shift and go to state 142
    number                         shift and go to state 18

state 138

    (52) instruction -> WHILE ( expression ) code_block .

    {               reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    ID              reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    BREAK           reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    CONTINUE        reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    FOR             reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    WHILE           reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    PRINT           reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    RETURN          reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    STRING          reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    [               reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    ZEROES          reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    EYE             reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    ONES            reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    -               reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    IF              reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    INTNUM          reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    FLOATNUM        reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    $end            reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)
    }               reduce using rule 52 (instruction -> WHILE ( expression ) code_block .)


state 139

    (53) instruction -> WHILE ( expression ) instruction .

    {               reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    ID              reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    STRING          reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    [               reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    ZEROES          reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    -               reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    IF              reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    FLOATNUM        reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    $end            reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)
    }               reduce using rule 53 (instruction -> WHILE ( expression ) instruction .)


state 140

    (55) if_block -> IF ( expression ) code_block .
    (56) if_block -> IF ( expression ) code_block . elseif_block else_block
    (57) elseif_block -> . ELSE if_block

    {               reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    ID              reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    BREAK           reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    CONTINUE        reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    FOR             reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    WHILE           reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    PRINT           reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    RETURN          reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    STRING          reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    [               reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    ZEROES          reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    EYE             reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    ONES            reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    -               reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    IF              reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    INTNUM          reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    FLOATNUM        reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    $end            reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    }               reduce using rule 55 (if_block -> IF ( expression ) code_block .)
    ELSE            reduce using rule 55 (if_block -> IF ( expression ) code_block .)

  ! ELSE            [ shift and go to state 144 ]

    elseif_block                   shift and go to state 143

state 141

    (3) matrix_el -> ID [ number , number ] .

    =               reduce using rule 3 (matrix_el -> ID [ number , number ] .)
    SUBASSIGN       reduce using rule 3 (matrix_el -> ID [ number , number ] .)
    ADDASSIGN       reduce using rule 3 (matrix_el -> ID [ number , number ] .)
    MLPASSIGN       reduce using rule 3 (matrix_el -> ID [ number , number ] .)
    DIVASSIGN       reduce using rule 3 (matrix_el -> ID [ number , number ] .)


state 142

    (30) range -> expression : expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . DOTADD expression
    (20) expression -> expression . DOTSUB expression
    (21) expression -> expression . DOTMLP expression
    (22) expression -> expression . DOTDIV expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . > expression
    (27) expression -> expression . GOE expression
    (28) expression -> expression . < expression
    (29) expression -> expression . LOE expression

  ! shift/reduce conflict for - resolved as shift
    {               reduce using rule 30 (range -> expression : expression .)
    ID              reduce using rule 30 (range -> expression : expression .)
    BREAK           reduce using rule 30 (range -> expression : expression .)
    CONTINUE        reduce using rule 30 (range -> expression : expression .)
    FOR             reduce using rule 30 (range -> expression : expression .)
    WHILE           reduce using rule 30 (range -> expression : expression .)
    PRINT           reduce using rule 30 (range -> expression : expression .)
    RETURN          reduce using rule 30 (range -> expression : expression .)
    STRING          reduce using rule 30 (range -> expression : expression .)
    [               reduce using rule 30 (range -> expression : expression .)
    ZEROES          reduce using rule 30 (range -> expression : expression .)
    EYE             reduce using rule 30 (range -> expression : expression .)
    ONES            reduce using rule 30 (range -> expression : expression .)
    IF              reduce using rule 30 (range -> expression : expression .)
    INTNUM          reduce using rule 30 (range -> expression : expression .)
    FLOATNUM        reduce using rule 30 (range -> expression : expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 55
    DOTSUB          shift and go to state 56
    DOTMLP          shift and go to state 57
    DOTDIV          shift and go to state 58
    TRANSPOSE       shift and go to state 59
    EQ              shift and go to state 60
    NE              shift and go to state 61
    >               shift and go to state 62
    GOE             shift and go to state 63
    <               shift and go to state 64
    LOE             shift and go to state 65

  ! -               [ reduce using rule 30 (range -> expression : expression .) ]


state 143

    (56) if_block -> IF ( expression ) code_block elseif_block . else_block
    (58) else_block -> . ELSE code_block

    ELSE            shift and go to state 146

    else_block                     shift and go to state 145

state 144

    (57) elseif_block -> ELSE . if_block
    (55) if_block -> . IF ( expression ) code_block
    (56) if_block -> . IF ( expression ) code_block elseif_block else_block

    IF              shift and go to state 12

    if_block                       shift and go to state 147

state 145

    (56) if_block -> IF ( expression ) code_block elseif_block else_block .

    {               reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    ID              reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    BREAK           reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    CONTINUE        reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    FOR             reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    WHILE           reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    PRINT           reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    RETURN          reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    STRING          reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    [               reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    ZEROES          reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    EYE             reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    ONES            reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    -               reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    IF              reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    INTNUM          reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    FLOATNUM        reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    $end            reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    }               reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)
    ELSE            reduce using rule 56 (if_block -> IF ( expression ) code_block elseif_block else_block .)


state 146

    (58) else_block -> ELSE . code_block
    (45) code_block -> . expression ;
    (46) code_block -> . { statements_list }
    (47) code_block -> . { instruction }
    (4) expression -> . ID
    (5) expression -> . number
    (6) expression -> . STRING
    (9) expression -> . [ expression ]
    (10) expression -> . [ table ]
    (11) expression -> . ZEROES ( number )
    (12) expression -> . EYE ( number )
    (13) expression -> . ONES ( number )
    (14) expression -> . - expression
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression DOTADD expression
    (20) expression -> . expression DOTSUB expression
    (21) expression -> . expression DOTMLP expression
    (22) expression -> . expression DOTDIV expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression > expression
    (27) expression -> . expression GOE expression
    (28) expression -> . expression < expression
    (29) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 16
    ID              shift and go to state 46
    STRING          shift and go to state 19
    [               shift and go to state 20
    ZEROES          shift and go to state 21
    EYE             shift and go to state 22
    ONES            shift and go to state 23
    -               shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26

    code_block                     shift and go to state 148
    expression                     shift and go to state 15
    number                         shift and go to state 18

state 147

    (57) elseif_block -> ELSE if_block .

    ELSE            reduce using rule 57 (elseif_block -> ELSE if_block .)


state 148

    (58) else_block -> ELSE code_block .

    {               reduce using rule 58 (else_block -> ELSE code_block .)
    ID              reduce using rule 58 (else_block -> ELSE code_block .)
    BREAK           reduce using rule 58 (else_block -> ELSE code_block .)
    CONTINUE        reduce using rule 58 (else_block -> ELSE code_block .)
    FOR             reduce using rule 58 (else_block -> ELSE code_block .)
    WHILE           reduce using rule 58 (else_block -> ELSE code_block .)
    PRINT           reduce using rule 58 (else_block -> ELSE code_block .)
    RETURN          reduce using rule 58 (else_block -> ELSE code_block .)
    STRING          reduce using rule 58 (else_block -> ELSE code_block .)
    [               reduce using rule 58 (else_block -> ELSE code_block .)
    ZEROES          reduce using rule 58 (else_block -> ELSE code_block .)
    EYE             reduce using rule 58 (else_block -> ELSE code_block .)
    ONES            reduce using rule 58 (else_block -> ELSE code_block .)
    -               reduce using rule 58 (else_block -> ELSE code_block .)
    IF              reduce using rule 58 (else_block -> ELSE code_block .)
    INTNUM          reduce using rule 58 (else_block -> ELSE code_block .)
    FLOATNUM        reduce using rule 58 (else_block -> ELSE code_block .)
    $end            reduce using rule 58 (else_block -> ELSE code_block .)
    }               reduce using rule 58 (else_block -> ELSE code_block .)
    ELSE            reduce using rule 58 (else_block -> ELSE code_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for - in state 142 resolved as shift
