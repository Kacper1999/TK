Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     expression -> ID
Rule 4     expression -> INTNUM
Rule 5     expression -> FLOATNUM
Rule 6     expression -> STRING
Rule 7     expression -> - expression
Rule 8     expression -> expression + expression
Rule 9     expression -> expression - expression
Rule 10    expression -> expression * expression
Rule 11    expression -> expression / expression
Rule 12    expression -> expression TRANSPOSE
Rule 13    expression -> ZEROES ( expression )
Rule 14    expression -> EYE ( expression )
Rule 15    expression -> ONES ( expression )
Rule 16    expression -> ID = expression
Rule 17    expression -> ID SUBASSIGN expression
Rule 18    expression -> ID ADDASSIGN expression
Rule 19    expression -> ID MLPASSIGN expression
Rule 20    expression -> ID DIVASSIGN expression
Rule 21    expression -> ID [ expression ] = expression
Rule 22    expression -> ID [ expression ] SUBASSIGN expression
Rule 23    expression -> ID [ expression ] ADDASSIGN expression
Rule 24    expression -> ID [ expression ] MLPASSIGN expression
Rule 25    expression -> ID [ expression ] DIVASSIGN expression
Rule 26    expression -> ID [ expression , expression ] = expression
Rule 27    expression -> ID [ expression , expression ] SUBASSIGN expression
Rule 28    expression -> ID [ expression , expression ] ADDASSIGN expression
Rule 29    expression -> ID [ expression , expression ] MLPASSIGN expression
Rule 30    expression -> ID [ expression , expression ] DIVASSIGN expression
Rule 31    expression -> expression DOTADD expression
Rule 32    expression -> expression DOTSUB expression
Rule 33    expression -> expression DOTMLP expression
Rule 34    expression -> expression DOTDIV expression
Rule 35    expression -> expression EQ expression
Rule 36    expression -> expression NE expression
Rule 37    expression -> expression > expression
Rule 38    expression -> expression GOE expression
Rule 39    expression -> expression < expression
Rule 40    expression -> expression LOE expression
Rule 41    list -> expression
Rule 42    list -> list , expression
Rule 43    expression -> [ ]
Rule 44    expression -> [ list ]
Rule 45    statement -> expression ;
Rule 46    statement -> print_statement
Rule 47    statement -> if_statement
Rule 48    statement -> while_statement
Rule 49    statement -> for_statement
Rule 50    statement -> BREAK ;
Rule 51    statement -> CONTINUE ;
Rule 52    statement -> RETURN expression ;
Rule 53    statement -> ;
Rule 54    statement -> { }
Rule 55    statement -> { statement_list }
Rule 56    statement_list -> statement
Rule 57    statement_list -> statement_list statement
Rule 58    if_statement -> IF ( expression ) statement
Rule 59    if_statement -> IF ( expression ) statement ELSE statement
Rule 60    range -> expression : expression
Rule 61    while_statement -> WHILE ( expression ) statement
Rule 62    for_statement -> FOR ID = range statement
Rule 63    print_statement -> PRINT statement_list
Rule 64    print_statement -> PRINT list

Terminals, with rules where they appear

(                    : 13 14 15 58 59 61
)                    : 13 14 15 58 59 61
*                    : 10
+                    : 8
,                    : 26 27 28 29 30 42
-                    : 7 9
/                    : 11
:                    : 60
;                    : 45 50 51 52 53
<                    : 39
=                    : 16 21 26 62
>                    : 37
ADDASSIGN            : 18 23 28
BREAK                : 50
CONTINUE             : 51
DIVASSIGN            : 20 25 30
DOTADD               : 31
DOTDIV               : 34
DOTMLP               : 33
DOTSUB               : 32
ELSE                 : 59
EQ                   : 35
EYE                  : 14
FLOATNUM             : 5
FOR                  : 62
GOE                  : 38
ID                   : 3 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 62
IF                   : 58 59
INTNUM               : 4
LOE                  : 40
MLPASSIGN            : 19 24 29
NE                   : 36
ONES                 : 15
PRINT                : 63 64
RETURN               : 52
STRING               : 6
SUBASSIGN            : 17 22 27
TRANSPOSE            : 12
WHILE                : 61
ZEROES               : 13
[                    : 21 22 23 24 25 26 27 28 29 30 43 44
]                    : 21 22 23 24 25 26 27 28 29 30 43 44
error                : 
{                    : 54 55
}                    : 54 55

Nonterminals, with rules where they appear

expression           : 7 8 8 9 9 10 10 11 11 12 13 14 15 16 17 18 19 20 21 21 22 22 23 23 24 24 25 25 26 26 26 27 27 27 28 28 28 29 29 29 30 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 42 45 52 58 59 60 60 61
for_statement        : 49
if_statement         : 47
list                 : 42 44 64
print_statement      : 46
program              : 2 0
range                : 62
statement            : 1 2 56 57 58 59 59 61 62
statement_list       : 55 57 63
while_statement      : 48

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    program                        shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement                      shift and go to state 26
    expression                     shift and go to state 3
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 2

    (1) program -> statement .

    BREAK           reduce using rule 1 (program -> statement .)
    CONTINUE        reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    ;               reduce using rule 1 (program -> statement .)
    {               reduce using rule 1 (program -> statement .)
    ID              reduce using rule 1 (program -> statement .)
    INTNUM          reduce using rule 1 (program -> statement .)
    FLOATNUM        reduce using rule 1 (program -> statement .)
    STRING          reduce using rule 1 (program -> statement .)
    -               reduce using rule 1 (program -> statement .)
    ZEROES          reduce using rule 1 (program -> statement .)
    EYE             reduce using rule 1 (program -> statement .)
    ONES            reduce using rule 1 (program -> statement .)
    [               reduce using rule 1 (program -> statement .)
    PRINT           reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (45) statement -> expression . ;
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               shift and go to state 27
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 4

    (53) statement -> ; .

    BREAK           reduce using rule 53 (statement -> ; .)
    CONTINUE        reduce using rule 53 (statement -> ; .)
    RETURN          reduce using rule 53 (statement -> ; .)
    ;               reduce using rule 53 (statement -> ; .)
    {               reduce using rule 53 (statement -> ; .)
    ID              reduce using rule 53 (statement -> ; .)
    INTNUM          reduce using rule 53 (statement -> ; .)
    FLOATNUM        reduce using rule 53 (statement -> ; .)
    STRING          reduce using rule 53 (statement -> ; .)
    -               reduce using rule 53 (statement -> ; .)
    ZEROES          reduce using rule 53 (statement -> ; .)
    EYE             reduce using rule 53 (statement -> ; .)
    ONES            reduce using rule 53 (statement -> ; .)
    [               reduce using rule 53 (statement -> ; .)
    PRINT           reduce using rule 53 (statement -> ; .)
    IF              reduce using rule 53 (statement -> ; .)
    WHILE           reduce using rule 53 (statement -> ; .)
    FOR             reduce using rule 53 (statement -> ; .)
    $end            reduce using rule 53 (statement -> ; .)
    }               reduce using rule 53 (statement -> ; .)
    ELSE            reduce using rule 53 (statement -> ; .)


state 5

    (46) statement -> print_statement .

    BREAK           reduce using rule 46 (statement -> print_statement .)
    CONTINUE        reduce using rule 46 (statement -> print_statement .)
    RETURN          reduce using rule 46 (statement -> print_statement .)
    ;               reduce using rule 46 (statement -> print_statement .)
    {               reduce using rule 46 (statement -> print_statement .)
    ID              reduce using rule 46 (statement -> print_statement .)
    INTNUM          reduce using rule 46 (statement -> print_statement .)
    FLOATNUM        reduce using rule 46 (statement -> print_statement .)
    STRING          reduce using rule 46 (statement -> print_statement .)
    -               reduce using rule 46 (statement -> print_statement .)
    ZEROES          reduce using rule 46 (statement -> print_statement .)
    EYE             reduce using rule 46 (statement -> print_statement .)
    ONES            reduce using rule 46 (statement -> print_statement .)
    [               reduce using rule 46 (statement -> print_statement .)
    PRINT           reduce using rule 46 (statement -> print_statement .)
    IF              reduce using rule 46 (statement -> print_statement .)
    WHILE           reduce using rule 46 (statement -> print_statement .)
    FOR             reduce using rule 46 (statement -> print_statement .)
    $end            reduce using rule 46 (statement -> print_statement .)
    }               reduce using rule 46 (statement -> print_statement .)
    ELSE            reduce using rule 46 (statement -> print_statement .)


state 6

    (47) statement -> if_statement .

    BREAK           reduce using rule 47 (statement -> if_statement .)
    CONTINUE        reduce using rule 47 (statement -> if_statement .)
    RETURN          reduce using rule 47 (statement -> if_statement .)
    ;               reduce using rule 47 (statement -> if_statement .)
    {               reduce using rule 47 (statement -> if_statement .)
    ID              reduce using rule 47 (statement -> if_statement .)
    INTNUM          reduce using rule 47 (statement -> if_statement .)
    FLOATNUM        reduce using rule 47 (statement -> if_statement .)
    STRING          reduce using rule 47 (statement -> if_statement .)
    -               reduce using rule 47 (statement -> if_statement .)
    ZEROES          reduce using rule 47 (statement -> if_statement .)
    EYE             reduce using rule 47 (statement -> if_statement .)
    ONES            reduce using rule 47 (statement -> if_statement .)
    [               reduce using rule 47 (statement -> if_statement .)
    PRINT           reduce using rule 47 (statement -> if_statement .)
    IF              reduce using rule 47 (statement -> if_statement .)
    WHILE           reduce using rule 47 (statement -> if_statement .)
    FOR             reduce using rule 47 (statement -> if_statement .)
    $end            reduce using rule 47 (statement -> if_statement .)
    }               reduce using rule 47 (statement -> if_statement .)
    ELSE            reduce using rule 47 (statement -> if_statement .)


state 7

    (48) statement -> while_statement .

    BREAK           reduce using rule 48 (statement -> while_statement .)
    CONTINUE        reduce using rule 48 (statement -> while_statement .)
    RETURN          reduce using rule 48 (statement -> while_statement .)
    ;               reduce using rule 48 (statement -> while_statement .)
    {               reduce using rule 48 (statement -> while_statement .)
    ID              reduce using rule 48 (statement -> while_statement .)
    INTNUM          reduce using rule 48 (statement -> while_statement .)
    FLOATNUM        reduce using rule 48 (statement -> while_statement .)
    STRING          reduce using rule 48 (statement -> while_statement .)
    -               reduce using rule 48 (statement -> while_statement .)
    ZEROES          reduce using rule 48 (statement -> while_statement .)
    EYE             reduce using rule 48 (statement -> while_statement .)
    ONES            reduce using rule 48 (statement -> while_statement .)
    [               reduce using rule 48 (statement -> while_statement .)
    PRINT           reduce using rule 48 (statement -> while_statement .)
    IF              reduce using rule 48 (statement -> while_statement .)
    WHILE           reduce using rule 48 (statement -> while_statement .)
    FOR             reduce using rule 48 (statement -> while_statement .)
    $end            reduce using rule 48 (statement -> while_statement .)
    }               reduce using rule 48 (statement -> while_statement .)
    ELSE            reduce using rule 48 (statement -> while_statement .)


state 8

    (49) statement -> for_statement .

    BREAK           reduce using rule 49 (statement -> for_statement .)
    CONTINUE        reduce using rule 49 (statement -> for_statement .)
    RETURN          reduce using rule 49 (statement -> for_statement .)
    ;               reduce using rule 49 (statement -> for_statement .)
    {               reduce using rule 49 (statement -> for_statement .)
    ID              reduce using rule 49 (statement -> for_statement .)
    INTNUM          reduce using rule 49 (statement -> for_statement .)
    FLOATNUM        reduce using rule 49 (statement -> for_statement .)
    STRING          reduce using rule 49 (statement -> for_statement .)
    -               reduce using rule 49 (statement -> for_statement .)
    ZEROES          reduce using rule 49 (statement -> for_statement .)
    EYE             reduce using rule 49 (statement -> for_statement .)
    ONES            reduce using rule 49 (statement -> for_statement .)
    [               reduce using rule 49 (statement -> for_statement .)
    PRINT           reduce using rule 49 (statement -> for_statement .)
    IF              reduce using rule 49 (statement -> for_statement .)
    WHILE           reduce using rule 49 (statement -> for_statement .)
    FOR             reduce using rule 49 (statement -> for_statement .)
    $end            reduce using rule 49 (statement -> for_statement .)
    }               reduce using rule 49 (statement -> for_statement .)
    ELSE            reduce using rule 49 (statement -> for_statement .)


state 9

    (50) statement -> BREAK . ;

    ;               shift and go to state 43


state 10

    (51) statement -> CONTINUE . ;

    ;               shift and go to state 44


state 11

    (52) statement -> RETURN . expression ;
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 45

state 12

    (54) statement -> { . }
    (55) statement -> { . statement_list }
    (56) statement_list -> . statement
    (57) statement_list -> . statement_list statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    }               shift and go to state 46
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement_list                 shift and go to state 47
    statement                      shift and go to state 48
    expression                     shift and go to state 3
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 13

    (3) expression -> ID .
    (16) expression -> ID . = expression
    (17) expression -> ID . SUBASSIGN expression
    (18) expression -> ID . ADDASSIGN expression
    (19) expression -> ID . MLPASSIGN expression
    (20) expression -> ID . DIVASSIGN expression
    (21) expression -> ID . [ expression ] = expression
    (22) expression -> ID . [ expression ] SUBASSIGN expression
    (23) expression -> ID . [ expression ] ADDASSIGN expression
    (24) expression -> ID . [ expression ] MLPASSIGN expression
    (25) expression -> ID . [ expression ] DIVASSIGN expression
    (26) expression -> ID . [ expression , expression ] = expression
    (27) expression -> ID . [ expression , expression ] SUBASSIGN expression
    (28) expression -> ID . [ expression , expression ] ADDASSIGN expression
    (29) expression -> ID . [ expression , expression ] MLPASSIGN expression
    (30) expression -> ID . [ expression , expression ] DIVASSIGN expression

  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 3 (expression -> ID .)
    +               reduce using rule 3 (expression -> ID .)
    -               reduce using rule 3 (expression -> ID .)
    *               reduce using rule 3 (expression -> ID .)
    /               reduce using rule 3 (expression -> ID .)
    TRANSPOSE       reduce using rule 3 (expression -> ID .)
    DOTADD          reduce using rule 3 (expression -> ID .)
    DOTSUB          reduce using rule 3 (expression -> ID .)
    DOTMLP          reduce using rule 3 (expression -> ID .)
    DOTDIV          reduce using rule 3 (expression -> ID .)
    EQ              reduce using rule 3 (expression -> ID .)
    NE              reduce using rule 3 (expression -> ID .)
    >               reduce using rule 3 (expression -> ID .)
    GOE             reduce using rule 3 (expression -> ID .)
    <               reduce using rule 3 (expression -> ID .)
    LOE             reduce using rule 3 (expression -> ID .)
    ]               reduce using rule 3 (expression -> ID .)
    ,               reduce using rule 3 (expression -> ID .)
    BREAK           reduce using rule 3 (expression -> ID .)
    CONTINUE        reduce using rule 3 (expression -> ID .)
    RETURN          reduce using rule 3 (expression -> ID .)
    {               reduce using rule 3 (expression -> ID .)
    ID              reduce using rule 3 (expression -> ID .)
    INTNUM          reduce using rule 3 (expression -> ID .)
    FLOATNUM        reduce using rule 3 (expression -> ID .)
    STRING          reduce using rule 3 (expression -> ID .)
    ZEROES          reduce using rule 3 (expression -> ID .)
    EYE             reduce using rule 3 (expression -> ID .)
    ONES            reduce using rule 3 (expression -> ID .)
    PRINT           reduce using rule 3 (expression -> ID .)
    IF              reduce using rule 3 (expression -> ID .)
    WHILE           reduce using rule 3 (expression -> ID .)
    FOR             reduce using rule 3 (expression -> ID .)
    $end            reduce using rule 3 (expression -> ID .)
    }               reduce using rule 3 (expression -> ID .)
    ELSE            reduce using rule 3 (expression -> ID .)
    )               reduce using rule 3 (expression -> ID .)
    :               reduce using rule 3 (expression -> ID .)
    =               shift and go to state 49
    SUBASSIGN       shift and go to state 50
    ADDASSIGN       shift and go to state 51
    MLPASSIGN       shift and go to state 52
    DIVASSIGN       shift and go to state 53
    [               shift and go to state 54

  ! [               [ reduce using rule 3 (expression -> ID .) ]


state 14

    (4) expression -> INTNUM .

    ;               reduce using rule 4 (expression -> INTNUM .)
    +               reduce using rule 4 (expression -> INTNUM .)
    -               reduce using rule 4 (expression -> INTNUM .)
    *               reduce using rule 4 (expression -> INTNUM .)
    /               reduce using rule 4 (expression -> INTNUM .)
    TRANSPOSE       reduce using rule 4 (expression -> INTNUM .)
    DOTADD          reduce using rule 4 (expression -> INTNUM .)
    DOTSUB          reduce using rule 4 (expression -> INTNUM .)
    DOTMLP          reduce using rule 4 (expression -> INTNUM .)
    DOTDIV          reduce using rule 4 (expression -> INTNUM .)
    EQ              reduce using rule 4 (expression -> INTNUM .)
    NE              reduce using rule 4 (expression -> INTNUM .)
    >               reduce using rule 4 (expression -> INTNUM .)
    GOE             reduce using rule 4 (expression -> INTNUM .)
    <               reduce using rule 4 (expression -> INTNUM .)
    LOE             reduce using rule 4 (expression -> INTNUM .)
    ]               reduce using rule 4 (expression -> INTNUM .)
    ,               reduce using rule 4 (expression -> INTNUM .)
    BREAK           reduce using rule 4 (expression -> INTNUM .)
    CONTINUE        reduce using rule 4 (expression -> INTNUM .)
    RETURN          reduce using rule 4 (expression -> INTNUM .)
    {               reduce using rule 4 (expression -> INTNUM .)
    ID              reduce using rule 4 (expression -> INTNUM .)
    INTNUM          reduce using rule 4 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 4 (expression -> INTNUM .)
    STRING          reduce using rule 4 (expression -> INTNUM .)
    ZEROES          reduce using rule 4 (expression -> INTNUM .)
    EYE             reduce using rule 4 (expression -> INTNUM .)
    ONES            reduce using rule 4 (expression -> INTNUM .)
    [               reduce using rule 4 (expression -> INTNUM .)
    PRINT           reduce using rule 4 (expression -> INTNUM .)
    IF              reduce using rule 4 (expression -> INTNUM .)
    WHILE           reduce using rule 4 (expression -> INTNUM .)
    FOR             reduce using rule 4 (expression -> INTNUM .)
    $end            reduce using rule 4 (expression -> INTNUM .)
    }               reduce using rule 4 (expression -> INTNUM .)
    ELSE            reduce using rule 4 (expression -> INTNUM .)
    )               reduce using rule 4 (expression -> INTNUM .)
    :               reduce using rule 4 (expression -> INTNUM .)


state 15

    (5) expression -> FLOATNUM .

    ;               reduce using rule 5 (expression -> FLOATNUM .)
    +               reduce using rule 5 (expression -> FLOATNUM .)
    -               reduce using rule 5 (expression -> FLOATNUM .)
    *               reduce using rule 5 (expression -> FLOATNUM .)
    /               reduce using rule 5 (expression -> FLOATNUM .)
    TRANSPOSE       reduce using rule 5 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 5 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 5 (expression -> FLOATNUM .)
    DOTMLP          reduce using rule 5 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 5 (expression -> FLOATNUM .)
    EQ              reduce using rule 5 (expression -> FLOATNUM .)
    NE              reduce using rule 5 (expression -> FLOATNUM .)
    >               reduce using rule 5 (expression -> FLOATNUM .)
    GOE             reduce using rule 5 (expression -> FLOATNUM .)
    <               reduce using rule 5 (expression -> FLOATNUM .)
    LOE             reduce using rule 5 (expression -> FLOATNUM .)
    ]               reduce using rule 5 (expression -> FLOATNUM .)
    ,               reduce using rule 5 (expression -> FLOATNUM .)
    BREAK           reduce using rule 5 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 5 (expression -> FLOATNUM .)
    RETURN          reduce using rule 5 (expression -> FLOATNUM .)
    {               reduce using rule 5 (expression -> FLOATNUM .)
    ID              reduce using rule 5 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 5 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 5 (expression -> FLOATNUM .)
    STRING          reduce using rule 5 (expression -> FLOATNUM .)
    ZEROES          reduce using rule 5 (expression -> FLOATNUM .)
    EYE             reduce using rule 5 (expression -> FLOATNUM .)
    ONES            reduce using rule 5 (expression -> FLOATNUM .)
    [               reduce using rule 5 (expression -> FLOATNUM .)
    PRINT           reduce using rule 5 (expression -> FLOATNUM .)
    IF              reduce using rule 5 (expression -> FLOATNUM .)
    WHILE           reduce using rule 5 (expression -> FLOATNUM .)
    FOR             reduce using rule 5 (expression -> FLOATNUM .)
    $end            reduce using rule 5 (expression -> FLOATNUM .)
    }               reduce using rule 5 (expression -> FLOATNUM .)
    ELSE            reduce using rule 5 (expression -> FLOATNUM .)
    )               reduce using rule 5 (expression -> FLOATNUM .)
    :               reduce using rule 5 (expression -> FLOATNUM .)


state 16

    (6) expression -> STRING .

    ;               reduce using rule 6 (expression -> STRING .)
    +               reduce using rule 6 (expression -> STRING .)
    -               reduce using rule 6 (expression -> STRING .)
    *               reduce using rule 6 (expression -> STRING .)
    /               reduce using rule 6 (expression -> STRING .)
    TRANSPOSE       reduce using rule 6 (expression -> STRING .)
    DOTADD          reduce using rule 6 (expression -> STRING .)
    DOTSUB          reduce using rule 6 (expression -> STRING .)
    DOTMLP          reduce using rule 6 (expression -> STRING .)
    DOTDIV          reduce using rule 6 (expression -> STRING .)
    EQ              reduce using rule 6 (expression -> STRING .)
    NE              reduce using rule 6 (expression -> STRING .)
    >               reduce using rule 6 (expression -> STRING .)
    GOE             reduce using rule 6 (expression -> STRING .)
    <               reduce using rule 6 (expression -> STRING .)
    LOE             reduce using rule 6 (expression -> STRING .)
    ]               reduce using rule 6 (expression -> STRING .)
    ,               reduce using rule 6 (expression -> STRING .)
    BREAK           reduce using rule 6 (expression -> STRING .)
    CONTINUE        reduce using rule 6 (expression -> STRING .)
    RETURN          reduce using rule 6 (expression -> STRING .)
    {               reduce using rule 6 (expression -> STRING .)
    ID              reduce using rule 6 (expression -> STRING .)
    INTNUM          reduce using rule 6 (expression -> STRING .)
    FLOATNUM        reduce using rule 6 (expression -> STRING .)
    STRING          reduce using rule 6 (expression -> STRING .)
    ZEROES          reduce using rule 6 (expression -> STRING .)
    EYE             reduce using rule 6 (expression -> STRING .)
    ONES            reduce using rule 6 (expression -> STRING .)
    [               reduce using rule 6 (expression -> STRING .)
    PRINT           reduce using rule 6 (expression -> STRING .)
    IF              reduce using rule 6 (expression -> STRING .)
    WHILE           reduce using rule 6 (expression -> STRING .)
    FOR             reduce using rule 6 (expression -> STRING .)
    $end            reduce using rule 6 (expression -> STRING .)
    }               reduce using rule 6 (expression -> STRING .)
    ELSE            reduce using rule 6 (expression -> STRING .)
    )               reduce using rule 6 (expression -> STRING .)
    :               reduce using rule 6 (expression -> STRING .)


state 17

    (7) expression -> - . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 55

state 18

    (13) expression -> ZEROES . ( expression )

    (               shift and go to state 56


state 19

    (14) expression -> EYE . ( expression )

    (               shift and go to state 57


state 20

    (15) expression -> ONES . ( expression )

    (               shift and go to state 58


state 21

    (43) expression -> [ . ]
    (44) expression -> [ . list ]
    (41) list -> . expression
    (42) list -> . list , expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ]               shift and go to state 59
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    list                           shift and go to state 60
    expression                     shift and go to state 61

state 22

    (63) print_statement -> PRINT . statement_list
    (64) print_statement -> PRINT . list
    (56) statement_list -> . statement
    (57) statement_list -> . statement_list statement
    (41) list -> . expression
    (42) list -> . list , expression
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement_list                 shift and go to state 62
    list                           shift and go to state 63
    statement                      shift and go to state 48
    expression                     shift and go to state 64
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 23

    (58) if_statement -> IF . ( expression ) statement
    (59) if_statement -> IF . ( expression ) statement ELSE statement

    (               shift and go to state 65


state 24

    (61) while_statement -> WHILE . ( expression ) statement

    (               shift and go to state 66


state 25

    (62) for_statement -> FOR . ID = range statement

    ID              shift and go to state 67


state 26

    (2) program -> program statement .

    BREAK           reduce using rule 2 (program -> program statement .)
    CONTINUE        reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    ;               reduce using rule 2 (program -> program statement .)
    {               reduce using rule 2 (program -> program statement .)
    ID              reduce using rule 2 (program -> program statement .)
    INTNUM          reduce using rule 2 (program -> program statement .)
    FLOATNUM        reduce using rule 2 (program -> program statement .)
    STRING          reduce using rule 2 (program -> program statement .)
    -               reduce using rule 2 (program -> program statement .)
    ZEROES          reduce using rule 2 (program -> program statement .)
    EYE             reduce using rule 2 (program -> program statement .)
    ONES            reduce using rule 2 (program -> program statement .)
    [               reduce using rule 2 (program -> program statement .)
    PRINT           reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 27

    (45) statement -> expression ; .

    BREAK           reduce using rule 45 (statement -> expression ; .)
    CONTINUE        reduce using rule 45 (statement -> expression ; .)
    RETURN          reduce using rule 45 (statement -> expression ; .)
    ;               reduce using rule 45 (statement -> expression ; .)
    {               reduce using rule 45 (statement -> expression ; .)
    ID              reduce using rule 45 (statement -> expression ; .)
    INTNUM          reduce using rule 45 (statement -> expression ; .)
    FLOATNUM        reduce using rule 45 (statement -> expression ; .)
    STRING          reduce using rule 45 (statement -> expression ; .)
    -               reduce using rule 45 (statement -> expression ; .)
    ZEROES          reduce using rule 45 (statement -> expression ; .)
    EYE             reduce using rule 45 (statement -> expression ; .)
    ONES            reduce using rule 45 (statement -> expression ; .)
    [               reduce using rule 45 (statement -> expression ; .)
    PRINT           reduce using rule 45 (statement -> expression ; .)
    IF              reduce using rule 45 (statement -> expression ; .)
    WHILE           reduce using rule 45 (statement -> expression ; .)
    FOR             reduce using rule 45 (statement -> expression ; .)
    $end            reduce using rule 45 (statement -> expression ; .)
    }               reduce using rule 45 (statement -> expression ; .)
    ELSE            reduce using rule 45 (statement -> expression ; .)


state 28

    (8) expression -> expression + . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 68

state 29

    (9) expression -> expression - . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 69

state 30

    (10) expression -> expression * . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 70

state 31

    (11) expression -> expression / . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 71

state 32

    (12) expression -> expression TRANSPOSE .

    ;               reduce using rule 12 (expression -> expression TRANSPOSE .)
    +               reduce using rule 12 (expression -> expression TRANSPOSE .)
    -               reduce using rule 12 (expression -> expression TRANSPOSE .)
    *               reduce using rule 12 (expression -> expression TRANSPOSE .)
    /               reduce using rule 12 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 12 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 12 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 12 (expression -> expression TRANSPOSE .)
    DOTMLP          reduce using rule 12 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 12 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 12 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 12 (expression -> expression TRANSPOSE .)
    >               reduce using rule 12 (expression -> expression TRANSPOSE .)
    GOE             reduce using rule 12 (expression -> expression TRANSPOSE .)
    <               reduce using rule 12 (expression -> expression TRANSPOSE .)
    LOE             reduce using rule 12 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 12 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 12 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 12 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 12 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 12 (expression -> expression TRANSPOSE .)
    {               reduce using rule 12 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 12 (expression -> expression TRANSPOSE .)
    INTNUM          reduce using rule 12 (expression -> expression TRANSPOSE .)
    FLOATNUM        reduce using rule 12 (expression -> expression TRANSPOSE .)
    STRING          reduce using rule 12 (expression -> expression TRANSPOSE .)
    ZEROES          reduce using rule 12 (expression -> expression TRANSPOSE .)
    EYE             reduce using rule 12 (expression -> expression TRANSPOSE .)
    ONES            reduce using rule 12 (expression -> expression TRANSPOSE .)
    [               reduce using rule 12 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 12 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 12 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 12 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 12 (expression -> expression TRANSPOSE .)
    $end            reduce using rule 12 (expression -> expression TRANSPOSE .)
    }               reduce using rule 12 (expression -> expression TRANSPOSE .)
    ELSE            reduce using rule 12 (expression -> expression TRANSPOSE .)
    )               reduce using rule 12 (expression -> expression TRANSPOSE .)
    :               reduce using rule 12 (expression -> expression TRANSPOSE .)


state 33

    (31) expression -> expression DOTADD . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 72

state 34

    (32) expression -> expression DOTSUB . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 73

state 35

    (33) expression -> expression DOTMLP . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 74

state 36

    (34) expression -> expression DOTDIV . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 75

state 37

    (35) expression -> expression EQ . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 76

state 38

    (36) expression -> expression NE . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 77

state 39

    (37) expression -> expression > . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 78

state 40

    (38) expression -> expression GOE . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 79

state 41

    (39) expression -> expression < . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 80

state 42

    (40) expression -> expression LOE . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 81

state 43

    (50) statement -> BREAK ; .

    BREAK           reduce using rule 50 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 50 (statement -> BREAK ; .)
    RETURN          reduce using rule 50 (statement -> BREAK ; .)
    ;               reduce using rule 50 (statement -> BREAK ; .)
    {               reduce using rule 50 (statement -> BREAK ; .)
    ID              reduce using rule 50 (statement -> BREAK ; .)
    INTNUM          reduce using rule 50 (statement -> BREAK ; .)
    FLOATNUM        reduce using rule 50 (statement -> BREAK ; .)
    STRING          reduce using rule 50 (statement -> BREAK ; .)
    -               reduce using rule 50 (statement -> BREAK ; .)
    ZEROES          reduce using rule 50 (statement -> BREAK ; .)
    EYE             reduce using rule 50 (statement -> BREAK ; .)
    ONES            reduce using rule 50 (statement -> BREAK ; .)
    [               reduce using rule 50 (statement -> BREAK ; .)
    PRINT           reduce using rule 50 (statement -> BREAK ; .)
    IF              reduce using rule 50 (statement -> BREAK ; .)
    WHILE           reduce using rule 50 (statement -> BREAK ; .)
    FOR             reduce using rule 50 (statement -> BREAK ; .)
    $end            reduce using rule 50 (statement -> BREAK ; .)
    }               reduce using rule 50 (statement -> BREAK ; .)
    ELSE            reduce using rule 50 (statement -> BREAK ; .)


state 44

    (51) statement -> CONTINUE ; .

    BREAK           reduce using rule 51 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 51 (statement -> CONTINUE ; .)
    RETURN          reduce using rule 51 (statement -> CONTINUE ; .)
    ;               reduce using rule 51 (statement -> CONTINUE ; .)
    {               reduce using rule 51 (statement -> CONTINUE ; .)
    ID              reduce using rule 51 (statement -> CONTINUE ; .)
    INTNUM          reduce using rule 51 (statement -> CONTINUE ; .)
    FLOATNUM        reduce using rule 51 (statement -> CONTINUE ; .)
    STRING          reduce using rule 51 (statement -> CONTINUE ; .)
    -               reduce using rule 51 (statement -> CONTINUE ; .)
    ZEROES          reduce using rule 51 (statement -> CONTINUE ; .)
    EYE             reduce using rule 51 (statement -> CONTINUE ; .)
    ONES            reduce using rule 51 (statement -> CONTINUE ; .)
    [               reduce using rule 51 (statement -> CONTINUE ; .)
    PRINT           reduce using rule 51 (statement -> CONTINUE ; .)
    IF              reduce using rule 51 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 51 (statement -> CONTINUE ; .)
    FOR             reduce using rule 51 (statement -> CONTINUE ; .)
    $end            reduce using rule 51 (statement -> CONTINUE ; .)
    }               reduce using rule 51 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 51 (statement -> CONTINUE ; .)


state 45

    (52) statement -> RETURN expression . ;
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               shift and go to state 82
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 46

    (54) statement -> { } .

    BREAK           reduce using rule 54 (statement -> { } .)
    CONTINUE        reduce using rule 54 (statement -> { } .)
    RETURN          reduce using rule 54 (statement -> { } .)
    ;               reduce using rule 54 (statement -> { } .)
    {               reduce using rule 54 (statement -> { } .)
    ID              reduce using rule 54 (statement -> { } .)
    INTNUM          reduce using rule 54 (statement -> { } .)
    FLOATNUM        reduce using rule 54 (statement -> { } .)
    STRING          reduce using rule 54 (statement -> { } .)
    -               reduce using rule 54 (statement -> { } .)
    ZEROES          reduce using rule 54 (statement -> { } .)
    EYE             reduce using rule 54 (statement -> { } .)
    ONES            reduce using rule 54 (statement -> { } .)
    [               reduce using rule 54 (statement -> { } .)
    PRINT           reduce using rule 54 (statement -> { } .)
    IF              reduce using rule 54 (statement -> { } .)
    WHILE           reduce using rule 54 (statement -> { } .)
    FOR             reduce using rule 54 (statement -> { } .)
    $end            reduce using rule 54 (statement -> { } .)
    }               reduce using rule 54 (statement -> { } .)
    ELSE            reduce using rule 54 (statement -> { } .)


state 47

    (55) statement -> { statement_list . }
    (57) statement_list -> statement_list . statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    }               shift and go to state 83
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement                      shift and go to state 84
    expression                     shift and go to state 3
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 48

    (56) statement_list -> statement .

    }               reduce using rule 56 (statement_list -> statement .)
    BREAK           reduce using rule 56 (statement_list -> statement .)
    CONTINUE        reduce using rule 56 (statement_list -> statement .)
    RETURN          reduce using rule 56 (statement_list -> statement .)
    ;               reduce using rule 56 (statement_list -> statement .)
    {               reduce using rule 56 (statement_list -> statement .)
    ID              reduce using rule 56 (statement_list -> statement .)
    INTNUM          reduce using rule 56 (statement_list -> statement .)
    FLOATNUM        reduce using rule 56 (statement_list -> statement .)
    STRING          reduce using rule 56 (statement_list -> statement .)
    -               reduce using rule 56 (statement_list -> statement .)
    ZEROES          reduce using rule 56 (statement_list -> statement .)
    EYE             reduce using rule 56 (statement_list -> statement .)
    ONES            reduce using rule 56 (statement_list -> statement .)
    [               reduce using rule 56 (statement_list -> statement .)
    PRINT           reduce using rule 56 (statement_list -> statement .)
    IF              reduce using rule 56 (statement_list -> statement .)
    WHILE           reduce using rule 56 (statement_list -> statement .)
    FOR             reduce using rule 56 (statement_list -> statement .)
    $end            reduce using rule 56 (statement_list -> statement .)
    ELSE            reduce using rule 56 (statement_list -> statement .)


state 49

    (16) expression -> ID = . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 85

state 50

    (17) expression -> ID SUBASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 86

state 51

    (18) expression -> ID ADDASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 87

state 52

    (19) expression -> ID MLPASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 88

state 53

    (20) expression -> ID DIVASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 89

state 54

    (21) expression -> ID [ . expression ] = expression
    (22) expression -> ID [ . expression ] SUBASSIGN expression
    (23) expression -> ID [ . expression ] ADDASSIGN expression
    (24) expression -> ID [ . expression ] MLPASSIGN expression
    (25) expression -> ID [ . expression ] DIVASSIGN expression
    (26) expression -> ID [ . expression , expression ] = expression
    (27) expression -> ID [ . expression , expression ] SUBASSIGN expression
    (28) expression -> ID [ . expression , expression ] ADDASSIGN expression
    (29) expression -> ID [ . expression , expression ] MLPASSIGN expression
    (30) expression -> ID [ . expression , expression ] DIVASSIGN expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 90

state 55

    (7) expression -> - expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 7 (expression -> - expression .)
    +               reduce using rule 7 (expression -> - expression .)
    -               reduce using rule 7 (expression -> - expression .)
    TRANSPOSE       reduce using rule 7 (expression -> - expression .)
    EQ              reduce using rule 7 (expression -> - expression .)
    NE              reduce using rule 7 (expression -> - expression .)
    >               reduce using rule 7 (expression -> - expression .)
    GOE             reduce using rule 7 (expression -> - expression .)
    <               reduce using rule 7 (expression -> - expression .)
    LOE             reduce using rule 7 (expression -> - expression .)
    ]               reduce using rule 7 (expression -> - expression .)
    ,               reduce using rule 7 (expression -> - expression .)
    BREAK           reduce using rule 7 (expression -> - expression .)
    CONTINUE        reduce using rule 7 (expression -> - expression .)
    RETURN          reduce using rule 7 (expression -> - expression .)
    {               reduce using rule 7 (expression -> - expression .)
    ID              reduce using rule 7 (expression -> - expression .)
    INTNUM          reduce using rule 7 (expression -> - expression .)
    FLOATNUM        reduce using rule 7 (expression -> - expression .)
    STRING          reduce using rule 7 (expression -> - expression .)
    ZEROES          reduce using rule 7 (expression -> - expression .)
    EYE             reduce using rule 7 (expression -> - expression .)
    ONES            reduce using rule 7 (expression -> - expression .)
    [               reduce using rule 7 (expression -> - expression .)
    PRINT           reduce using rule 7 (expression -> - expression .)
    IF              reduce using rule 7 (expression -> - expression .)
    WHILE           reduce using rule 7 (expression -> - expression .)
    FOR             reduce using rule 7 (expression -> - expression .)
    $end            reduce using rule 7 (expression -> - expression .)
    }               reduce using rule 7 (expression -> - expression .)
    ELSE            reduce using rule 7 (expression -> - expression .)
    )               reduce using rule 7 (expression -> - expression .)
    :               reduce using rule 7 (expression -> - expression .)
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! *               [ reduce using rule 7 (expression -> - expression .) ]
  ! /               [ reduce using rule 7 (expression -> - expression .) ]
  ! DOTADD          [ reduce using rule 7 (expression -> - expression .) ]
  ! DOTSUB          [ reduce using rule 7 (expression -> - expression .) ]
  ! DOTMLP          [ reduce using rule 7 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 7 (expression -> - expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 56

    (13) expression -> ZEROES ( . expression )
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 91

state 57

    (14) expression -> EYE ( . expression )
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 92

state 58

    (15) expression -> ONES ( . expression )
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 93

state 59

    (43) expression -> [ ] .

    ;               reduce using rule 43 (expression -> [ ] .)
    +               reduce using rule 43 (expression -> [ ] .)
    -               reduce using rule 43 (expression -> [ ] .)
    *               reduce using rule 43 (expression -> [ ] .)
    /               reduce using rule 43 (expression -> [ ] .)
    TRANSPOSE       reduce using rule 43 (expression -> [ ] .)
    DOTADD          reduce using rule 43 (expression -> [ ] .)
    DOTSUB          reduce using rule 43 (expression -> [ ] .)
    DOTMLP          reduce using rule 43 (expression -> [ ] .)
    DOTDIV          reduce using rule 43 (expression -> [ ] .)
    EQ              reduce using rule 43 (expression -> [ ] .)
    NE              reduce using rule 43 (expression -> [ ] .)
    >               reduce using rule 43 (expression -> [ ] .)
    GOE             reduce using rule 43 (expression -> [ ] .)
    <               reduce using rule 43 (expression -> [ ] .)
    LOE             reduce using rule 43 (expression -> [ ] .)
    ]               reduce using rule 43 (expression -> [ ] .)
    ,               reduce using rule 43 (expression -> [ ] .)
    BREAK           reduce using rule 43 (expression -> [ ] .)
    CONTINUE        reduce using rule 43 (expression -> [ ] .)
    RETURN          reduce using rule 43 (expression -> [ ] .)
    {               reduce using rule 43 (expression -> [ ] .)
    ID              reduce using rule 43 (expression -> [ ] .)
    INTNUM          reduce using rule 43 (expression -> [ ] .)
    FLOATNUM        reduce using rule 43 (expression -> [ ] .)
    STRING          reduce using rule 43 (expression -> [ ] .)
    ZEROES          reduce using rule 43 (expression -> [ ] .)
    EYE             reduce using rule 43 (expression -> [ ] .)
    ONES            reduce using rule 43 (expression -> [ ] .)
    [               reduce using rule 43 (expression -> [ ] .)
    PRINT           reduce using rule 43 (expression -> [ ] .)
    IF              reduce using rule 43 (expression -> [ ] .)
    WHILE           reduce using rule 43 (expression -> [ ] .)
    FOR             reduce using rule 43 (expression -> [ ] .)
    $end            reduce using rule 43 (expression -> [ ] .)
    }               reduce using rule 43 (expression -> [ ] .)
    ELSE            reduce using rule 43 (expression -> [ ] .)
    )               reduce using rule 43 (expression -> [ ] .)
    :               reduce using rule 43 (expression -> [ ] .)


state 60

    (44) expression -> [ list . ]
    (42) list -> list . , expression

    ]               shift and go to state 94
    ,               shift and go to state 95


state 61

    (41) list -> expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ]               reduce using rule 41 (list -> expression .)
    ,               reduce using rule 41 (list -> expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 62

    (63) print_statement -> PRINT statement_list .
    (57) statement_list -> statement_list . statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ; resolved as shift
  ! shift/reduce conflict for { resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INTNUM resolved as shift
  ! shift/reduce conflict for FLOATNUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ZEROES resolved as shift
  ! shift/reduce conflict for EYE resolved as shift
  ! shift/reduce conflict for ONES resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 63 (print_statement -> PRINT statement_list .)
    }               reduce using rule 63 (print_statement -> PRINT statement_list .)
    ELSE            reduce using rule 63 (print_statement -> PRINT statement_list .)
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

  ! BREAK           [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! CONTINUE        [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! RETURN          [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! ;               [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! {               [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! ID              [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! INTNUM          [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! FLOATNUM        [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! STRING          [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! -               [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! ZEROES          [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! EYE             [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! ONES            [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! [               [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! PRINT           [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! IF              [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! WHILE           [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]
  ! FOR             [ reduce using rule 63 (print_statement -> PRINT statement_list .) ]

    statement                      shift and go to state 84
    expression                     shift and go to state 3
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 63

    (64) print_statement -> PRINT list .
    (42) list -> list . , expression

    BREAK           reduce using rule 64 (print_statement -> PRINT list .)
    CONTINUE        reduce using rule 64 (print_statement -> PRINT list .)
    RETURN          reduce using rule 64 (print_statement -> PRINT list .)
    ;               reduce using rule 64 (print_statement -> PRINT list .)
    {               reduce using rule 64 (print_statement -> PRINT list .)
    ID              reduce using rule 64 (print_statement -> PRINT list .)
    INTNUM          reduce using rule 64 (print_statement -> PRINT list .)
    FLOATNUM        reduce using rule 64 (print_statement -> PRINT list .)
    STRING          reduce using rule 64 (print_statement -> PRINT list .)
    -               reduce using rule 64 (print_statement -> PRINT list .)
    ZEROES          reduce using rule 64 (print_statement -> PRINT list .)
    EYE             reduce using rule 64 (print_statement -> PRINT list .)
    ONES            reduce using rule 64 (print_statement -> PRINT list .)
    [               reduce using rule 64 (print_statement -> PRINT list .)
    PRINT           reduce using rule 64 (print_statement -> PRINT list .)
    IF              reduce using rule 64 (print_statement -> PRINT list .)
    WHILE           reduce using rule 64 (print_statement -> PRINT list .)
    FOR             reduce using rule 64 (print_statement -> PRINT list .)
    $end            reduce using rule 64 (print_statement -> PRINT list .)
    }               reduce using rule 64 (print_statement -> PRINT list .)
    ELSE            reduce using rule 64 (print_statement -> PRINT list .)
    ,               shift and go to state 95


state 64

    (41) list -> expression .
    (45) statement -> expression . ;
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

  ! shift/reduce conflict for ; resolved as shift
  ! shift/reduce conflict for - resolved as shift
    ,               reduce using rule 41 (list -> expression .)
    BREAK           reduce using rule 41 (list -> expression .)
    CONTINUE        reduce using rule 41 (list -> expression .)
    RETURN          reduce using rule 41 (list -> expression .)
    {               reduce using rule 41 (list -> expression .)
    ID              reduce using rule 41 (list -> expression .)
    INTNUM          reduce using rule 41 (list -> expression .)
    FLOATNUM        reduce using rule 41 (list -> expression .)
    STRING          reduce using rule 41 (list -> expression .)
    ZEROES          reduce using rule 41 (list -> expression .)
    EYE             reduce using rule 41 (list -> expression .)
    ONES            reduce using rule 41 (list -> expression .)
    [               reduce using rule 41 (list -> expression .)
    PRINT           reduce using rule 41 (list -> expression .)
    IF              reduce using rule 41 (list -> expression .)
    WHILE           reduce using rule 41 (list -> expression .)
    FOR             reduce using rule 41 (list -> expression .)
    $end            reduce using rule 41 (list -> expression .)
    }               reduce using rule 41 (list -> expression .)
    ELSE            reduce using rule 41 (list -> expression .)
    ;               shift and go to state 27
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! ;               [ reduce using rule 41 (list -> expression .) ]
  ! -               [ reduce using rule 41 (list -> expression .) ]


state 65

    (58) if_statement -> IF ( . expression ) statement
    (59) if_statement -> IF ( . expression ) statement ELSE statement
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 96

state 66

    (61) while_statement -> WHILE ( . expression ) statement
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 97

state 67

    (62) for_statement -> FOR ID . = range statement

    =               shift and go to state 98


state 68

    (8) expression -> expression + expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 8 (expression -> expression + expression .)
    +               reduce using rule 8 (expression -> expression + expression .)
    -               reduce using rule 8 (expression -> expression + expression .)
    TRANSPOSE       reduce using rule 8 (expression -> expression + expression .)
    EQ              reduce using rule 8 (expression -> expression + expression .)
    NE              reduce using rule 8 (expression -> expression + expression .)
    >               reduce using rule 8 (expression -> expression + expression .)
    GOE             reduce using rule 8 (expression -> expression + expression .)
    <               reduce using rule 8 (expression -> expression + expression .)
    LOE             reduce using rule 8 (expression -> expression + expression .)
    ]               reduce using rule 8 (expression -> expression + expression .)
    ,               reduce using rule 8 (expression -> expression + expression .)
    BREAK           reduce using rule 8 (expression -> expression + expression .)
    CONTINUE        reduce using rule 8 (expression -> expression + expression .)
    RETURN          reduce using rule 8 (expression -> expression + expression .)
    {               reduce using rule 8 (expression -> expression + expression .)
    ID              reduce using rule 8 (expression -> expression + expression .)
    INTNUM          reduce using rule 8 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 8 (expression -> expression + expression .)
    STRING          reduce using rule 8 (expression -> expression + expression .)
    ZEROES          reduce using rule 8 (expression -> expression + expression .)
    EYE             reduce using rule 8 (expression -> expression + expression .)
    ONES            reduce using rule 8 (expression -> expression + expression .)
    [               reduce using rule 8 (expression -> expression + expression .)
    PRINT           reduce using rule 8 (expression -> expression + expression .)
    IF              reduce using rule 8 (expression -> expression + expression .)
    WHILE           reduce using rule 8 (expression -> expression + expression .)
    FOR             reduce using rule 8 (expression -> expression + expression .)
    $end            reduce using rule 8 (expression -> expression + expression .)
    }               reduce using rule 8 (expression -> expression + expression .)
    ELSE            reduce using rule 8 (expression -> expression + expression .)
    )               reduce using rule 8 (expression -> expression + expression .)
    :               reduce using rule 8 (expression -> expression + expression .)
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! *               [ reduce using rule 8 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 8 (expression -> expression + expression .) ]
  ! DOTADD          [ reduce using rule 8 (expression -> expression + expression .) ]
  ! DOTSUB          [ reduce using rule 8 (expression -> expression + expression .) ]
  ! DOTMLP          [ reduce using rule 8 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 8 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 69

    (9) expression -> expression - expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 9 (expression -> expression - expression .)
    +               reduce using rule 9 (expression -> expression - expression .)
    -               reduce using rule 9 (expression -> expression - expression .)
    TRANSPOSE       reduce using rule 9 (expression -> expression - expression .)
    EQ              reduce using rule 9 (expression -> expression - expression .)
    NE              reduce using rule 9 (expression -> expression - expression .)
    >               reduce using rule 9 (expression -> expression - expression .)
    GOE             reduce using rule 9 (expression -> expression - expression .)
    <               reduce using rule 9 (expression -> expression - expression .)
    LOE             reduce using rule 9 (expression -> expression - expression .)
    ]               reduce using rule 9 (expression -> expression - expression .)
    ,               reduce using rule 9 (expression -> expression - expression .)
    BREAK           reduce using rule 9 (expression -> expression - expression .)
    CONTINUE        reduce using rule 9 (expression -> expression - expression .)
    RETURN          reduce using rule 9 (expression -> expression - expression .)
    {               reduce using rule 9 (expression -> expression - expression .)
    ID              reduce using rule 9 (expression -> expression - expression .)
    INTNUM          reduce using rule 9 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 9 (expression -> expression - expression .)
    STRING          reduce using rule 9 (expression -> expression - expression .)
    ZEROES          reduce using rule 9 (expression -> expression - expression .)
    EYE             reduce using rule 9 (expression -> expression - expression .)
    ONES            reduce using rule 9 (expression -> expression - expression .)
    [               reduce using rule 9 (expression -> expression - expression .)
    PRINT           reduce using rule 9 (expression -> expression - expression .)
    IF              reduce using rule 9 (expression -> expression - expression .)
    WHILE           reduce using rule 9 (expression -> expression - expression .)
    FOR             reduce using rule 9 (expression -> expression - expression .)
    $end            reduce using rule 9 (expression -> expression - expression .)
    }               reduce using rule 9 (expression -> expression - expression .)
    ELSE            reduce using rule 9 (expression -> expression - expression .)
    )               reduce using rule 9 (expression -> expression - expression .)
    :               reduce using rule 9 (expression -> expression - expression .)
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! *               [ reduce using rule 9 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 9 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 9 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 9 (expression -> expression - expression .) ]
  ! DOTMLP          [ reduce using rule 9 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 9 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 70

    (10) expression -> expression * expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 10 (expression -> expression * expression .)
    +               reduce using rule 10 (expression -> expression * expression .)
    -               reduce using rule 10 (expression -> expression * expression .)
    *               reduce using rule 10 (expression -> expression * expression .)
    /               reduce using rule 10 (expression -> expression * expression .)
    TRANSPOSE       reduce using rule 10 (expression -> expression * expression .)
    EQ              reduce using rule 10 (expression -> expression * expression .)
    NE              reduce using rule 10 (expression -> expression * expression .)
    >               reduce using rule 10 (expression -> expression * expression .)
    GOE             reduce using rule 10 (expression -> expression * expression .)
    <               reduce using rule 10 (expression -> expression * expression .)
    LOE             reduce using rule 10 (expression -> expression * expression .)
    ]               reduce using rule 10 (expression -> expression * expression .)
    ,               reduce using rule 10 (expression -> expression * expression .)
    BREAK           reduce using rule 10 (expression -> expression * expression .)
    CONTINUE        reduce using rule 10 (expression -> expression * expression .)
    RETURN          reduce using rule 10 (expression -> expression * expression .)
    {               reduce using rule 10 (expression -> expression * expression .)
    ID              reduce using rule 10 (expression -> expression * expression .)
    INTNUM          reduce using rule 10 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 10 (expression -> expression * expression .)
    STRING          reduce using rule 10 (expression -> expression * expression .)
    ZEROES          reduce using rule 10 (expression -> expression * expression .)
    EYE             reduce using rule 10 (expression -> expression * expression .)
    ONES            reduce using rule 10 (expression -> expression * expression .)
    [               reduce using rule 10 (expression -> expression * expression .)
    PRINT           reduce using rule 10 (expression -> expression * expression .)
    IF              reduce using rule 10 (expression -> expression * expression .)
    WHILE           reduce using rule 10 (expression -> expression * expression .)
    FOR             reduce using rule 10 (expression -> expression * expression .)
    $end            reduce using rule 10 (expression -> expression * expression .)
    }               reduce using rule 10 (expression -> expression * expression .)
    ELSE            reduce using rule 10 (expression -> expression * expression .)
    )               reduce using rule 10 (expression -> expression * expression .)
    :               reduce using rule 10 (expression -> expression * expression .)
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! DOTADD          [ reduce using rule 10 (expression -> expression * expression .) ]
  ! DOTSUB          [ reduce using rule 10 (expression -> expression * expression .) ]
  ! DOTMLP          [ reduce using rule 10 (expression -> expression * expression .) ]
  ! DOTDIV          [ reduce using rule 10 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! *               [ shift and go to state 30 ]
  ! /               [ shift and go to state 31 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 71

    (11) expression -> expression / expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 11 (expression -> expression / expression .)
    +               reduce using rule 11 (expression -> expression / expression .)
    -               reduce using rule 11 (expression -> expression / expression .)
    *               reduce using rule 11 (expression -> expression / expression .)
    /               reduce using rule 11 (expression -> expression / expression .)
    TRANSPOSE       reduce using rule 11 (expression -> expression / expression .)
    EQ              reduce using rule 11 (expression -> expression / expression .)
    NE              reduce using rule 11 (expression -> expression / expression .)
    >               reduce using rule 11 (expression -> expression / expression .)
    GOE             reduce using rule 11 (expression -> expression / expression .)
    <               reduce using rule 11 (expression -> expression / expression .)
    LOE             reduce using rule 11 (expression -> expression / expression .)
    ]               reduce using rule 11 (expression -> expression / expression .)
    ,               reduce using rule 11 (expression -> expression / expression .)
    BREAK           reduce using rule 11 (expression -> expression / expression .)
    CONTINUE        reduce using rule 11 (expression -> expression / expression .)
    RETURN          reduce using rule 11 (expression -> expression / expression .)
    {               reduce using rule 11 (expression -> expression / expression .)
    ID              reduce using rule 11 (expression -> expression / expression .)
    INTNUM          reduce using rule 11 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 11 (expression -> expression / expression .)
    STRING          reduce using rule 11 (expression -> expression / expression .)
    ZEROES          reduce using rule 11 (expression -> expression / expression .)
    EYE             reduce using rule 11 (expression -> expression / expression .)
    ONES            reduce using rule 11 (expression -> expression / expression .)
    [               reduce using rule 11 (expression -> expression / expression .)
    PRINT           reduce using rule 11 (expression -> expression / expression .)
    IF              reduce using rule 11 (expression -> expression / expression .)
    WHILE           reduce using rule 11 (expression -> expression / expression .)
    FOR             reduce using rule 11 (expression -> expression / expression .)
    $end            reduce using rule 11 (expression -> expression / expression .)
    }               reduce using rule 11 (expression -> expression / expression .)
    ELSE            reduce using rule 11 (expression -> expression / expression .)
    )               reduce using rule 11 (expression -> expression / expression .)
    :               reduce using rule 11 (expression -> expression / expression .)
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! DOTADD          [ reduce using rule 11 (expression -> expression / expression .) ]
  ! DOTSUB          [ reduce using rule 11 (expression -> expression / expression .) ]
  ! DOTMLP          [ reduce using rule 11 (expression -> expression / expression .) ]
  ! DOTDIV          [ reduce using rule 11 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! *               [ shift and go to state 30 ]
  ! /               [ shift and go to state 31 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 72

    (31) expression -> expression DOTADD expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 31 (expression -> expression DOTADD expression .)
    +               reduce using rule 31 (expression -> expression DOTADD expression .)
    -               reduce using rule 31 (expression -> expression DOTADD expression .)
    *               reduce using rule 31 (expression -> expression DOTADD expression .)
    /               reduce using rule 31 (expression -> expression DOTADD expression .)
    TRANSPOSE       reduce using rule 31 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 31 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 31 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 31 (expression -> expression DOTADD expression .)
    NE              reduce using rule 31 (expression -> expression DOTADD expression .)
    >               reduce using rule 31 (expression -> expression DOTADD expression .)
    GOE             reduce using rule 31 (expression -> expression DOTADD expression .)
    <               reduce using rule 31 (expression -> expression DOTADD expression .)
    LOE             reduce using rule 31 (expression -> expression DOTADD expression .)
    ]               reduce using rule 31 (expression -> expression DOTADD expression .)
    ,               reduce using rule 31 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 31 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 31 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 31 (expression -> expression DOTADD expression .)
    {               reduce using rule 31 (expression -> expression DOTADD expression .)
    ID              reduce using rule 31 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 31 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 31 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 31 (expression -> expression DOTADD expression .)
    ZEROES          reduce using rule 31 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 31 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 31 (expression -> expression DOTADD expression .)
    [               reduce using rule 31 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 31 (expression -> expression DOTADD expression .)
    IF              reduce using rule 31 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 31 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 31 (expression -> expression DOTADD expression .)
    $end            reduce using rule 31 (expression -> expression DOTADD expression .)
    }               reduce using rule 31 (expression -> expression DOTADD expression .)
    ELSE            reduce using rule 31 (expression -> expression DOTADD expression .)
    )               reduce using rule 31 (expression -> expression DOTADD expression .)
    :               reduce using rule 31 (expression -> expression DOTADD expression .)
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! DOTMLP          [ reduce using rule 31 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 31 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! *               [ shift and go to state 30 ]
  ! /               [ shift and go to state 31 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! DOTADD          [ shift and go to state 33 ]
  ! DOTSUB          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 73

    (32) expression -> expression DOTSUB expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 32 (expression -> expression DOTSUB expression .)
    +               reduce using rule 32 (expression -> expression DOTSUB expression .)
    -               reduce using rule 32 (expression -> expression DOTSUB expression .)
    *               reduce using rule 32 (expression -> expression DOTSUB expression .)
    /               reduce using rule 32 (expression -> expression DOTSUB expression .)
    TRANSPOSE       reduce using rule 32 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 32 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 32 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 32 (expression -> expression DOTSUB expression .)
    NE              reduce using rule 32 (expression -> expression DOTSUB expression .)
    >               reduce using rule 32 (expression -> expression DOTSUB expression .)
    GOE             reduce using rule 32 (expression -> expression DOTSUB expression .)
    <               reduce using rule 32 (expression -> expression DOTSUB expression .)
    LOE             reduce using rule 32 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 32 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 32 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 32 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 32 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 32 (expression -> expression DOTSUB expression .)
    {               reduce using rule 32 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 32 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 32 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 32 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 32 (expression -> expression DOTSUB expression .)
    ZEROES          reduce using rule 32 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 32 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 32 (expression -> expression DOTSUB expression .)
    [               reduce using rule 32 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 32 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 32 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 32 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 32 (expression -> expression DOTSUB expression .)
    $end            reduce using rule 32 (expression -> expression DOTSUB expression .)
    }               reduce using rule 32 (expression -> expression DOTSUB expression .)
    ELSE            reduce using rule 32 (expression -> expression DOTSUB expression .)
    )               reduce using rule 32 (expression -> expression DOTSUB expression .)
    :               reduce using rule 32 (expression -> expression DOTSUB expression .)
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! DOTMLP          [ reduce using rule 32 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! *               [ shift and go to state 30 ]
  ! /               [ shift and go to state 31 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! DOTADD          [ shift and go to state 33 ]
  ! DOTSUB          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 74

    (33) expression -> expression DOTMLP expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 33 (expression -> expression DOTMLP expression .)
    +               reduce using rule 33 (expression -> expression DOTMLP expression .)
    -               reduce using rule 33 (expression -> expression DOTMLP expression .)
    *               reduce using rule 33 (expression -> expression DOTMLP expression .)
    /               reduce using rule 33 (expression -> expression DOTMLP expression .)
    TRANSPOSE       reduce using rule 33 (expression -> expression DOTMLP expression .)
    DOTADD          reduce using rule 33 (expression -> expression DOTMLP expression .)
    DOTSUB          reduce using rule 33 (expression -> expression DOTMLP expression .)
    DOTMLP          reduce using rule 33 (expression -> expression DOTMLP expression .)
    DOTDIV          reduce using rule 33 (expression -> expression DOTMLP expression .)
    EQ              reduce using rule 33 (expression -> expression DOTMLP expression .)
    NE              reduce using rule 33 (expression -> expression DOTMLP expression .)
    >               reduce using rule 33 (expression -> expression DOTMLP expression .)
    GOE             reduce using rule 33 (expression -> expression DOTMLP expression .)
    <               reduce using rule 33 (expression -> expression DOTMLP expression .)
    LOE             reduce using rule 33 (expression -> expression DOTMLP expression .)
    ]               reduce using rule 33 (expression -> expression DOTMLP expression .)
    ,               reduce using rule 33 (expression -> expression DOTMLP expression .)
    BREAK           reduce using rule 33 (expression -> expression DOTMLP expression .)
    CONTINUE        reduce using rule 33 (expression -> expression DOTMLP expression .)
    RETURN          reduce using rule 33 (expression -> expression DOTMLP expression .)
    {               reduce using rule 33 (expression -> expression DOTMLP expression .)
    ID              reduce using rule 33 (expression -> expression DOTMLP expression .)
    INTNUM          reduce using rule 33 (expression -> expression DOTMLP expression .)
    FLOATNUM        reduce using rule 33 (expression -> expression DOTMLP expression .)
    STRING          reduce using rule 33 (expression -> expression DOTMLP expression .)
    ZEROES          reduce using rule 33 (expression -> expression DOTMLP expression .)
    EYE             reduce using rule 33 (expression -> expression DOTMLP expression .)
    ONES            reduce using rule 33 (expression -> expression DOTMLP expression .)
    [               reduce using rule 33 (expression -> expression DOTMLP expression .)
    PRINT           reduce using rule 33 (expression -> expression DOTMLP expression .)
    IF              reduce using rule 33 (expression -> expression DOTMLP expression .)
    WHILE           reduce using rule 33 (expression -> expression DOTMLP expression .)
    FOR             reduce using rule 33 (expression -> expression DOTMLP expression .)
    $end            reduce using rule 33 (expression -> expression DOTMLP expression .)
    }               reduce using rule 33 (expression -> expression DOTMLP expression .)
    ELSE            reduce using rule 33 (expression -> expression DOTMLP expression .)
    )               reduce using rule 33 (expression -> expression DOTMLP expression .)
    :               reduce using rule 33 (expression -> expression DOTMLP expression .)

  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! *               [ shift and go to state 30 ]
  ! /               [ shift and go to state 31 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! DOTADD          [ shift and go to state 33 ]
  ! DOTSUB          [ shift and go to state 34 ]
  ! DOTMLP          [ shift and go to state 35 ]
  ! DOTDIV          [ shift and go to state 36 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 75

    (34) expression -> expression DOTDIV expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 34 (expression -> expression DOTDIV expression .)
    +               reduce using rule 34 (expression -> expression DOTDIV expression .)
    -               reduce using rule 34 (expression -> expression DOTDIV expression .)
    *               reduce using rule 34 (expression -> expression DOTDIV expression .)
    /               reduce using rule 34 (expression -> expression DOTDIV expression .)
    TRANSPOSE       reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTMLP          reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 34 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 34 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 34 (expression -> expression DOTDIV expression .)
    >               reduce using rule 34 (expression -> expression DOTDIV expression .)
    GOE             reduce using rule 34 (expression -> expression DOTDIV expression .)
    <               reduce using rule 34 (expression -> expression DOTDIV expression .)
    LOE             reduce using rule 34 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 34 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 34 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 34 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 34 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 34 (expression -> expression DOTDIV expression .)
    {               reduce using rule 34 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 34 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 34 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 34 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 34 (expression -> expression DOTDIV expression .)
    ZEROES          reduce using rule 34 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 34 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 34 (expression -> expression DOTDIV expression .)
    [               reduce using rule 34 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 34 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 34 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 34 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 34 (expression -> expression DOTDIV expression .)
    $end            reduce using rule 34 (expression -> expression DOTDIV expression .)
    }               reduce using rule 34 (expression -> expression DOTDIV expression .)
    ELSE            reduce using rule 34 (expression -> expression DOTDIV expression .)
    )               reduce using rule 34 (expression -> expression DOTDIV expression .)
    :               reduce using rule 34 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 28 ]
  ! -               [ shift and go to state 29 ]
  ! *               [ shift and go to state 30 ]
  ! /               [ shift and go to state 31 ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! DOTADD          [ shift and go to state 33 ]
  ! DOTSUB          [ shift and go to state 34 ]
  ! DOTMLP          [ shift and go to state 35 ]
  ! DOTDIV          [ shift and go to state 36 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 76

    (35) expression -> expression EQ expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 35 (expression -> expression EQ expression .)
    TRANSPOSE       reduce using rule 35 (expression -> expression EQ expression .)
    EQ              reduce using rule 35 (expression -> expression EQ expression .)
    NE              reduce using rule 35 (expression -> expression EQ expression .)
    >               reduce using rule 35 (expression -> expression EQ expression .)
    GOE             reduce using rule 35 (expression -> expression EQ expression .)
    <               reduce using rule 35 (expression -> expression EQ expression .)
    LOE             reduce using rule 35 (expression -> expression EQ expression .)
    ]               reduce using rule 35 (expression -> expression EQ expression .)
    ,               reduce using rule 35 (expression -> expression EQ expression .)
    BREAK           reduce using rule 35 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 35 (expression -> expression EQ expression .)
    RETURN          reduce using rule 35 (expression -> expression EQ expression .)
    {               reduce using rule 35 (expression -> expression EQ expression .)
    ID              reduce using rule 35 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 35 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 35 (expression -> expression EQ expression .)
    STRING          reduce using rule 35 (expression -> expression EQ expression .)
    ZEROES          reduce using rule 35 (expression -> expression EQ expression .)
    EYE             reduce using rule 35 (expression -> expression EQ expression .)
    ONES            reduce using rule 35 (expression -> expression EQ expression .)
    [               reduce using rule 35 (expression -> expression EQ expression .)
    PRINT           reduce using rule 35 (expression -> expression EQ expression .)
    IF              reduce using rule 35 (expression -> expression EQ expression .)
    WHILE           reduce using rule 35 (expression -> expression EQ expression .)
    FOR             reduce using rule 35 (expression -> expression EQ expression .)
    $end            reduce using rule 35 (expression -> expression EQ expression .)
    }               reduce using rule 35 (expression -> expression EQ expression .)
    ELSE            reduce using rule 35 (expression -> expression EQ expression .)
    )               reduce using rule 35 (expression -> expression EQ expression .)
    :               reduce using rule 35 (expression -> expression EQ expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! +               [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DOTMLP          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 77

    (36) expression -> expression NE expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 36 (expression -> expression NE expression .)
    TRANSPOSE       reduce using rule 36 (expression -> expression NE expression .)
    EQ              reduce using rule 36 (expression -> expression NE expression .)
    NE              reduce using rule 36 (expression -> expression NE expression .)
    >               reduce using rule 36 (expression -> expression NE expression .)
    GOE             reduce using rule 36 (expression -> expression NE expression .)
    <               reduce using rule 36 (expression -> expression NE expression .)
    LOE             reduce using rule 36 (expression -> expression NE expression .)
    ]               reduce using rule 36 (expression -> expression NE expression .)
    ,               reduce using rule 36 (expression -> expression NE expression .)
    BREAK           reduce using rule 36 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 36 (expression -> expression NE expression .)
    RETURN          reduce using rule 36 (expression -> expression NE expression .)
    {               reduce using rule 36 (expression -> expression NE expression .)
    ID              reduce using rule 36 (expression -> expression NE expression .)
    INTNUM          reduce using rule 36 (expression -> expression NE expression .)
    FLOATNUM        reduce using rule 36 (expression -> expression NE expression .)
    STRING          reduce using rule 36 (expression -> expression NE expression .)
    ZEROES          reduce using rule 36 (expression -> expression NE expression .)
    EYE             reduce using rule 36 (expression -> expression NE expression .)
    ONES            reduce using rule 36 (expression -> expression NE expression .)
    [               reduce using rule 36 (expression -> expression NE expression .)
    PRINT           reduce using rule 36 (expression -> expression NE expression .)
    IF              reduce using rule 36 (expression -> expression NE expression .)
    WHILE           reduce using rule 36 (expression -> expression NE expression .)
    FOR             reduce using rule 36 (expression -> expression NE expression .)
    $end            reduce using rule 36 (expression -> expression NE expression .)
    }               reduce using rule 36 (expression -> expression NE expression .)
    ELSE            reduce using rule 36 (expression -> expression NE expression .)
    )               reduce using rule 36 (expression -> expression NE expression .)
    :               reduce using rule 36 (expression -> expression NE expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! +               [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! -               [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! *               [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! /               [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! DOTADD          [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! DOTSUB          [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! DOTMLP          [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! DOTDIV          [ reduce using rule 36 (expression -> expression NE expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 78

    (37) expression -> expression > expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 37 (expression -> expression > expression .)
    TRANSPOSE       reduce using rule 37 (expression -> expression > expression .)
    EQ              reduce using rule 37 (expression -> expression > expression .)
    NE              reduce using rule 37 (expression -> expression > expression .)
    >               reduce using rule 37 (expression -> expression > expression .)
    GOE             reduce using rule 37 (expression -> expression > expression .)
    <               reduce using rule 37 (expression -> expression > expression .)
    LOE             reduce using rule 37 (expression -> expression > expression .)
    ]               reduce using rule 37 (expression -> expression > expression .)
    ,               reduce using rule 37 (expression -> expression > expression .)
    BREAK           reduce using rule 37 (expression -> expression > expression .)
    CONTINUE        reduce using rule 37 (expression -> expression > expression .)
    RETURN          reduce using rule 37 (expression -> expression > expression .)
    {               reduce using rule 37 (expression -> expression > expression .)
    ID              reduce using rule 37 (expression -> expression > expression .)
    INTNUM          reduce using rule 37 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 37 (expression -> expression > expression .)
    STRING          reduce using rule 37 (expression -> expression > expression .)
    ZEROES          reduce using rule 37 (expression -> expression > expression .)
    EYE             reduce using rule 37 (expression -> expression > expression .)
    ONES            reduce using rule 37 (expression -> expression > expression .)
    [               reduce using rule 37 (expression -> expression > expression .)
    PRINT           reduce using rule 37 (expression -> expression > expression .)
    IF              reduce using rule 37 (expression -> expression > expression .)
    WHILE           reduce using rule 37 (expression -> expression > expression .)
    FOR             reduce using rule 37 (expression -> expression > expression .)
    $end            reduce using rule 37 (expression -> expression > expression .)
    }               reduce using rule 37 (expression -> expression > expression .)
    ELSE            reduce using rule 37 (expression -> expression > expression .)
    )               reduce using rule 37 (expression -> expression > expression .)
    :               reduce using rule 37 (expression -> expression > expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! +               [ reduce using rule 37 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 37 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 37 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 37 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 37 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 37 (expression -> expression > expression .) ]
  ! DOTMLP          [ reduce using rule 37 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> expression > expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 79

    (38) expression -> expression GOE expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 38 (expression -> expression GOE expression .)
    TRANSPOSE       reduce using rule 38 (expression -> expression GOE expression .)
    EQ              reduce using rule 38 (expression -> expression GOE expression .)
    NE              reduce using rule 38 (expression -> expression GOE expression .)
    >               reduce using rule 38 (expression -> expression GOE expression .)
    GOE             reduce using rule 38 (expression -> expression GOE expression .)
    <               reduce using rule 38 (expression -> expression GOE expression .)
    LOE             reduce using rule 38 (expression -> expression GOE expression .)
    ]               reduce using rule 38 (expression -> expression GOE expression .)
    ,               reduce using rule 38 (expression -> expression GOE expression .)
    BREAK           reduce using rule 38 (expression -> expression GOE expression .)
    CONTINUE        reduce using rule 38 (expression -> expression GOE expression .)
    RETURN          reduce using rule 38 (expression -> expression GOE expression .)
    {               reduce using rule 38 (expression -> expression GOE expression .)
    ID              reduce using rule 38 (expression -> expression GOE expression .)
    INTNUM          reduce using rule 38 (expression -> expression GOE expression .)
    FLOATNUM        reduce using rule 38 (expression -> expression GOE expression .)
    STRING          reduce using rule 38 (expression -> expression GOE expression .)
    ZEROES          reduce using rule 38 (expression -> expression GOE expression .)
    EYE             reduce using rule 38 (expression -> expression GOE expression .)
    ONES            reduce using rule 38 (expression -> expression GOE expression .)
    [               reduce using rule 38 (expression -> expression GOE expression .)
    PRINT           reduce using rule 38 (expression -> expression GOE expression .)
    IF              reduce using rule 38 (expression -> expression GOE expression .)
    WHILE           reduce using rule 38 (expression -> expression GOE expression .)
    FOR             reduce using rule 38 (expression -> expression GOE expression .)
    $end            reduce using rule 38 (expression -> expression GOE expression .)
    }               reduce using rule 38 (expression -> expression GOE expression .)
    ELSE            reduce using rule 38 (expression -> expression GOE expression .)
    )               reduce using rule 38 (expression -> expression GOE expression .)
    :               reduce using rule 38 (expression -> expression GOE expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! +               [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! -               [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! *               [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! /               [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! DOTADD          [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! DOTSUB          [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! DOTMLP          [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! DOTDIV          [ reduce using rule 38 (expression -> expression GOE expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 80

    (39) expression -> expression < expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 39 (expression -> expression < expression .)
    TRANSPOSE       reduce using rule 39 (expression -> expression < expression .)
    EQ              reduce using rule 39 (expression -> expression < expression .)
    NE              reduce using rule 39 (expression -> expression < expression .)
    >               reduce using rule 39 (expression -> expression < expression .)
    GOE             reduce using rule 39 (expression -> expression < expression .)
    <               reduce using rule 39 (expression -> expression < expression .)
    LOE             reduce using rule 39 (expression -> expression < expression .)
    ]               reduce using rule 39 (expression -> expression < expression .)
    ,               reduce using rule 39 (expression -> expression < expression .)
    BREAK           reduce using rule 39 (expression -> expression < expression .)
    CONTINUE        reduce using rule 39 (expression -> expression < expression .)
    RETURN          reduce using rule 39 (expression -> expression < expression .)
    {               reduce using rule 39 (expression -> expression < expression .)
    ID              reduce using rule 39 (expression -> expression < expression .)
    INTNUM          reduce using rule 39 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 39 (expression -> expression < expression .)
    STRING          reduce using rule 39 (expression -> expression < expression .)
    ZEROES          reduce using rule 39 (expression -> expression < expression .)
    EYE             reduce using rule 39 (expression -> expression < expression .)
    ONES            reduce using rule 39 (expression -> expression < expression .)
    [               reduce using rule 39 (expression -> expression < expression .)
    PRINT           reduce using rule 39 (expression -> expression < expression .)
    IF              reduce using rule 39 (expression -> expression < expression .)
    WHILE           reduce using rule 39 (expression -> expression < expression .)
    FOR             reduce using rule 39 (expression -> expression < expression .)
    $end            reduce using rule 39 (expression -> expression < expression .)
    }               reduce using rule 39 (expression -> expression < expression .)
    ELSE            reduce using rule 39 (expression -> expression < expression .)
    )               reduce using rule 39 (expression -> expression < expression .)
    :               reduce using rule 39 (expression -> expression < expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! +               [ reduce using rule 39 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 39 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 39 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 39 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 39 (expression -> expression < expression .) ]
  ! DOTMLP          [ reduce using rule 39 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 39 (expression -> expression < expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 81

    (40) expression -> expression LOE expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 40 (expression -> expression LOE expression .)
    TRANSPOSE       reduce using rule 40 (expression -> expression LOE expression .)
    EQ              reduce using rule 40 (expression -> expression LOE expression .)
    NE              reduce using rule 40 (expression -> expression LOE expression .)
    >               reduce using rule 40 (expression -> expression LOE expression .)
    GOE             reduce using rule 40 (expression -> expression LOE expression .)
    <               reduce using rule 40 (expression -> expression LOE expression .)
    LOE             reduce using rule 40 (expression -> expression LOE expression .)
    ]               reduce using rule 40 (expression -> expression LOE expression .)
    ,               reduce using rule 40 (expression -> expression LOE expression .)
    BREAK           reduce using rule 40 (expression -> expression LOE expression .)
    CONTINUE        reduce using rule 40 (expression -> expression LOE expression .)
    RETURN          reduce using rule 40 (expression -> expression LOE expression .)
    {               reduce using rule 40 (expression -> expression LOE expression .)
    ID              reduce using rule 40 (expression -> expression LOE expression .)
    INTNUM          reduce using rule 40 (expression -> expression LOE expression .)
    FLOATNUM        reduce using rule 40 (expression -> expression LOE expression .)
    STRING          reduce using rule 40 (expression -> expression LOE expression .)
    ZEROES          reduce using rule 40 (expression -> expression LOE expression .)
    EYE             reduce using rule 40 (expression -> expression LOE expression .)
    ONES            reduce using rule 40 (expression -> expression LOE expression .)
    [               reduce using rule 40 (expression -> expression LOE expression .)
    PRINT           reduce using rule 40 (expression -> expression LOE expression .)
    IF              reduce using rule 40 (expression -> expression LOE expression .)
    WHILE           reduce using rule 40 (expression -> expression LOE expression .)
    FOR             reduce using rule 40 (expression -> expression LOE expression .)
    $end            reduce using rule 40 (expression -> expression LOE expression .)
    }               reduce using rule 40 (expression -> expression LOE expression .)
    ELSE            reduce using rule 40 (expression -> expression LOE expression .)
    )               reduce using rule 40 (expression -> expression LOE expression .)
    :               reduce using rule 40 (expression -> expression LOE expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36

  ! +               [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! -               [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! *               [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! /               [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! DOTADD          [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! DOTSUB          [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! DOTMLP          [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression LOE expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 37 ]
  ! NE              [ shift and go to state 38 ]
  ! >               [ shift and go to state 39 ]
  ! GOE             [ shift and go to state 40 ]
  ! <               [ shift and go to state 41 ]
  ! LOE             [ shift and go to state 42 ]


state 82

    (52) statement -> RETURN expression ; .

    BREAK           reduce using rule 52 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 52 (statement -> RETURN expression ; .)
    RETURN          reduce using rule 52 (statement -> RETURN expression ; .)
    ;               reduce using rule 52 (statement -> RETURN expression ; .)
    {               reduce using rule 52 (statement -> RETURN expression ; .)
    ID              reduce using rule 52 (statement -> RETURN expression ; .)
    INTNUM          reduce using rule 52 (statement -> RETURN expression ; .)
    FLOATNUM        reduce using rule 52 (statement -> RETURN expression ; .)
    STRING          reduce using rule 52 (statement -> RETURN expression ; .)
    -               reduce using rule 52 (statement -> RETURN expression ; .)
    ZEROES          reduce using rule 52 (statement -> RETURN expression ; .)
    EYE             reduce using rule 52 (statement -> RETURN expression ; .)
    ONES            reduce using rule 52 (statement -> RETURN expression ; .)
    [               reduce using rule 52 (statement -> RETURN expression ; .)
    PRINT           reduce using rule 52 (statement -> RETURN expression ; .)
    IF              reduce using rule 52 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 52 (statement -> RETURN expression ; .)
    FOR             reduce using rule 52 (statement -> RETURN expression ; .)
    $end            reduce using rule 52 (statement -> RETURN expression ; .)
    }               reduce using rule 52 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 52 (statement -> RETURN expression ; .)


state 83

    (55) statement -> { statement_list } .

    BREAK           reduce using rule 55 (statement -> { statement_list } .)
    CONTINUE        reduce using rule 55 (statement -> { statement_list } .)
    RETURN          reduce using rule 55 (statement -> { statement_list } .)
    ;               reduce using rule 55 (statement -> { statement_list } .)
    {               reduce using rule 55 (statement -> { statement_list } .)
    ID              reduce using rule 55 (statement -> { statement_list } .)
    INTNUM          reduce using rule 55 (statement -> { statement_list } .)
    FLOATNUM        reduce using rule 55 (statement -> { statement_list } .)
    STRING          reduce using rule 55 (statement -> { statement_list } .)
    -               reduce using rule 55 (statement -> { statement_list } .)
    ZEROES          reduce using rule 55 (statement -> { statement_list } .)
    EYE             reduce using rule 55 (statement -> { statement_list } .)
    ONES            reduce using rule 55 (statement -> { statement_list } .)
    [               reduce using rule 55 (statement -> { statement_list } .)
    PRINT           reduce using rule 55 (statement -> { statement_list } .)
    IF              reduce using rule 55 (statement -> { statement_list } .)
    WHILE           reduce using rule 55 (statement -> { statement_list } .)
    FOR             reduce using rule 55 (statement -> { statement_list } .)
    $end            reduce using rule 55 (statement -> { statement_list } .)
    }               reduce using rule 55 (statement -> { statement_list } .)
    ELSE            reduce using rule 55 (statement -> { statement_list } .)


state 84

    (57) statement_list -> statement_list statement .

    }               reduce using rule 57 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 57 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 57 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 57 (statement_list -> statement_list statement .)
    ;               reduce using rule 57 (statement_list -> statement_list statement .)
    {               reduce using rule 57 (statement_list -> statement_list statement .)
    ID              reduce using rule 57 (statement_list -> statement_list statement .)
    INTNUM          reduce using rule 57 (statement_list -> statement_list statement .)
    FLOATNUM        reduce using rule 57 (statement_list -> statement_list statement .)
    STRING          reduce using rule 57 (statement_list -> statement_list statement .)
    -               reduce using rule 57 (statement_list -> statement_list statement .)
    ZEROES          reduce using rule 57 (statement_list -> statement_list statement .)
    EYE             reduce using rule 57 (statement_list -> statement_list statement .)
    ONES            reduce using rule 57 (statement_list -> statement_list statement .)
    [               reduce using rule 57 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 57 (statement_list -> statement_list statement .)
    IF              reduce using rule 57 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 57 (statement_list -> statement_list statement .)
    FOR             reduce using rule 57 (statement_list -> statement_list statement .)
    $end            reduce using rule 57 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 57 (statement_list -> statement_list statement .)


state 85

    (16) expression -> ID = expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 16 (expression -> ID = expression .)
    TRANSPOSE       reduce using rule 16 (expression -> ID = expression .)
    ]               reduce using rule 16 (expression -> ID = expression .)
    ,               reduce using rule 16 (expression -> ID = expression .)
    BREAK           reduce using rule 16 (expression -> ID = expression .)
    CONTINUE        reduce using rule 16 (expression -> ID = expression .)
    RETURN          reduce using rule 16 (expression -> ID = expression .)
    {               reduce using rule 16 (expression -> ID = expression .)
    ID              reduce using rule 16 (expression -> ID = expression .)
    INTNUM          reduce using rule 16 (expression -> ID = expression .)
    FLOATNUM        reduce using rule 16 (expression -> ID = expression .)
    STRING          reduce using rule 16 (expression -> ID = expression .)
    ZEROES          reduce using rule 16 (expression -> ID = expression .)
    EYE             reduce using rule 16 (expression -> ID = expression .)
    ONES            reduce using rule 16 (expression -> ID = expression .)
    [               reduce using rule 16 (expression -> ID = expression .)
    PRINT           reduce using rule 16 (expression -> ID = expression .)
    IF              reduce using rule 16 (expression -> ID = expression .)
    WHILE           reduce using rule 16 (expression -> ID = expression .)
    FOR             reduce using rule 16 (expression -> ID = expression .)
    $end            reduce using rule 16 (expression -> ID = expression .)
    }               reduce using rule 16 (expression -> ID = expression .)
    ELSE            reduce using rule 16 (expression -> ID = expression .)
    )               reduce using rule 16 (expression -> ID = expression .)
    :               reduce using rule 16 (expression -> ID = expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 16 (expression -> ID = expression .) ]
  ! -               [ reduce using rule 16 (expression -> ID = expression .) ]
  ! *               [ reduce using rule 16 (expression -> ID = expression .) ]
  ! /               [ reduce using rule 16 (expression -> ID = expression .) ]
  ! DOTADD          [ reduce using rule 16 (expression -> ID = expression .) ]
  ! DOTSUB          [ reduce using rule 16 (expression -> ID = expression .) ]
  ! DOTMLP          [ reduce using rule 16 (expression -> ID = expression .) ]
  ! DOTDIV          [ reduce using rule 16 (expression -> ID = expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> ID = expression .) ]
  ! NE              [ reduce using rule 16 (expression -> ID = expression .) ]
  ! >               [ reduce using rule 16 (expression -> ID = expression .) ]
  ! GOE             [ reduce using rule 16 (expression -> ID = expression .) ]
  ! <               [ reduce using rule 16 (expression -> ID = expression .) ]
  ! LOE             [ reduce using rule 16 (expression -> ID = expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 86

    (17) expression -> ID SUBASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    TRANSPOSE       reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    ]               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    ,               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    BREAK           reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    CONTINUE        reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    RETURN          reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    {               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    ID              reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    INTNUM          reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    FLOATNUM        reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    STRING          reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    ZEROES          reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    EYE             reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    ONES            reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    [               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    PRINT           reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    IF              reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    WHILE           reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    FOR             reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    $end            reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    }               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    ELSE            reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    )               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    :               reduce using rule 17 (expression -> ID SUBASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! -               [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! *               [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! /               [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! NE              [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! >               [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! GOE             [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! <               [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! LOE             [ reduce using rule 17 (expression -> ID SUBASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 87

    (18) expression -> ID ADDASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    TRANSPOSE       reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    ]               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    ,               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    BREAK           reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    CONTINUE        reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    RETURN          reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    {               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    ID              reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    INTNUM          reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    FLOATNUM        reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    STRING          reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    ZEROES          reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    EYE             reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    ONES            reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    [               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    PRINT           reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    IF              reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    WHILE           reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    FOR             reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    $end            reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    }               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    ELSE            reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    )               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    :               reduce using rule 18 (expression -> ID ADDASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! -               [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! *               [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! /               [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! NE              [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! >               [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! GOE             [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! <               [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! LOE             [ reduce using rule 18 (expression -> ID ADDASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 88

    (19) expression -> ID MLPASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    TRANSPOSE       reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    ]               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    ,               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    BREAK           reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    CONTINUE        reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    RETURN          reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    {               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    ID              reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    INTNUM          reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    FLOATNUM        reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    STRING          reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    ZEROES          reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    EYE             reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    ONES            reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    [               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    PRINT           reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    IF              reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    WHILE           reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    FOR             reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    $end            reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    }               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    ELSE            reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    )               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    :               reduce using rule 19 (expression -> ID MLPASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! -               [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! *               [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! /               [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! NE              [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! >               [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! GOE             [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! <               [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! LOE             [ reduce using rule 19 (expression -> ID MLPASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 89

    (20) expression -> ID DIVASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    TRANSPOSE       reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    ]               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    ,               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    BREAK           reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    CONTINUE        reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    RETURN          reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    {               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    ID              reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    INTNUM          reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    FLOATNUM        reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    STRING          reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    ZEROES          reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    EYE             reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    ONES            reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    [               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    PRINT           reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    IF              reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    WHILE           reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    FOR             reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    $end            reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    }               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    ELSE            reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    )               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    :               reduce using rule 20 (expression -> ID DIVASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! -               [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! *               [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! /               [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! NE              [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! >               [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! GOE             [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! <               [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! LOE             [ reduce using rule 20 (expression -> ID DIVASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 90

    (21) expression -> ID [ expression . ] = expression
    (22) expression -> ID [ expression . ] SUBASSIGN expression
    (23) expression -> ID [ expression . ] ADDASSIGN expression
    (24) expression -> ID [ expression . ] MLPASSIGN expression
    (25) expression -> ID [ expression . ] DIVASSIGN expression
    (26) expression -> ID [ expression . , expression ] = expression
    (27) expression -> ID [ expression . , expression ] SUBASSIGN expression
    (28) expression -> ID [ expression . , expression ] ADDASSIGN expression
    (29) expression -> ID [ expression . , expression ] MLPASSIGN expression
    (30) expression -> ID [ expression . , expression ] DIVASSIGN expression
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ]               shift and go to state 99
    ,               shift and go to state 100
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 91

    (13) expression -> ZEROES ( expression . )
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    )               shift and go to state 101
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 92

    (14) expression -> EYE ( expression . )
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    )               shift and go to state 102
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 93

    (15) expression -> ONES ( expression . )
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    )               shift and go to state 103
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 94

    (44) expression -> [ list ] .

    ;               reduce using rule 44 (expression -> [ list ] .)
    +               reduce using rule 44 (expression -> [ list ] .)
    -               reduce using rule 44 (expression -> [ list ] .)
    *               reduce using rule 44 (expression -> [ list ] .)
    /               reduce using rule 44 (expression -> [ list ] .)
    TRANSPOSE       reduce using rule 44 (expression -> [ list ] .)
    DOTADD          reduce using rule 44 (expression -> [ list ] .)
    DOTSUB          reduce using rule 44 (expression -> [ list ] .)
    DOTMLP          reduce using rule 44 (expression -> [ list ] .)
    DOTDIV          reduce using rule 44 (expression -> [ list ] .)
    EQ              reduce using rule 44 (expression -> [ list ] .)
    NE              reduce using rule 44 (expression -> [ list ] .)
    >               reduce using rule 44 (expression -> [ list ] .)
    GOE             reduce using rule 44 (expression -> [ list ] .)
    <               reduce using rule 44 (expression -> [ list ] .)
    LOE             reduce using rule 44 (expression -> [ list ] .)
    ]               reduce using rule 44 (expression -> [ list ] .)
    ,               reduce using rule 44 (expression -> [ list ] .)
    BREAK           reduce using rule 44 (expression -> [ list ] .)
    CONTINUE        reduce using rule 44 (expression -> [ list ] .)
    RETURN          reduce using rule 44 (expression -> [ list ] .)
    {               reduce using rule 44 (expression -> [ list ] .)
    ID              reduce using rule 44 (expression -> [ list ] .)
    INTNUM          reduce using rule 44 (expression -> [ list ] .)
    FLOATNUM        reduce using rule 44 (expression -> [ list ] .)
    STRING          reduce using rule 44 (expression -> [ list ] .)
    ZEROES          reduce using rule 44 (expression -> [ list ] .)
    EYE             reduce using rule 44 (expression -> [ list ] .)
    ONES            reduce using rule 44 (expression -> [ list ] .)
    [               reduce using rule 44 (expression -> [ list ] .)
    PRINT           reduce using rule 44 (expression -> [ list ] .)
    IF              reduce using rule 44 (expression -> [ list ] .)
    WHILE           reduce using rule 44 (expression -> [ list ] .)
    FOR             reduce using rule 44 (expression -> [ list ] .)
    $end            reduce using rule 44 (expression -> [ list ] .)
    }               reduce using rule 44 (expression -> [ list ] .)
    ELSE            reduce using rule 44 (expression -> [ list ] .)
    )               reduce using rule 44 (expression -> [ list ] .)
    :               reduce using rule 44 (expression -> [ list ] .)


state 95

    (42) list -> list , . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 104

state 96

    (58) if_statement -> IF ( expression . ) statement
    (59) if_statement -> IF ( expression . ) statement ELSE statement
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    )               shift and go to state 105
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 97

    (61) while_statement -> WHILE ( expression . ) statement
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    )               shift and go to state 106
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 98

    (62) for_statement -> FOR ID = . range statement
    (60) range -> . expression : expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    range                          shift and go to state 107
    expression                     shift and go to state 108

state 99

    (21) expression -> ID [ expression ] . = expression
    (22) expression -> ID [ expression ] . SUBASSIGN expression
    (23) expression -> ID [ expression ] . ADDASSIGN expression
    (24) expression -> ID [ expression ] . MLPASSIGN expression
    (25) expression -> ID [ expression ] . DIVASSIGN expression

    =               shift and go to state 109
    SUBASSIGN       shift and go to state 110
    ADDASSIGN       shift and go to state 111
    MLPASSIGN       shift and go to state 112
    DIVASSIGN       shift and go to state 113


state 100

    (26) expression -> ID [ expression , . expression ] = expression
    (27) expression -> ID [ expression , . expression ] SUBASSIGN expression
    (28) expression -> ID [ expression , . expression ] ADDASSIGN expression
    (29) expression -> ID [ expression , . expression ] MLPASSIGN expression
    (30) expression -> ID [ expression , . expression ] DIVASSIGN expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 114

state 101

    (13) expression -> ZEROES ( expression ) .

    ;               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    +               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    -               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    *               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    /               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    TRANSPOSE       reduce using rule 13 (expression -> ZEROES ( expression ) .)
    DOTADD          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    DOTSUB          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    DOTMLP          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    DOTDIV          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    EQ              reduce using rule 13 (expression -> ZEROES ( expression ) .)
    NE              reduce using rule 13 (expression -> ZEROES ( expression ) .)
    >               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    GOE             reduce using rule 13 (expression -> ZEROES ( expression ) .)
    <               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    LOE             reduce using rule 13 (expression -> ZEROES ( expression ) .)
    ]               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    ,               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    BREAK           reduce using rule 13 (expression -> ZEROES ( expression ) .)
    CONTINUE        reduce using rule 13 (expression -> ZEROES ( expression ) .)
    RETURN          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    {               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    ID              reduce using rule 13 (expression -> ZEROES ( expression ) .)
    INTNUM          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    FLOATNUM        reduce using rule 13 (expression -> ZEROES ( expression ) .)
    STRING          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    ZEROES          reduce using rule 13 (expression -> ZEROES ( expression ) .)
    EYE             reduce using rule 13 (expression -> ZEROES ( expression ) .)
    ONES            reduce using rule 13 (expression -> ZEROES ( expression ) .)
    [               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    PRINT           reduce using rule 13 (expression -> ZEROES ( expression ) .)
    IF              reduce using rule 13 (expression -> ZEROES ( expression ) .)
    WHILE           reduce using rule 13 (expression -> ZEROES ( expression ) .)
    FOR             reduce using rule 13 (expression -> ZEROES ( expression ) .)
    $end            reduce using rule 13 (expression -> ZEROES ( expression ) .)
    }               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    ELSE            reduce using rule 13 (expression -> ZEROES ( expression ) .)
    )               reduce using rule 13 (expression -> ZEROES ( expression ) .)
    :               reduce using rule 13 (expression -> ZEROES ( expression ) .)


state 102

    (14) expression -> EYE ( expression ) .

    ;               reduce using rule 14 (expression -> EYE ( expression ) .)
    +               reduce using rule 14 (expression -> EYE ( expression ) .)
    -               reduce using rule 14 (expression -> EYE ( expression ) .)
    *               reduce using rule 14 (expression -> EYE ( expression ) .)
    /               reduce using rule 14 (expression -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 14 (expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 14 (expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 14 (expression -> EYE ( expression ) .)
    DOTMLP          reduce using rule 14 (expression -> EYE ( expression ) .)
    DOTDIV          reduce using rule 14 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 14 (expression -> EYE ( expression ) .)
    NE              reduce using rule 14 (expression -> EYE ( expression ) .)
    >               reduce using rule 14 (expression -> EYE ( expression ) .)
    GOE             reduce using rule 14 (expression -> EYE ( expression ) .)
    <               reduce using rule 14 (expression -> EYE ( expression ) .)
    LOE             reduce using rule 14 (expression -> EYE ( expression ) .)
    ]               reduce using rule 14 (expression -> EYE ( expression ) .)
    ,               reduce using rule 14 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 14 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 14 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 14 (expression -> EYE ( expression ) .)
    {               reduce using rule 14 (expression -> EYE ( expression ) .)
    ID              reduce using rule 14 (expression -> EYE ( expression ) .)
    INTNUM          reduce using rule 14 (expression -> EYE ( expression ) .)
    FLOATNUM        reduce using rule 14 (expression -> EYE ( expression ) .)
    STRING          reduce using rule 14 (expression -> EYE ( expression ) .)
    ZEROES          reduce using rule 14 (expression -> EYE ( expression ) .)
    EYE             reduce using rule 14 (expression -> EYE ( expression ) .)
    ONES            reduce using rule 14 (expression -> EYE ( expression ) .)
    [               reduce using rule 14 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 14 (expression -> EYE ( expression ) .)
    IF              reduce using rule 14 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 14 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 14 (expression -> EYE ( expression ) .)
    $end            reduce using rule 14 (expression -> EYE ( expression ) .)
    }               reduce using rule 14 (expression -> EYE ( expression ) .)
    ELSE            reduce using rule 14 (expression -> EYE ( expression ) .)
    )               reduce using rule 14 (expression -> EYE ( expression ) .)
    :               reduce using rule 14 (expression -> EYE ( expression ) .)


state 103

    (15) expression -> ONES ( expression ) .

    ;               reduce using rule 15 (expression -> ONES ( expression ) .)
    +               reduce using rule 15 (expression -> ONES ( expression ) .)
    -               reduce using rule 15 (expression -> ONES ( expression ) .)
    *               reduce using rule 15 (expression -> ONES ( expression ) .)
    /               reduce using rule 15 (expression -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 15 (expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 15 (expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 15 (expression -> ONES ( expression ) .)
    DOTMLP          reduce using rule 15 (expression -> ONES ( expression ) .)
    DOTDIV          reduce using rule 15 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 15 (expression -> ONES ( expression ) .)
    NE              reduce using rule 15 (expression -> ONES ( expression ) .)
    >               reduce using rule 15 (expression -> ONES ( expression ) .)
    GOE             reduce using rule 15 (expression -> ONES ( expression ) .)
    <               reduce using rule 15 (expression -> ONES ( expression ) .)
    LOE             reduce using rule 15 (expression -> ONES ( expression ) .)
    ]               reduce using rule 15 (expression -> ONES ( expression ) .)
    ,               reduce using rule 15 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 15 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 15 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 15 (expression -> ONES ( expression ) .)
    {               reduce using rule 15 (expression -> ONES ( expression ) .)
    ID              reduce using rule 15 (expression -> ONES ( expression ) .)
    INTNUM          reduce using rule 15 (expression -> ONES ( expression ) .)
    FLOATNUM        reduce using rule 15 (expression -> ONES ( expression ) .)
    STRING          reduce using rule 15 (expression -> ONES ( expression ) .)
    ZEROES          reduce using rule 15 (expression -> ONES ( expression ) .)
    EYE             reduce using rule 15 (expression -> ONES ( expression ) .)
    ONES            reduce using rule 15 (expression -> ONES ( expression ) .)
    [               reduce using rule 15 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 15 (expression -> ONES ( expression ) .)
    IF              reduce using rule 15 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 15 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 15 (expression -> ONES ( expression ) .)
    $end            reduce using rule 15 (expression -> ONES ( expression ) .)
    }               reduce using rule 15 (expression -> ONES ( expression ) .)
    ELSE            reduce using rule 15 (expression -> ONES ( expression ) .)
    )               reduce using rule 15 (expression -> ONES ( expression ) .)
    :               reduce using rule 15 (expression -> ONES ( expression ) .)


state 104

    (42) list -> list , expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

  ! shift/reduce conflict for - resolved as shift
    ]               reduce using rule 42 (list -> list , expression .)
    ,               reduce using rule 42 (list -> list , expression .)
    BREAK           reduce using rule 42 (list -> list , expression .)
    CONTINUE        reduce using rule 42 (list -> list , expression .)
    RETURN          reduce using rule 42 (list -> list , expression .)
    ;               reduce using rule 42 (list -> list , expression .)
    {               reduce using rule 42 (list -> list , expression .)
    ID              reduce using rule 42 (list -> list , expression .)
    INTNUM          reduce using rule 42 (list -> list , expression .)
    FLOATNUM        reduce using rule 42 (list -> list , expression .)
    STRING          reduce using rule 42 (list -> list , expression .)
    ZEROES          reduce using rule 42 (list -> list , expression .)
    EYE             reduce using rule 42 (list -> list , expression .)
    ONES            reduce using rule 42 (list -> list , expression .)
    [               reduce using rule 42 (list -> list , expression .)
    PRINT           reduce using rule 42 (list -> list , expression .)
    IF              reduce using rule 42 (list -> list , expression .)
    WHILE           reduce using rule 42 (list -> list , expression .)
    FOR             reduce using rule 42 (list -> list , expression .)
    $end            reduce using rule 42 (list -> list , expression .)
    }               reduce using rule 42 (list -> list , expression .)
    ELSE            reduce using rule 42 (list -> list , expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! -               [ reduce using rule 42 (list -> list , expression .) ]


state 105

    (58) if_statement -> IF ( expression ) . statement
    (59) if_statement -> IF ( expression ) . statement ELSE statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    expression                     shift and go to state 3
    statement                      shift and go to state 115
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 106

    (61) while_statement -> WHILE ( expression ) . statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    expression                     shift and go to state 3
    statement                      shift and go to state 116
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 107

    (62) for_statement -> FOR ID = range . statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement                      shift and go to state 117
    expression                     shift and go to state 3
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 108

    (60) range -> expression . : expression
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    :               shift and go to state 118
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 109

    (21) expression -> ID [ expression ] = . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 119

state 110

    (22) expression -> ID [ expression ] SUBASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 120

state 111

    (23) expression -> ID [ expression ] ADDASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 121

state 112

    (24) expression -> ID [ expression ] MLPASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 122

state 113

    (25) expression -> ID [ expression ] DIVASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 123

state 114

    (26) expression -> ID [ expression , expression . ] = expression
    (27) expression -> ID [ expression , expression . ] SUBASSIGN expression
    (28) expression -> ID [ expression , expression . ] ADDASSIGN expression
    (29) expression -> ID [ expression , expression . ] MLPASSIGN expression
    (30) expression -> ID [ expression , expression . ] DIVASSIGN expression
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ]               shift and go to state 124
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42


state 115

    (58) if_statement -> IF ( expression ) statement .
    (59) if_statement -> IF ( expression ) statement . ELSE statement

    BREAK           reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    RETURN          reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    ;               reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    {               reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    ID              reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    INTNUM          reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    FLOATNUM        reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    STRING          reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    -               reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    ZEROES          reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    EYE             reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    ONES            reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    [               reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    PRINT           reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    IF              reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    WHILE           reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    FOR             reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    $end            reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    }               reduce using rule 58 (if_statement -> IF ( expression ) statement .)
    ELSE            shift and go to state 125

  ! ELSE            [ reduce using rule 58 (if_statement -> IF ( expression ) statement .) ]


state 116

    (61) while_statement -> WHILE ( expression ) statement .

    BREAK           reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    RETURN          reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    ;               reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    {               reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    ID              reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    INTNUM          reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    FLOATNUM        reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    STRING          reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    -               reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    ZEROES          reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    EYE             reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    ONES            reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    [               reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    PRINT           reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    IF              reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    FOR             reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    $end            reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    }               reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 61 (while_statement -> WHILE ( expression ) statement .)


state 117

    (62) for_statement -> FOR ID = range statement .

    BREAK           reduce using rule 62 (for_statement -> FOR ID = range statement .)
    CONTINUE        reduce using rule 62 (for_statement -> FOR ID = range statement .)
    RETURN          reduce using rule 62 (for_statement -> FOR ID = range statement .)
    ;               reduce using rule 62 (for_statement -> FOR ID = range statement .)
    {               reduce using rule 62 (for_statement -> FOR ID = range statement .)
    ID              reduce using rule 62 (for_statement -> FOR ID = range statement .)
    INTNUM          reduce using rule 62 (for_statement -> FOR ID = range statement .)
    FLOATNUM        reduce using rule 62 (for_statement -> FOR ID = range statement .)
    STRING          reduce using rule 62 (for_statement -> FOR ID = range statement .)
    -               reduce using rule 62 (for_statement -> FOR ID = range statement .)
    ZEROES          reduce using rule 62 (for_statement -> FOR ID = range statement .)
    EYE             reduce using rule 62 (for_statement -> FOR ID = range statement .)
    ONES            reduce using rule 62 (for_statement -> FOR ID = range statement .)
    [               reduce using rule 62 (for_statement -> FOR ID = range statement .)
    PRINT           reduce using rule 62 (for_statement -> FOR ID = range statement .)
    IF              reduce using rule 62 (for_statement -> FOR ID = range statement .)
    WHILE           reduce using rule 62 (for_statement -> FOR ID = range statement .)
    FOR             reduce using rule 62 (for_statement -> FOR ID = range statement .)
    $end            reduce using rule 62 (for_statement -> FOR ID = range statement .)
    }               reduce using rule 62 (for_statement -> FOR ID = range statement .)
    ELSE            reduce using rule 62 (for_statement -> FOR ID = range statement .)


state 118

    (60) range -> expression : . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 126

state 119

    (21) expression -> ID [ expression ] = expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    TRANSPOSE       reduce using rule 21 (expression -> ID [ expression ] = expression .)
    ]               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    ,               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    BREAK           reduce using rule 21 (expression -> ID [ expression ] = expression .)
    CONTINUE        reduce using rule 21 (expression -> ID [ expression ] = expression .)
    RETURN          reduce using rule 21 (expression -> ID [ expression ] = expression .)
    {               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    ID              reduce using rule 21 (expression -> ID [ expression ] = expression .)
    INTNUM          reduce using rule 21 (expression -> ID [ expression ] = expression .)
    FLOATNUM        reduce using rule 21 (expression -> ID [ expression ] = expression .)
    STRING          reduce using rule 21 (expression -> ID [ expression ] = expression .)
    ZEROES          reduce using rule 21 (expression -> ID [ expression ] = expression .)
    EYE             reduce using rule 21 (expression -> ID [ expression ] = expression .)
    ONES            reduce using rule 21 (expression -> ID [ expression ] = expression .)
    [               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    PRINT           reduce using rule 21 (expression -> ID [ expression ] = expression .)
    IF              reduce using rule 21 (expression -> ID [ expression ] = expression .)
    WHILE           reduce using rule 21 (expression -> ID [ expression ] = expression .)
    FOR             reduce using rule 21 (expression -> ID [ expression ] = expression .)
    $end            reduce using rule 21 (expression -> ID [ expression ] = expression .)
    }               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    ELSE            reduce using rule 21 (expression -> ID [ expression ] = expression .)
    )               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    :               reduce using rule 21 (expression -> ID [ expression ] = expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! -               [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! *               [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! /               [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! DOTADD          [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! DOTSUB          [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! DOTMLP          [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! DOTDIV          [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! NE              [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! >               [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! GOE             [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! <               [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! LOE             [ reduce using rule 21 (expression -> ID [ expression ] = expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 120

    (22) expression -> ID [ expression ] SUBASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    TRANSPOSE       reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    ]               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    ,               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    BREAK           reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    CONTINUE        reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    RETURN          reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    {               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    ID              reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    INTNUM          reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    FLOATNUM        reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    STRING          reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    ZEROES          reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    EYE             reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    ONES            reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    [               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    PRINT           reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    IF              reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    WHILE           reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    FOR             reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    $end            reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    }               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    ELSE            reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    )               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    :               reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! -               [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! *               [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! /               [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! NE              [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! >               [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! GOE             [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! <               [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! LOE             [ reduce using rule 22 (expression -> ID [ expression ] SUBASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 121

    (23) expression -> ID [ expression ] ADDASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    TRANSPOSE       reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    ]               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    ,               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    BREAK           reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    CONTINUE        reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    RETURN          reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    {               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    ID              reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    INTNUM          reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    FLOATNUM        reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    STRING          reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    ZEROES          reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    EYE             reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    ONES            reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    [               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    PRINT           reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    IF              reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    WHILE           reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    FOR             reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    $end            reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    }               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    ELSE            reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    )               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    :               reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! -               [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! *               [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! /               [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! NE              [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! >               [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! GOE             [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! <               [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! LOE             [ reduce using rule 23 (expression -> ID [ expression ] ADDASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 122

    (24) expression -> ID [ expression ] MLPASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    TRANSPOSE       reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    ]               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    ,               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    BREAK           reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    CONTINUE        reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    RETURN          reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    {               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    ID              reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    INTNUM          reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    FLOATNUM        reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    STRING          reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    ZEROES          reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    EYE             reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    ONES            reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    [               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    PRINT           reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    IF              reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    WHILE           reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    FOR             reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    $end            reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    }               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    ELSE            reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    )               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    :               reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! -               [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! *               [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! /               [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! NE              [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! >               [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! GOE             [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! <               [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! LOE             [ reduce using rule 24 (expression -> ID [ expression ] MLPASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 123

    (25) expression -> ID [ expression ] DIVASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    TRANSPOSE       reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    ]               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    ,               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    BREAK           reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    CONTINUE        reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    RETURN          reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    {               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    ID              reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    INTNUM          reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    FLOATNUM        reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    STRING          reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    ZEROES          reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    EYE             reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    ONES            reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    [               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    PRINT           reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    IF              reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    WHILE           reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    FOR             reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    $end            reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    }               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    ELSE            reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    )               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    :               reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! -               [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! *               [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! /               [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! NE              [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! >               [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! GOE             [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! <               [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! LOE             [ reduce using rule 25 (expression -> ID [ expression ] DIVASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 124

    (26) expression -> ID [ expression , expression ] . = expression
    (27) expression -> ID [ expression , expression ] . SUBASSIGN expression
    (28) expression -> ID [ expression , expression ] . ADDASSIGN expression
    (29) expression -> ID [ expression , expression ] . MLPASSIGN expression
    (30) expression -> ID [ expression , expression ] . DIVASSIGN expression

    =               shift and go to state 127
    SUBASSIGN       shift and go to state 128
    ADDASSIGN       shift and go to state 129
    MLPASSIGN       shift and go to state 130
    DIVASSIGN       shift and go to state 131


state 125

    (59) if_statement -> IF ( expression ) statement ELSE . statement
    (45) statement -> . expression ;
    (46) statement -> . print_statement
    (47) statement -> . if_statement
    (48) statement -> . while_statement
    (49) statement -> . for_statement
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . RETURN expression ;
    (53) statement -> . ;
    (54) statement -> . { }
    (55) statement -> . { statement_list }
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]
    (63) print_statement -> . PRINT statement_list
    (64) print_statement -> . PRINT list
    (58) if_statement -> . IF ( expression ) statement
    (59) if_statement -> . IF ( expression ) statement ELSE statement
    (61) while_statement -> . WHILE ( expression ) statement
    (62) for_statement -> . FOR ID = range statement

    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    ;               shift and go to state 4
    {               shift and go to state 12
    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21
    PRINT           shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    expression                     shift and go to state 3
    statement                      shift and go to state 132
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8

state 126

    (60) range -> expression : expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

  ! shift/reduce conflict for - resolved as shift
    BREAK           reduce using rule 60 (range -> expression : expression .)
    CONTINUE        reduce using rule 60 (range -> expression : expression .)
    RETURN          reduce using rule 60 (range -> expression : expression .)
    ;               reduce using rule 60 (range -> expression : expression .)
    {               reduce using rule 60 (range -> expression : expression .)
    ID              reduce using rule 60 (range -> expression : expression .)
    INTNUM          reduce using rule 60 (range -> expression : expression .)
    FLOATNUM        reduce using rule 60 (range -> expression : expression .)
    STRING          reduce using rule 60 (range -> expression : expression .)
    ZEROES          reduce using rule 60 (range -> expression : expression .)
    EYE             reduce using rule 60 (range -> expression : expression .)
    ONES            reduce using rule 60 (range -> expression : expression .)
    [               reduce using rule 60 (range -> expression : expression .)
    PRINT           reduce using rule 60 (range -> expression : expression .)
    IF              reduce using rule 60 (range -> expression : expression .)
    WHILE           reduce using rule 60 (range -> expression : expression .)
    FOR             reduce using rule 60 (range -> expression : expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    TRANSPOSE       shift and go to state 32
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! -               [ reduce using rule 60 (range -> expression : expression .) ]


state 127

    (26) expression -> ID [ expression , expression ] = . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 133

state 128

    (27) expression -> ID [ expression , expression ] SUBASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 134

state 129

    (28) expression -> ID [ expression , expression ] ADDASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 135

state 130

    (29) expression -> ID [ expression , expression ] MLPASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 136

state 131

    (30) expression -> ID [ expression , expression ] DIVASSIGN . expression
    (3) expression -> . ID
    (4) expression -> . INTNUM
    (5) expression -> . FLOATNUM
    (6) expression -> . STRING
    (7) expression -> . - expression
    (8) expression -> . expression + expression
    (9) expression -> . expression - expression
    (10) expression -> . expression * expression
    (11) expression -> . expression / expression
    (12) expression -> . expression TRANSPOSE
    (13) expression -> . ZEROES ( expression )
    (14) expression -> . EYE ( expression )
    (15) expression -> . ONES ( expression )
    (16) expression -> . ID = expression
    (17) expression -> . ID SUBASSIGN expression
    (18) expression -> . ID ADDASSIGN expression
    (19) expression -> . ID MLPASSIGN expression
    (20) expression -> . ID DIVASSIGN expression
    (21) expression -> . ID [ expression ] = expression
    (22) expression -> . ID [ expression ] SUBASSIGN expression
    (23) expression -> . ID [ expression ] ADDASSIGN expression
    (24) expression -> . ID [ expression ] MLPASSIGN expression
    (25) expression -> . ID [ expression ] DIVASSIGN expression
    (26) expression -> . ID [ expression , expression ] = expression
    (27) expression -> . ID [ expression , expression ] SUBASSIGN expression
    (28) expression -> . ID [ expression , expression ] ADDASSIGN expression
    (29) expression -> . ID [ expression , expression ] MLPASSIGN expression
    (30) expression -> . ID [ expression , expression ] DIVASSIGN expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMLP expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NE expression
    (37) expression -> . expression > expression
    (38) expression -> . expression GOE expression
    (39) expression -> . expression < expression
    (40) expression -> . expression LOE expression
    (43) expression -> . [ ]
    (44) expression -> . [ list ]

    ID              shift and go to state 13
    INTNUM          shift and go to state 14
    FLOATNUM        shift and go to state 15
    STRING          shift and go to state 16
    -               shift and go to state 17
    ZEROES          shift and go to state 18
    EYE             shift and go to state 19
    ONES            shift and go to state 20
    [               shift and go to state 21

    expression                     shift and go to state 137

state 132

    (59) if_statement -> IF ( expression ) statement ELSE statement .

    BREAK           reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    CONTINUE        reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    RETURN          reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    ;               reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    {               reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    ID              reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    INTNUM          reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    FLOATNUM        reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    STRING          reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    -               reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    ZEROES          reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    EYE             reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    ONES            reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    [               reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    PRINT           reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    IF              reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    WHILE           reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    FOR             reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    $end            reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    }               reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)
    ELSE            reduce using rule 59 (if_statement -> IF ( expression ) statement ELSE statement .)


state 133

    (26) expression -> ID [ expression , expression ] = expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    TRANSPOSE       reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    ]               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    ,               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    BREAK           reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    CONTINUE        reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    RETURN          reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    {               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    ID              reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    INTNUM          reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    FLOATNUM        reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    STRING          reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    ZEROES          reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    EYE             reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    ONES            reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    [               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    PRINT           reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    IF              reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    WHILE           reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    FOR             reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    $end            reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    }               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    ELSE            reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    )               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    :               reduce using rule 26 (expression -> ID [ expression , expression ] = expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! -               [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! *               [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! /               [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! DOTADD          [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! DOTSUB          [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! DOTMLP          [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! DOTDIV          [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! NE              [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! >               [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! GOE             [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! <               [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! LOE             [ reduce using rule 26 (expression -> ID [ expression , expression ] = expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 134

    (27) expression -> ID [ expression , expression ] SUBASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    TRANSPOSE       reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    ]               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    ,               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    BREAK           reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    CONTINUE        reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    RETURN          reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    {               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    ID              reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    INTNUM          reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    FLOATNUM        reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    STRING          reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    ZEROES          reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    EYE             reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    ONES            reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    [               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    PRINT           reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    IF              reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    WHILE           reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    FOR             reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    $end            reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    }               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    ELSE            reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    )               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    :               reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! -               [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! *               [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! /               [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! NE              [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! >               [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! GOE             [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! <               [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! LOE             [ reduce using rule 27 (expression -> ID [ expression , expression ] SUBASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 135

    (28) expression -> ID [ expression , expression ] ADDASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    TRANSPOSE       reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    ]               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    ,               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    BREAK           reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    CONTINUE        reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    RETURN          reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    {               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    ID              reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    INTNUM          reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    FLOATNUM        reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    STRING          reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    ZEROES          reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    EYE             reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    ONES            reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    [               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    PRINT           reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    IF              reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    WHILE           reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    FOR             reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    $end            reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    }               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    ELSE            reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    )               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    :               reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! -               [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! *               [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! /               [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! NE              [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! >               [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! GOE             [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! <               [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! LOE             [ reduce using rule 28 (expression -> ID [ expression , expression ] ADDASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 136

    (29) expression -> ID [ expression , expression ] MLPASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    TRANSPOSE       reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    ]               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    ,               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    BREAK           reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    CONTINUE        reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    RETURN          reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    {               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    ID              reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    INTNUM          reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    FLOATNUM        reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    STRING          reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    ZEROES          reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    EYE             reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    ONES            reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    [               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    PRINT           reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    IF              reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    WHILE           reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    FOR             reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    $end            reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    }               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    ELSE            reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    )               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    :               reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! -               [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! *               [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! /               [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! NE              [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! >               [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! GOE             [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! <               [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! LOE             [ reduce using rule 29 (expression -> ID [ expression , expression ] MLPASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]


state 137

    (30) expression -> ID [ expression , expression ] DIVASSIGN expression .
    (8) expression -> expression . + expression
    (9) expression -> expression . - expression
    (10) expression -> expression . * expression
    (11) expression -> expression . / expression
    (12) expression -> expression . TRANSPOSE
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMLP expression
    (34) expression -> expression . DOTDIV expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NE expression
    (37) expression -> expression . > expression
    (38) expression -> expression . GOE expression
    (39) expression -> expression . < expression
    (40) expression -> expression . LOE expression

    ;               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    TRANSPOSE       reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    ]               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    ,               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    BREAK           reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    CONTINUE        reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    RETURN          reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    {               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    ID              reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    INTNUM          reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    FLOATNUM        reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    STRING          reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    ZEROES          reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    EYE             reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    ONES            reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    [               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    PRINT           reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    IF              reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    WHILE           reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    FOR             reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    $end            reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    }               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    ELSE            reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    )               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    :               reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .)
    +               shift and go to state 28
    -               shift and go to state 29
    *               shift and go to state 30
    /               shift and go to state 31
    DOTADD          shift and go to state 33
    DOTSUB          shift and go to state 34
    DOTMLP          shift and go to state 35
    DOTDIV          shift and go to state 36
    EQ              shift and go to state 37
    NE              shift and go to state 38
    >               shift and go to state 39
    GOE             shift and go to state 40
    <               shift and go to state 41
    LOE             shift and go to state 42

  ! +               [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! -               [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! *               [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! /               [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! DOTMLP          [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! NE              [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! >               [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! GOE             [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! <               [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! LOE             [ reduce using rule 30 (expression -> ID [ expression , expression ] DIVASSIGN expression .) ]
  ! TRANSPOSE       [ shift and go to state 32 ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for [ in state 13 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 62 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 62 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 62 resolved as shift
WARNING: shift/reduce conflict for ; in state 62 resolved as shift
WARNING: shift/reduce conflict for { in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for INTNUM in state 62 resolved as shift
WARNING: shift/reduce conflict for FLOATNUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for - in state 62 resolved as shift
WARNING: shift/reduce conflict for ZEROES in state 62 resolved as shift
WARNING: shift/reduce conflict for EYE in state 62 resolved as shift
WARNING: shift/reduce conflict for ONES in state 62 resolved as shift
WARNING: shift/reduce conflict for [ in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for ; in state 64 resolved as shift
WARNING: shift/reduce conflict for - in state 64 resolved as shift
WARNING: shift/reduce conflict for - in state 104 resolved as shift
WARNING: shift/reduce conflict for - in state 126 resolved as shift
