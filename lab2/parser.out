Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN

Grammar

Rule 0     S' -> statements_list
Rule 1     number -> INTNUM
Rule 2     number -> FLOATNUM
Rule 3     expression -> ID
Rule 4     expression -> number
Rule 5     expression -> STRING
Rule 6     table -> expression , expression
Rule 7     table -> table , expression
Rule 8     expression -> [ expression ]
Rule 9     expression -> [ table ]
Rule 10    expression -> ZEROES ( number )
Rule 11    expression -> EYE ( number )
Rule 12    expression -> ONES ( number )
Rule 13    expression -> - expression
Rule 14    expression -> expression + expression
Rule 15    expression -> expression - expression
Rule 16    expression -> expression * expression
Rule 17    expression -> expression / expression
Rule 18    expression -> expression DOTADD expression
Rule 19    expression -> expression DOTSUB expression
Rule 20    expression -> expression DOTMLP expression
Rule 21    expression -> expression DOTDIV expression
Rule 22    expression -> expression TRANSPOSE
Rule 23    expression -> expression EQ expression
Rule 24    expression -> expression NE expression
Rule 25    expression -> expression > expression
Rule 26    expression -> expression GOE expression
Rule 27    expression -> expression < expression
Rule 28    expression -> expression LOE expression
Rule 29    range -> expression : expression
Rule 30    instruction -> ID = expression ;
Rule 31    instruction -> ID SUBASSIGN expression ;
Rule 32    instruction -> ID ADDASSIGN expression ;
Rule 33    instruction -> ID MLPASSIGN expression ;
Rule 34    instruction -> ID DIVASSIGN expression ;
Rule 35    statements_list -> statements_list code_block
Rule 36    statements_list -> statements_list instruction
Rule 37    statements_list -> instruction code_block
Rule 38    statements_list -> instruction instruction
Rule 39    code_block -> expression ;
Rule 40    code_block -> { statements_list }
Rule 41    code_block -> { instruction }
Rule 42    instruction -> BREAK ;
Rule 43    instruction -> CONTINUE ;
Rule 44    instruction -> FOR ID = range code_block
Rule 45    instruction -> FOR ID = range instruction
Rule 46    instruction -> WHILE ( expression ) code_block
Rule 47    instruction -> WHILE ( expression ) instruction
Rule 48    instruction -> IF ( expression ) code_block
Rule 49    instruction -> IF ( expression ) code_block else_block
Rule 50    else_block -> ELSE code_block
Rule 51    instruction -> PRINT table ;
Rule 52    instruction -> PRINT expression ;
Rule 53    instruction -> RETURN ;
Rule 54    instruction -> RETURN expression ;

Terminals, with rules where they appear

(                    : 10 11 12 46 47 48 49
)                    : 10 11 12 46 47 48 49
*                    : 16
+                    : 14
,                    : 6 7
-                    : 13 15
/                    : 17
:                    : 29
;                    : 30 31 32 33 34 39 42 43 51 52 53 54
<                    : 27
=                    : 30 44 45
>                    : 25
ADDASSIGN            : 32
BREAK                : 42
CONTINUE             : 43
DIVASSIGN            : 34
DOTADD               : 18
DOTDIV               : 21
DOTMLP               : 20
DOTSUB               : 19
ELSE                 : 50
EQ                   : 23
EYE                  : 11
FLOATNUM             : 2
FOR                  : 44 45
GOE                  : 26
ID                   : 3 30 31 32 33 34 44 45
IF                   : 48 49
INTNUM               : 1
LOE                  : 28
MLPASSIGN            : 33
NE                   : 24
ONES                 : 12
PRINT                : 51 52
RETURN               : 53 54
STRING               : 5
SUBASSIGN            : 31
THEN                 : 
TRANSPOSE            : 22
WHILE                : 46 47
ZEROES               : 10
[                    : 8 9
]                    : 8 9
error                : 
{                    : 40 41
}                    : 40 41

Nonterminals, with rules where they appear

code_block           : 35 37 44 46 48 49 50
else_block           : 49
expression           : 6 6 7 8 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 33 34 39 46 47 48 49 52 54
instruction          : 36 37 38 38 41 45 47
number               : 4 10 11 12
range                : 44 45
statements_list      : 35 36 40 0
table                : 7 9 51

Parsing method: LALR

state 0

    (0) S' -> . statements_list
    (35) statements_list -> . statements_list code_block
    (36) statements_list -> . statements_list instruction
    (37) statements_list -> . instruction code_block
    (38) statements_list -> . instruction instruction
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;

    ID              shift and go to state 3
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10

    statements_list                shift and go to state 1
    instruction                    shift and go to state 2

state 1

    (0) S' -> statements_list .
    (35) statements_list -> statements_list . code_block
    (36) statements_list -> statements_list . instruction
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 14
    ID              shift and go to state 15
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    code_block                     shift and go to state 11
    instruction                    shift and go to state 12
    expression                     shift and go to state 13
    number                         shift and go to state 16

state 2

    (37) statements_list -> instruction . code_block
    (38) statements_list -> instruction . instruction
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 14
    ID              shift and go to state 15
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    instruction                    shift and go to state 25
    code_block                     shift and go to state 26
    expression                     shift and go to state 13
    number                         shift and go to state 16

state 3

    (30) instruction -> ID . = expression ;
    (31) instruction -> ID . SUBASSIGN expression ;
    (32) instruction -> ID . ADDASSIGN expression ;
    (33) instruction -> ID . MLPASSIGN expression ;
    (34) instruction -> ID . DIVASSIGN expression ;

    =               shift and go to state 27
    SUBASSIGN       shift and go to state 28
    ADDASSIGN       shift and go to state 29
    MLPASSIGN       shift and go to state 30
    DIVASSIGN       shift and go to state 31


state 4

    (42) instruction -> BREAK . ;

    ;               shift and go to state 32


state 5

    (43) instruction -> CONTINUE . ;

    ;               shift and go to state 33


state 6

    (44) instruction -> FOR . ID = range code_block
    (45) instruction -> FOR . ID = range instruction

    ID              shift and go to state 34


state 7

    (46) instruction -> WHILE . ( expression ) code_block
    (47) instruction -> WHILE . ( expression ) instruction

    (               shift and go to state 35


state 8

    (48) instruction -> IF . ( expression ) code_block
    (49) instruction -> IF . ( expression ) code_block else_block

    (               shift and go to state 36


state 9

    (51) instruction -> PRINT . table ;
    (52) instruction -> PRINT . expression ;
    (6) table -> . expression , expression
    (7) table -> . table , expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    table                          shift and go to state 37
    expression                     shift and go to state 38
    number                         shift and go to state 16

state 10

    (53) instruction -> RETURN . ;
    (54) instruction -> RETURN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ;               shift and go to state 40
    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 41
    number                         shift and go to state 16

state 11

    (35) statements_list -> statements_list code_block .

    {               reduce using rule 35 (statements_list -> statements_list code_block .)
    ID              reduce using rule 35 (statements_list -> statements_list code_block .)
    BREAK           reduce using rule 35 (statements_list -> statements_list code_block .)
    CONTINUE        reduce using rule 35 (statements_list -> statements_list code_block .)
    FOR             reduce using rule 35 (statements_list -> statements_list code_block .)
    WHILE           reduce using rule 35 (statements_list -> statements_list code_block .)
    IF              reduce using rule 35 (statements_list -> statements_list code_block .)
    PRINT           reduce using rule 35 (statements_list -> statements_list code_block .)
    RETURN          reduce using rule 35 (statements_list -> statements_list code_block .)
    STRING          reduce using rule 35 (statements_list -> statements_list code_block .)
    [               reduce using rule 35 (statements_list -> statements_list code_block .)
    ZEROES          reduce using rule 35 (statements_list -> statements_list code_block .)
    EYE             reduce using rule 35 (statements_list -> statements_list code_block .)
    ONES            reduce using rule 35 (statements_list -> statements_list code_block .)
    -               reduce using rule 35 (statements_list -> statements_list code_block .)
    INTNUM          reduce using rule 35 (statements_list -> statements_list code_block .)
    FLOATNUM        reduce using rule 35 (statements_list -> statements_list code_block .)
    $end            reduce using rule 35 (statements_list -> statements_list code_block .)
    }               reduce using rule 35 (statements_list -> statements_list code_block .)


state 12

    (36) statements_list -> statements_list instruction .

    {               reduce using rule 36 (statements_list -> statements_list instruction .)
    ID              reduce using rule 36 (statements_list -> statements_list instruction .)
    BREAK           reduce using rule 36 (statements_list -> statements_list instruction .)
    CONTINUE        reduce using rule 36 (statements_list -> statements_list instruction .)
    FOR             reduce using rule 36 (statements_list -> statements_list instruction .)
    WHILE           reduce using rule 36 (statements_list -> statements_list instruction .)
    IF              reduce using rule 36 (statements_list -> statements_list instruction .)
    PRINT           reduce using rule 36 (statements_list -> statements_list instruction .)
    RETURN          reduce using rule 36 (statements_list -> statements_list instruction .)
    STRING          reduce using rule 36 (statements_list -> statements_list instruction .)
    [               reduce using rule 36 (statements_list -> statements_list instruction .)
    ZEROES          reduce using rule 36 (statements_list -> statements_list instruction .)
    EYE             reduce using rule 36 (statements_list -> statements_list instruction .)
    ONES            reduce using rule 36 (statements_list -> statements_list instruction .)
    -               reduce using rule 36 (statements_list -> statements_list instruction .)
    INTNUM          reduce using rule 36 (statements_list -> statements_list instruction .)
    FLOATNUM        reduce using rule 36 (statements_list -> statements_list instruction .)
    $end            reduce using rule 36 (statements_list -> statements_list instruction .)
    }               reduce using rule 36 (statements_list -> statements_list instruction .)


state 13

    (39) code_block -> expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 42
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 14

    (40) code_block -> { . statements_list }
    (41) code_block -> { . instruction }
    (35) statements_list -> . statements_list code_block
    (36) statements_list -> . statements_list instruction
    (37) statements_list -> . instruction code_block
    (38) statements_list -> . instruction instruction
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;

    ID              shift and go to state 3
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10

    statements_list                shift and go to state 58
    instruction                    shift and go to state 59

state 15

    (30) instruction -> ID . = expression ;
    (31) instruction -> ID . SUBASSIGN expression ;
    (32) instruction -> ID . ADDASSIGN expression ;
    (33) instruction -> ID . MLPASSIGN expression ;
    (34) instruction -> ID . DIVASSIGN expression ;
    (3) expression -> ID .

    =               shift and go to state 27
    SUBASSIGN       shift and go to state 28
    ADDASSIGN       shift and go to state 29
    MLPASSIGN       shift and go to state 30
    DIVASSIGN       shift and go to state 31
    ;               reduce using rule 3 (expression -> ID .)
    +               reduce using rule 3 (expression -> ID .)
    -               reduce using rule 3 (expression -> ID .)
    *               reduce using rule 3 (expression -> ID .)
    /               reduce using rule 3 (expression -> ID .)
    DOTADD          reduce using rule 3 (expression -> ID .)
    DOTSUB          reduce using rule 3 (expression -> ID .)
    DOTMLP          reduce using rule 3 (expression -> ID .)
    DOTDIV          reduce using rule 3 (expression -> ID .)
    TRANSPOSE       reduce using rule 3 (expression -> ID .)
    EQ              reduce using rule 3 (expression -> ID .)
    NE              reduce using rule 3 (expression -> ID .)
    >               reduce using rule 3 (expression -> ID .)
    GOE             reduce using rule 3 (expression -> ID .)
    <               reduce using rule 3 (expression -> ID .)
    LOE             reduce using rule 3 (expression -> ID .)


state 16

    (4) expression -> number .

    ;               reduce using rule 4 (expression -> number .)
    +               reduce using rule 4 (expression -> number .)
    -               reduce using rule 4 (expression -> number .)
    *               reduce using rule 4 (expression -> number .)
    /               reduce using rule 4 (expression -> number .)
    DOTADD          reduce using rule 4 (expression -> number .)
    DOTSUB          reduce using rule 4 (expression -> number .)
    DOTMLP          reduce using rule 4 (expression -> number .)
    DOTDIV          reduce using rule 4 (expression -> number .)
    TRANSPOSE       reduce using rule 4 (expression -> number .)
    EQ              reduce using rule 4 (expression -> number .)
    NE              reduce using rule 4 (expression -> number .)
    >               reduce using rule 4 (expression -> number .)
    GOE             reduce using rule 4 (expression -> number .)
    <               reduce using rule 4 (expression -> number .)
    LOE             reduce using rule 4 (expression -> number .)
    ,               reduce using rule 4 (expression -> number .)
    ]               reduce using rule 4 (expression -> number .)
    )               reduce using rule 4 (expression -> number .)
    :               reduce using rule 4 (expression -> number .)
    {               reduce using rule 4 (expression -> number .)
    ID              reduce using rule 4 (expression -> number .)
    BREAK           reduce using rule 4 (expression -> number .)
    CONTINUE        reduce using rule 4 (expression -> number .)
    FOR             reduce using rule 4 (expression -> number .)
    WHILE           reduce using rule 4 (expression -> number .)
    IF              reduce using rule 4 (expression -> number .)
    PRINT           reduce using rule 4 (expression -> number .)
    RETURN          reduce using rule 4 (expression -> number .)
    STRING          reduce using rule 4 (expression -> number .)
    [               reduce using rule 4 (expression -> number .)
    ZEROES          reduce using rule 4 (expression -> number .)
    EYE             reduce using rule 4 (expression -> number .)
    ONES            reduce using rule 4 (expression -> number .)
    INTNUM          reduce using rule 4 (expression -> number .)
    FLOATNUM        reduce using rule 4 (expression -> number .)


state 17

    (5) expression -> STRING .

    ;               reduce using rule 5 (expression -> STRING .)
    +               reduce using rule 5 (expression -> STRING .)
    -               reduce using rule 5 (expression -> STRING .)
    *               reduce using rule 5 (expression -> STRING .)
    /               reduce using rule 5 (expression -> STRING .)
    DOTADD          reduce using rule 5 (expression -> STRING .)
    DOTSUB          reduce using rule 5 (expression -> STRING .)
    DOTMLP          reduce using rule 5 (expression -> STRING .)
    DOTDIV          reduce using rule 5 (expression -> STRING .)
    TRANSPOSE       reduce using rule 5 (expression -> STRING .)
    EQ              reduce using rule 5 (expression -> STRING .)
    NE              reduce using rule 5 (expression -> STRING .)
    >               reduce using rule 5 (expression -> STRING .)
    GOE             reduce using rule 5 (expression -> STRING .)
    <               reduce using rule 5 (expression -> STRING .)
    LOE             reduce using rule 5 (expression -> STRING .)
    ,               reduce using rule 5 (expression -> STRING .)
    ]               reduce using rule 5 (expression -> STRING .)
    )               reduce using rule 5 (expression -> STRING .)
    :               reduce using rule 5 (expression -> STRING .)
    {               reduce using rule 5 (expression -> STRING .)
    ID              reduce using rule 5 (expression -> STRING .)
    BREAK           reduce using rule 5 (expression -> STRING .)
    CONTINUE        reduce using rule 5 (expression -> STRING .)
    FOR             reduce using rule 5 (expression -> STRING .)
    WHILE           reduce using rule 5 (expression -> STRING .)
    IF              reduce using rule 5 (expression -> STRING .)
    PRINT           reduce using rule 5 (expression -> STRING .)
    RETURN          reduce using rule 5 (expression -> STRING .)
    STRING          reduce using rule 5 (expression -> STRING .)
    [               reduce using rule 5 (expression -> STRING .)
    ZEROES          reduce using rule 5 (expression -> STRING .)
    EYE             reduce using rule 5 (expression -> STRING .)
    ONES            reduce using rule 5 (expression -> STRING .)
    INTNUM          reduce using rule 5 (expression -> STRING .)
    FLOATNUM        reduce using rule 5 (expression -> STRING .)


state 18

    (8) expression -> [ . expression ]
    (9) expression -> [ . table ]
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (6) table -> . expression , expression
    (7) table -> . table , expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 60
    table                          shift and go to state 61
    number                         shift and go to state 16

state 19

    (10) expression -> ZEROES . ( number )

    (               shift and go to state 62


state 20

    (11) expression -> EYE . ( number )

    (               shift and go to state 63


state 21

    (12) expression -> ONES . ( number )

    (               shift and go to state 64


state 22

    (13) expression -> - . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 65
    number                         shift and go to state 16

state 23

    (1) number -> INTNUM .

    ;               reduce using rule 1 (number -> INTNUM .)
    +               reduce using rule 1 (number -> INTNUM .)
    -               reduce using rule 1 (number -> INTNUM .)
    *               reduce using rule 1 (number -> INTNUM .)
    /               reduce using rule 1 (number -> INTNUM .)
    DOTADD          reduce using rule 1 (number -> INTNUM .)
    DOTSUB          reduce using rule 1 (number -> INTNUM .)
    DOTMLP          reduce using rule 1 (number -> INTNUM .)
    DOTDIV          reduce using rule 1 (number -> INTNUM .)
    TRANSPOSE       reduce using rule 1 (number -> INTNUM .)
    EQ              reduce using rule 1 (number -> INTNUM .)
    NE              reduce using rule 1 (number -> INTNUM .)
    >               reduce using rule 1 (number -> INTNUM .)
    GOE             reduce using rule 1 (number -> INTNUM .)
    <               reduce using rule 1 (number -> INTNUM .)
    LOE             reduce using rule 1 (number -> INTNUM .)
    ,               reduce using rule 1 (number -> INTNUM .)
    ]               reduce using rule 1 (number -> INTNUM .)
    )               reduce using rule 1 (number -> INTNUM .)
    :               reduce using rule 1 (number -> INTNUM .)
    {               reduce using rule 1 (number -> INTNUM .)
    ID              reduce using rule 1 (number -> INTNUM .)
    BREAK           reduce using rule 1 (number -> INTNUM .)
    CONTINUE        reduce using rule 1 (number -> INTNUM .)
    FOR             reduce using rule 1 (number -> INTNUM .)
    WHILE           reduce using rule 1 (number -> INTNUM .)
    IF              reduce using rule 1 (number -> INTNUM .)
    PRINT           reduce using rule 1 (number -> INTNUM .)
    RETURN          reduce using rule 1 (number -> INTNUM .)
    STRING          reduce using rule 1 (number -> INTNUM .)
    [               reduce using rule 1 (number -> INTNUM .)
    ZEROES          reduce using rule 1 (number -> INTNUM .)
    EYE             reduce using rule 1 (number -> INTNUM .)
    ONES            reduce using rule 1 (number -> INTNUM .)
    INTNUM          reduce using rule 1 (number -> INTNUM .)
    FLOATNUM        reduce using rule 1 (number -> INTNUM .)


state 24

    (2) number -> FLOATNUM .

    ;               reduce using rule 2 (number -> FLOATNUM .)
    +               reduce using rule 2 (number -> FLOATNUM .)
    -               reduce using rule 2 (number -> FLOATNUM .)
    *               reduce using rule 2 (number -> FLOATNUM .)
    /               reduce using rule 2 (number -> FLOATNUM .)
    DOTADD          reduce using rule 2 (number -> FLOATNUM .)
    DOTSUB          reduce using rule 2 (number -> FLOATNUM .)
    DOTMLP          reduce using rule 2 (number -> FLOATNUM .)
    DOTDIV          reduce using rule 2 (number -> FLOATNUM .)
    TRANSPOSE       reduce using rule 2 (number -> FLOATNUM .)
    EQ              reduce using rule 2 (number -> FLOATNUM .)
    NE              reduce using rule 2 (number -> FLOATNUM .)
    >               reduce using rule 2 (number -> FLOATNUM .)
    GOE             reduce using rule 2 (number -> FLOATNUM .)
    <               reduce using rule 2 (number -> FLOATNUM .)
    LOE             reduce using rule 2 (number -> FLOATNUM .)
    ,               reduce using rule 2 (number -> FLOATNUM .)
    ]               reduce using rule 2 (number -> FLOATNUM .)
    )               reduce using rule 2 (number -> FLOATNUM .)
    :               reduce using rule 2 (number -> FLOATNUM .)
    {               reduce using rule 2 (number -> FLOATNUM .)
    ID              reduce using rule 2 (number -> FLOATNUM .)
    BREAK           reduce using rule 2 (number -> FLOATNUM .)
    CONTINUE        reduce using rule 2 (number -> FLOATNUM .)
    FOR             reduce using rule 2 (number -> FLOATNUM .)
    WHILE           reduce using rule 2 (number -> FLOATNUM .)
    IF              reduce using rule 2 (number -> FLOATNUM .)
    PRINT           reduce using rule 2 (number -> FLOATNUM .)
    RETURN          reduce using rule 2 (number -> FLOATNUM .)
    STRING          reduce using rule 2 (number -> FLOATNUM .)
    [               reduce using rule 2 (number -> FLOATNUM .)
    ZEROES          reduce using rule 2 (number -> FLOATNUM .)
    EYE             reduce using rule 2 (number -> FLOATNUM .)
    ONES            reduce using rule 2 (number -> FLOATNUM .)
    INTNUM          reduce using rule 2 (number -> FLOATNUM .)
    FLOATNUM        reduce using rule 2 (number -> FLOATNUM .)


state 25

    (38) statements_list -> instruction instruction .

    {               reduce using rule 38 (statements_list -> instruction instruction .)
    ID              reduce using rule 38 (statements_list -> instruction instruction .)
    BREAK           reduce using rule 38 (statements_list -> instruction instruction .)
    CONTINUE        reduce using rule 38 (statements_list -> instruction instruction .)
    FOR             reduce using rule 38 (statements_list -> instruction instruction .)
    WHILE           reduce using rule 38 (statements_list -> instruction instruction .)
    IF              reduce using rule 38 (statements_list -> instruction instruction .)
    PRINT           reduce using rule 38 (statements_list -> instruction instruction .)
    RETURN          reduce using rule 38 (statements_list -> instruction instruction .)
    STRING          reduce using rule 38 (statements_list -> instruction instruction .)
    [               reduce using rule 38 (statements_list -> instruction instruction .)
    ZEROES          reduce using rule 38 (statements_list -> instruction instruction .)
    EYE             reduce using rule 38 (statements_list -> instruction instruction .)
    ONES            reduce using rule 38 (statements_list -> instruction instruction .)
    -               reduce using rule 38 (statements_list -> instruction instruction .)
    INTNUM          reduce using rule 38 (statements_list -> instruction instruction .)
    FLOATNUM        reduce using rule 38 (statements_list -> instruction instruction .)
    $end            reduce using rule 38 (statements_list -> instruction instruction .)
    }               reduce using rule 38 (statements_list -> instruction instruction .)


state 26

    (37) statements_list -> instruction code_block .

    {               reduce using rule 37 (statements_list -> instruction code_block .)
    ID              reduce using rule 37 (statements_list -> instruction code_block .)
    BREAK           reduce using rule 37 (statements_list -> instruction code_block .)
    CONTINUE        reduce using rule 37 (statements_list -> instruction code_block .)
    FOR             reduce using rule 37 (statements_list -> instruction code_block .)
    WHILE           reduce using rule 37 (statements_list -> instruction code_block .)
    IF              reduce using rule 37 (statements_list -> instruction code_block .)
    PRINT           reduce using rule 37 (statements_list -> instruction code_block .)
    RETURN          reduce using rule 37 (statements_list -> instruction code_block .)
    STRING          reduce using rule 37 (statements_list -> instruction code_block .)
    [               reduce using rule 37 (statements_list -> instruction code_block .)
    ZEROES          reduce using rule 37 (statements_list -> instruction code_block .)
    EYE             reduce using rule 37 (statements_list -> instruction code_block .)
    ONES            reduce using rule 37 (statements_list -> instruction code_block .)
    -               reduce using rule 37 (statements_list -> instruction code_block .)
    INTNUM          reduce using rule 37 (statements_list -> instruction code_block .)
    FLOATNUM        reduce using rule 37 (statements_list -> instruction code_block .)
    $end            reduce using rule 37 (statements_list -> instruction code_block .)
    }               reduce using rule 37 (statements_list -> instruction code_block .)


state 27

    (30) instruction -> ID = . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 66
    number                         shift and go to state 16

state 28

    (31) instruction -> ID SUBASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 67
    number                         shift and go to state 16

state 29

    (32) instruction -> ID ADDASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 68
    number                         shift and go to state 16

state 30

    (33) instruction -> ID MLPASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 69
    number                         shift and go to state 16

state 31

    (34) instruction -> ID DIVASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 70
    number                         shift and go to state 16

state 32

    (42) instruction -> BREAK ; .

    {               reduce using rule 42 (instruction -> BREAK ; .)
    ID              reduce using rule 42 (instruction -> BREAK ; .)
    BREAK           reduce using rule 42 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 42 (instruction -> BREAK ; .)
    FOR             reduce using rule 42 (instruction -> BREAK ; .)
    WHILE           reduce using rule 42 (instruction -> BREAK ; .)
    IF              reduce using rule 42 (instruction -> BREAK ; .)
    PRINT           reduce using rule 42 (instruction -> BREAK ; .)
    RETURN          reduce using rule 42 (instruction -> BREAK ; .)
    STRING          reduce using rule 42 (instruction -> BREAK ; .)
    [               reduce using rule 42 (instruction -> BREAK ; .)
    ZEROES          reduce using rule 42 (instruction -> BREAK ; .)
    EYE             reduce using rule 42 (instruction -> BREAK ; .)
    ONES            reduce using rule 42 (instruction -> BREAK ; .)
    -               reduce using rule 42 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 42 (instruction -> BREAK ; .)
    FLOATNUM        reduce using rule 42 (instruction -> BREAK ; .)
    $end            reduce using rule 42 (instruction -> BREAK ; .)
    }               reduce using rule 42 (instruction -> BREAK ; .)


state 33

    (43) instruction -> CONTINUE ; .

    {               reduce using rule 43 (instruction -> CONTINUE ; .)
    ID              reduce using rule 43 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 43 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 43 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 43 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 43 (instruction -> CONTINUE ; .)
    IF              reduce using rule 43 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 43 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 43 (instruction -> CONTINUE ; .)
    STRING          reduce using rule 43 (instruction -> CONTINUE ; .)
    [               reduce using rule 43 (instruction -> CONTINUE ; .)
    ZEROES          reduce using rule 43 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 43 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 43 (instruction -> CONTINUE ; .)
    -               reduce using rule 43 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 43 (instruction -> CONTINUE ; .)
    FLOATNUM        reduce using rule 43 (instruction -> CONTINUE ; .)
    $end            reduce using rule 43 (instruction -> CONTINUE ; .)
    }               reduce using rule 43 (instruction -> CONTINUE ; .)


state 34

    (44) instruction -> FOR ID . = range code_block
    (45) instruction -> FOR ID . = range instruction

    =               shift and go to state 71


state 35

    (46) instruction -> WHILE ( . expression ) code_block
    (47) instruction -> WHILE ( . expression ) instruction
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 72
    number                         shift and go to state 16

state 36

    (48) instruction -> IF ( . expression ) code_block
    (49) instruction -> IF ( . expression ) code_block else_block
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 73
    number                         shift and go to state 16

state 37

    (51) instruction -> PRINT table . ;
    (7) table -> table . , expression

    ;               shift and go to state 74
    ,               shift and go to state 75


state 38

    (52) instruction -> PRINT expression . ;
    (6) table -> expression . , expression
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 76
    ,               shift and go to state 77
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 39

    (3) expression -> ID .

    ;               reduce using rule 3 (expression -> ID .)
    ,               reduce using rule 3 (expression -> ID .)
    +               reduce using rule 3 (expression -> ID .)
    -               reduce using rule 3 (expression -> ID .)
    *               reduce using rule 3 (expression -> ID .)
    /               reduce using rule 3 (expression -> ID .)
    DOTADD          reduce using rule 3 (expression -> ID .)
    DOTSUB          reduce using rule 3 (expression -> ID .)
    DOTMLP          reduce using rule 3 (expression -> ID .)
    DOTDIV          reduce using rule 3 (expression -> ID .)
    TRANSPOSE       reduce using rule 3 (expression -> ID .)
    EQ              reduce using rule 3 (expression -> ID .)
    NE              reduce using rule 3 (expression -> ID .)
    >               reduce using rule 3 (expression -> ID .)
    GOE             reduce using rule 3 (expression -> ID .)
    <               reduce using rule 3 (expression -> ID .)
    LOE             reduce using rule 3 (expression -> ID .)
    ]               reduce using rule 3 (expression -> ID .)
    )               reduce using rule 3 (expression -> ID .)
    :               reduce using rule 3 (expression -> ID .)
    {               reduce using rule 3 (expression -> ID .)
    ID              reduce using rule 3 (expression -> ID .)
    BREAK           reduce using rule 3 (expression -> ID .)
    CONTINUE        reduce using rule 3 (expression -> ID .)
    FOR             reduce using rule 3 (expression -> ID .)
    WHILE           reduce using rule 3 (expression -> ID .)
    IF              reduce using rule 3 (expression -> ID .)
    PRINT           reduce using rule 3 (expression -> ID .)
    RETURN          reduce using rule 3 (expression -> ID .)
    STRING          reduce using rule 3 (expression -> ID .)
    [               reduce using rule 3 (expression -> ID .)
    ZEROES          reduce using rule 3 (expression -> ID .)
    EYE             reduce using rule 3 (expression -> ID .)
    ONES            reduce using rule 3 (expression -> ID .)
    INTNUM          reduce using rule 3 (expression -> ID .)
    FLOATNUM        reduce using rule 3 (expression -> ID .)


state 40

    (53) instruction -> RETURN ; .

    {               reduce using rule 53 (instruction -> RETURN ; .)
    ID              reduce using rule 53 (instruction -> RETURN ; .)
    BREAK           reduce using rule 53 (instruction -> RETURN ; .)
    CONTINUE        reduce using rule 53 (instruction -> RETURN ; .)
    FOR             reduce using rule 53 (instruction -> RETURN ; .)
    WHILE           reduce using rule 53 (instruction -> RETURN ; .)
    IF              reduce using rule 53 (instruction -> RETURN ; .)
    PRINT           reduce using rule 53 (instruction -> RETURN ; .)
    RETURN          reduce using rule 53 (instruction -> RETURN ; .)
    STRING          reduce using rule 53 (instruction -> RETURN ; .)
    [               reduce using rule 53 (instruction -> RETURN ; .)
    ZEROES          reduce using rule 53 (instruction -> RETURN ; .)
    EYE             reduce using rule 53 (instruction -> RETURN ; .)
    ONES            reduce using rule 53 (instruction -> RETURN ; .)
    -               reduce using rule 53 (instruction -> RETURN ; .)
    INTNUM          reduce using rule 53 (instruction -> RETURN ; .)
    FLOATNUM        reduce using rule 53 (instruction -> RETURN ; .)
    $end            reduce using rule 53 (instruction -> RETURN ; .)
    }               reduce using rule 53 (instruction -> RETURN ; .)


state 41

    (54) instruction -> RETURN expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 78
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 42

    (39) code_block -> expression ; .

    {               reduce using rule 39 (code_block -> expression ; .)
    ID              reduce using rule 39 (code_block -> expression ; .)
    BREAK           reduce using rule 39 (code_block -> expression ; .)
    CONTINUE        reduce using rule 39 (code_block -> expression ; .)
    FOR             reduce using rule 39 (code_block -> expression ; .)
    WHILE           reduce using rule 39 (code_block -> expression ; .)
    IF              reduce using rule 39 (code_block -> expression ; .)
    PRINT           reduce using rule 39 (code_block -> expression ; .)
    RETURN          reduce using rule 39 (code_block -> expression ; .)
    STRING          reduce using rule 39 (code_block -> expression ; .)
    [               reduce using rule 39 (code_block -> expression ; .)
    ZEROES          reduce using rule 39 (code_block -> expression ; .)
    EYE             reduce using rule 39 (code_block -> expression ; .)
    ONES            reduce using rule 39 (code_block -> expression ; .)
    -               reduce using rule 39 (code_block -> expression ; .)
    INTNUM          reduce using rule 39 (code_block -> expression ; .)
    FLOATNUM        reduce using rule 39 (code_block -> expression ; .)
    $end            reduce using rule 39 (code_block -> expression ; .)
    }               reduce using rule 39 (code_block -> expression ; .)
    ELSE            reduce using rule 39 (code_block -> expression ; .)


state 43

    (14) expression -> expression + . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 79
    number                         shift and go to state 16

state 44

    (15) expression -> expression - . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 80
    number                         shift and go to state 16

state 45

    (16) expression -> expression * . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 81
    number                         shift and go to state 16

state 46

    (17) expression -> expression / . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 82
    number                         shift and go to state 16

state 47

    (18) expression -> expression DOTADD . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 83
    number                         shift and go to state 16

state 48

    (19) expression -> expression DOTSUB . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 84
    number                         shift and go to state 16

state 49

    (20) expression -> expression DOTMLP . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 85
    number                         shift and go to state 16

state 50

    (21) expression -> expression DOTDIV . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 86
    number                         shift and go to state 16

state 51

    (22) expression -> expression TRANSPOSE .

    ;               reduce using rule 22 (expression -> expression TRANSPOSE .)
    +               reduce using rule 22 (expression -> expression TRANSPOSE .)
    -               reduce using rule 22 (expression -> expression TRANSPOSE .)
    *               reduce using rule 22 (expression -> expression TRANSPOSE .)
    /               reduce using rule 22 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 22 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 22 (expression -> expression TRANSPOSE .)
    DOTMLP          reduce using rule 22 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 22 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 22 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 22 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 22 (expression -> expression TRANSPOSE .)
    >               reduce using rule 22 (expression -> expression TRANSPOSE .)
    GOE             reduce using rule 22 (expression -> expression TRANSPOSE .)
    <               reduce using rule 22 (expression -> expression TRANSPOSE .)
    LOE             reduce using rule 22 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 22 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 22 (expression -> expression TRANSPOSE .)
    )               reduce using rule 22 (expression -> expression TRANSPOSE .)
    :               reduce using rule 22 (expression -> expression TRANSPOSE .)
    {               reduce using rule 22 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 22 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 22 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 22 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 22 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 22 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 22 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 22 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 22 (expression -> expression TRANSPOSE .)
    STRING          reduce using rule 22 (expression -> expression TRANSPOSE .)
    [               reduce using rule 22 (expression -> expression TRANSPOSE .)
    ZEROES          reduce using rule 22 (expression -> expression TRANSPOSE .)
    EYE             reduce using rule 22 (expression -> expression TRANSPOSE .)
    ONES            reduce using rule 22 (expression -> expression TRANSPOSE .)
    INTNUM          reduce using rule 22 (expression -> expression TRANSPOSE .)
    FLOATNUM        reduce using rule 22 (expression -> expression TRANSPOSE .)


state 52

    (23) expression -> expression EQ . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 87
    number                         shift and go to state 16

state 53

    (24) expression -> expression NE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 88
    number                         shift and go to state 16

state 54

    (25) expression -> expression > . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 89
    number                         shift and go to state 16

state 55

    (26) expression -> expression GOE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 90
    number                         shift and go to state 16

state 56

    (27) expression -> expression < . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 91
    number                         shift and go to state 16

state 57

    (28) expression -> expression LOE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 92
    number                         shift and go to state 16

state 58

    (40) code_block -> { statements_list . }
    (35) statements_list -> statements_list . code_block
    (36) statements_list -> statements_list . instruction
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    }               shift and go to state 93
    {               shift and go to state 14
    ID              shift and go to state 15
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    code_block                     shift and go to state 11
    instruction                    shift and go to state 12
    expression                     shift and go to state 13
    number                         shift and go to state 16

state 59

    (41) code_block -> { instruction . }
    (37) statements_list -> instruction . code_block
    (38) statements_list -> instruction . instruction
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    }               shift and go to state 94
    {               shift and go to state 14
    ID              shift and go to state 15
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    instruction                    shift and go to state 25
    code_block                     shift and go to state 26
    expression                     shift and go to state 13
    number                         shift and go to state 16

state 60

    (8) expression -> [ expression . ]
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression
    (6) table -> expression . , expression

    ]               shift and go to state 95
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57
    ,               shift and go to state 77


state 61

    (9) expression -> [ table . ]
    (7) table -> table . , expression

    ]               shift and go to state 96
    ,               shift and go to state 75


state 62

    (10) expression -> ZEROES ( . number )
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    number                         shift and go to state 97

state 63

    (11) expression -> EYE ( . number )
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    number                         shift and go to state 98

state 64

    (12) expression -> ONES ( . number )
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    number                         shift and go to state 99

state 65

    (13) expression -> - expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 13 (expression -> - expression .)
    +               reduce using rule 13 (expression -> - expression .)
    -               reduce using rule 13 (expression -> - expression .)
    TRANSPOSE       reduce using rule 13 (expression -> - expression .)
    EQ              reduce using rule 13 (expression -> - expression .)
    NE              reduce using rule 13 (expression -> - expression .)
    >               reduce using rule 13 (expression -> - expression .)
    GOE             reduce using rule 13 (expression -> - expression .)
    <               reduce using rule 13 (expression -> - expression .)
    LOE             reduce using rule 13 (expression -> - expression .)
    ,               reduce using rule 13 (expression -> - expression .)
    ]               reduce using rule 13 (expression -> - expression .)
    )               reduce using rule 13 (expression -> - expression .)
    :               reduce using rule 13 (expression -> - expression .)
    {               reduce using rule 13 (expression -> - expression .)
    ID              reduce using rule 13 (expression -> - expression .)
    BREAK           reduce using rule 13 (expression -> - expression .)
    CONTINUE        reduce using rule 13 (expression -> - expression .)
    FOR             reduce using rule 13 (expression -> - expression .)
    WHILE           reduce using rule 13 (expression -> - expression .)
    IF              reduce using rule 13 (expression -> - expression .)
    PRINT           reduce using rule 13 (expression -> - expression .)
    RETURN          reduce using rule 13 (expression -> - expression .)
    STRING          reduce using rule 13 (expression -> - expression .)
    [               reduce using rule 13 (expression -> - expression .)
    ZEROES          reduce using rule 13 (expression -> - expression .)
    EYE             reduce using rule 13 (expression -> - expression .)
    ONES            reduce using rule 13 (expression -> - expression .)
    INTNUM          reduce using rule 13 (expression -> - expression .)
    FLOATNUM        reduce using rule 13 (expression -> - expression .)
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! *               [ reduce using rule 13 (expression -> - expression .) ]
  ! /               [ reduce using rule 13 (expression -> - expression .) ]
  ! DOTADD          [ reduce using rule 13 (expression -> - expression .) ]
  ! DOTSUB          [ reduce using rule 13 (expression -> - expression .) ]
  ! DOTMLP          [ reduce using rule 13 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 13 (expression -> - expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 66

    (30) instruction -> ID = expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 100
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 67

    (31) instruction -> ID SUBASSIGN expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 101
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 68

    (32) instruction -> ID ADDASSIGN expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 102
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 69

    (33) instruction -> ID MLPASSIGN expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 103
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 70

    (34) instruction -> ID DIVASSIGN expression . ;
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               shift and go to state 104
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 71

    (44) instruction -> FOR ID = . range code_block
    (45) instruction -> FOR ID = . range instruction
    (29) range -> . expression : expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    range                          shift and go to state 105
    expression                     shift and go to state 106
    number                         shift and go to state 16

state 72

    (46) instruction -> WHILE ( expression . ) code_block
    (47) instruction -> WHILE ( expression . ) instruction
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    )               shift and go to state 107
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 73

    (48) instruction -> IF ( expression . ) code_block
    (49) instruction -> IF ( expression . ) code_block else_block
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    )               shift and go to state 108
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 74

    (51) instruction -> PRINT table ; .

    {               reduce using rule 51 (instruction -> PRINT table ; .)
    ID              reduce using rule 51 (instruction -> PRINT table ; .)
    BREAK           reduce using rule 51 (instruction -> PRINT table ; .)
    CONTINUE        reduce using rule 51 (instruction -> PRINT table ; .)
    FOR             reduce using rule 51 (instruction -> PRINT table ; .)
    WHILE           reduce using rule 51 (instruction -> PRINT table ; .)
    IF              reduce using rule 51 (instruction -> PRINT table ; .)
    PRINT           reduce using rule 51 (instruction -> PRINT table ; .)
    RETURN          reduce using rule 51 (instruction -> PRINT table ; .)
    STRING          reduce using rule 51 (instruction -> PRINT table ; .)
    [               reduce using rule 51 (instruction -> PRINT table ; .)
    ZEROES          reduce using rule 51 (instruction -> PRINT table ; .)
    EYE             reduce using rule 51 (instruction -> PRINT table ; .)
    ONES            reduce using rule 51 (instruction -> PRINT table ; .)
    -               reduce using rule 51 (instruction -> PRINT table ; .)
    INTNUM          reduce using rule 51 (instruction -> PRINT table ; .)
    FLOATNUM        reduce using rule 51 (instruction -> PRINT table ; .)
    $end            reduce using rule 51 (instruction -> PRINT table ; .)
    }               reduce using rule 51 (instruction -> PRINT table ; .)


state 75

    (7) table -> table , . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 109
    number                         shift and go to state 16

state 76

    (52) instruction -> PRINT expression ; .

    {               reduce using rule 52 (instruction -> PRINT expression ; .)
    ID              reduce using rule 52 (instruction -> PRINT expression ; .)
    BREAK           reduce using rule 52 (instruction -> PRINT expression ; .)
    CONTINUE        reduce using rule 52 (instruction -> PRINT expression ; .)
    FOR             reduce using rule 52 (instruction -> PRINT expression ; .)
    WHILE           reduce using rule 52 (instruction -> PRINT expression ; .)
    IF              reduce using rule 52 (instruction -> PRINT expression ; .)
    PRINT           reduce using rule 52 (instruction -> PRINT expression ; .)
    RETURN          reduce using rule 52 (instruction -> PRINT expression ; .)
    STRING          reduce using rule 52 (instruction -> PRINT expression ; .)
    [               reduce using rule 52 (instruction -> PRINT expression ; .)
    ZEROES          reduce using rule 52 (instruction -> PRINT expression ; .)
    EYE             reduce using rule 52 (instruction -> PRINT expression ; .)
    ONES            reduce using rule 52 (instruction -> PRINT expression ; .)
    -               reduce using rule 52 (instruction -> PRINT expression ; .)
    INTNUM          reduce using rule 52 (instruction -> PRINT expression ; .)
    FLOATNUM        reduce using rule 52 (instruction -> PRINT expression ; .)
    $end            reduce using rule 52 (instruction -> PRINT expression ; .)
    }               reduce using rule 52 (instruction -> PRINT expression ; .)


state 77

    (6) table -> expression , . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 110
    number                         shift and go to state 16

state 78

    (54) instruction -> RETURN expression ; .

    {               reduce using rule 54 (instruction -> RETURN expression ; .)
    ID              reduce using rule 54 (instruction -> RETURN expression ; .)
    BREAK           reduce using rule 54 (instruction -> RETURN expression ; .)
    CONTINUE        reduce using rule 54 (instruction -> RETURN expression ; .)
    FOR             reduce using rule 54 (instruction -> RETURN expression ; .)
    WHILE           reduce using rule 54 (instruction -> RETURN expression ; .)
    IF              reduce using rule 54 (instruction -> RETURN expression ; .)
    PRINT           reduce using rule 54 (instruction -> RETURN expression ; .)
    RETURN          reduce using rule 54 (instruction -> RETURN expression ; .)
    STRING          reduce using rule 54 (instruction -> RETURN expression ; .)
    [               reduce using rule 54 (instruction -> RETURN expression ; .)
    ZEROES          reduce using rule 54 (instruction -> RETURN expression ; .)
    EYE             reduce using rule 54 (instruction -> RETURN expression ; .)
    ONES            reduce using rule 54 (instruction -> RETURN expression ; .)
    -               reduce using rule 54 (instruction -> RETURN expression ; .)
    INTNUM          reduce using rule 54 (instruction -> RETURN expression ; .)
    FLOATNUM        reduce using rule 54 (instruction -> RETURN expression ; .)
    $end            reduce using rule 54 (instruction -> RETURN expression ; .)
    }               reduce using rule 54 (instruction -> RETURN expression ; .)


state 79

    (14) expression -> expression + expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 14 (expression -> expression + expression .)
    +               reduce using rule 14 (expression -> expression + expression .)
    -               reduce using rule 14 (expression -> expression + expression .)
    TRANSPOSE       reduce using rule 14 (expression -> expression + expression .)
    EQ              reduce using rule 14 (expression -> expression + expression .)
    NE              reduce using rule 14 (expression -> expression + expression .)
    >               reduce using rule 14 (expression -> expression + expression .)
    GOE             reduce using rule 14 (expression -> expression + expression .)
    <               reduce using rule 14 (expression -> expression + expression .)
    LOE             reduce using rule 14 (expression -> expression + expression .)
    ,               reduce using rule 14 (expression -> expression + expression .)
    ]               reduce using rule 14 (expression -> expression + expression .)
    )               reduce using rule 14 (expression -> expression + expression .)
    :               reduce using rule 14 (expression -> expression + expression .)
    {               reduce using rule 14 (expression -> expression + expression .)
    ID              reduce using rule 14 (expression -> expression + expression .)
    BREAK           reduce using rule 14 (expression -> expression + expression .)
    CONTINUE        reduce using rule 14 (expression -> expression + expression .)
    FOR             reduce using rule 14 (expression -> expression + expression .)
    WHILE           reduce using rule 14 (expression -> expression + expression .)
    IF              reduce using rule 14 (expression -> expression + expression .)
    PRINT           reduce using rule 14 (expression -> expression + expression .)
    RETURN          reduce using rule 14 (expression -> expression + expression .)
    STRING          reduce using rule 14 (expression -> expression + expression .)
    [               reduce using rule 14 (expression -> expression + expression .)
    ZEROES          reduce using rule 14 (expression -> expression + expression .)
    EYE             reduce using rule 14 (expression -> expression + expression .)
    ONES            reduce using rule 14 (expression -> expression + expression .)
    INTNUM          reduce using rule 14 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 14 (expression -> expression + expression .)
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! *               [ reduce using rule 14 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 14 (expression -> expression + expression .) ]
  ! DOTADD          [ reduce using rule 14 (expression -> expression + expression .) ]
  ! DOTSUB          [ reduce using rule 14 (expression -> expression + expression .) ]
  ! DOTMLP          [ reduce using rule 14 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 14 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 80

    (15) expression -> expression - expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 15 (expression -> expression - expression .)
    +               reduce using rule 15 (expression -> expression - expression .)
    -               reduce using rule 15 (expression -> expression - expression .)
    TRANSPOSE       reduce using rule 15 (expression -> expression - expression .)
    EQ              reduce using rule 15 (expression -> expression - expression .)
    NE              reduce using rule 15 (expression -> expression - expression .)
    >               reduce using rule 15 (expression -> expression - expression .)
    GOE             reduce using rule 15 (expression -> expression - expression .)
    <               reduce using rule 15 (expression -> expression - expression .)
    LOE             reduce using rule 15 (expression -> expression - expression .)
    ,               reduce using rule 15 (expression -> expression - expression .)
    ]               reduce using rule 15 (expression -> expression - expression .)
    )               reduce using rule 15 (expression -> expression - expression .)
    :               reduce using rule 15 (expression -> expression - expression .)
    {               reduce using rule 15 (expression -> expression - expression .)
    ID              reduce using rule 15 (expression -> expression - expression .)
    BREAK           reduce using rule 15 (expression -> expression - expression .)
    CONTINUE        reduce using rule 15 (expression -> expression - expression .)
    FOR             reduce using rule 15 (expression -> expression - expression .)
    WHILE           reduce using rule 15 (expression -> expression - expression .)
    IF              reduce using rule 15 (expression -> expression - expression .)
    PRINT           reduce using rule 15 (expression -> expression - expression .)
    RETURN          reduce using rule 15 (expression -> expression - expression .)
    STRING          reduce using rule 15 (expression -> expression - expression .)
    [               reduce using rule 15 (expression -> expression - expression .)
    ZEROES          reduce using rule 15 (expression -> expression - expression .)
    EYE             reduce using rule 15 (expression -> expression - expression .)
    ONES            reduce using rule 15 (expression -> expression - expression .)
    INTNUM          reduce using rule 15 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 15 (expression -> expression - expression .)
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! *               [ reduce using rule 15 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 15 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 15 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 15 (expression -> expression - expression .) ]
  ! DOTMLP          [ reduce using rule 15 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 15 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 81

    (16) expression -> expression * expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 16 (expression -> expression * expression .)
    +               reduce using rule 16 (expression -> expression * expression .)
    -               reduce using rule 16 (expression -> expression * expression .)
    *               reduce using rule 16 (expression -> expression * expression .)
    /               reduce using rule 16 (expression -> expression * expression .)
    TRANSPOSE       reduce using rule 16 (expression -> expression * expression .)
    EQ              reduce using rule 16 (expression -> expression * expression .)
    NE              reduce using rule 16 (expression -> expression * expression .)
    >               reduce using rule 16 (expression -> expression * expression .)
    GOE             reduce using rule 16 (expression -> expression * expression .)
    <               reduce using rule 16 (expression -> expression * expression .)
    LOE             reduce using rule 16 (expression -> expression * expression .)
    ,               reduce using rule 16 (expression -> expression * expression .)
    ]               reduce using rule 16 (expression -> expression * expression .)
    )               reduce using rule 16 (expression -> expression * expression .)
    :               reduce using rule 16 (expression -> expression * expression .)
    {               reduce using rule 16 (expression -> expression * expression .)
    ID              reduce using rule 16 (expression -> expression * expression .)
    BREAK           reduce using rule 16 (expression -> expression * expression .)
    CONTINUE        reduce using rule 16 (expression -> expression * expression .)
    FOR             reduce using rule 16 (expression -> expression * expression .)
    WHILE           reduce using rule 16 (expression -> expression * expression .)
    IF              reduce using rule 16 (expression -> expression * expression .)
    PRINT           reduce using rule 16 (expression -> expression * expression .)
    RETURN          reduce using rule 16 (expression -> expression * expression .)
    STRING          reduce using rule 16 (expression -> expression * expression .)
    [               reduce using rule 16 (expression -> expression * expression .)
    ZEROES          reduce using rule 16 (expression -> expression * expression .)
    EYE             reduce using rule 16 (expression -> expression * expression .)
    ONES            reduce using rule 16 (expression -> expression * expression .)
    INTNUM          reduce using rule 16 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 16 (expression -> expression * expression .)
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! DOTADD          [ reduce using rule 16 (expression -> expression * expression .) ]
  ! DOTSUB          [ reduce using rule 16 (expression -> expression * expression .) ]
  ! DOTMLP          [ reduce using rule 16 (expression -> expression * expression .) ]
  ! DOTDIV          [ reduce using rule 16 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! *               [ shift and go to state 45 ]
  ! /               [ shift and go to state 46 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 82

    (17) expression -> expression / expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 17 (expression -> expression / expression .)
    +               reduce using rule 17 (expression -> expression / expression .)
    -               reduce using rule 17 (expression -> expression / expression .)
    *               reduce using rule 17 (expression -> expression / expression .)
    /               reduce using rule 17 (expression -> expression / expression .)
    TRANSPOSE       reduce using rule 17 (expression -> expression / expression .)
    EQ              reduce using rule 17 (expression -> expression / expression .)
    NE              reduce using rule 17 (expression -> expression / expression .)
    >               reduce using rule 17 (expression -> expression / expression .)
    GOE             reduce using rule 17 (expression -> expression / expression .)
    <               reduce using rule 17 (expression -> expression / expression .)
    LOE             reduce using rule 17 (expression -> expression / expression .)
    ,               reduce using rule 17 (expression -> expression / expression .)
    ]               reduce using rule 17 (expression -> expression / expression .)
    )               reduce using rule 17 (expression -> expression / expression .)
    :               reduce using rule 17 (expression -> expression / expression .)
    {               reduce using rule 17 (expression -> expression / expression .)
    ID              reduce using rule 17 (expression -> expression / expression .)
    BREAK           reduce using rule 17 (expression -> expression / expression .)
    CONTINUE        reduce using rule 17 (expression -> expression / expression .)
    FOR             reduce using rule 17 (expression -> expression / expression .)
    WHILE           reduce using rule 17 (expression -> expression / expression .)
    IF              reduce using rule 17 (expression -> expression / expression .)
    PRINT           reduce using rule 17 (expression -> expression / expression .)
    RETURN          reduce using rule 17 (expression -> expression / expression .)
    STRING          reduce using rule 17 (expression -> expression / expression .)
    [               reduce using rule 17 (expression -> expression / expression .)
    ZEROES          reduce using rule 17 (expression -> expression / expression .)
    EYE             reduce using rule 17 (expression -> expression / expression .)
    ONES            reduce using rule 17 (expression -> expression / expression .)
    INTNUM          reduce using rule 17 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 17 (expression -> expression / expression .)
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! DOTADD          [ reduce using rule 17 (expression -> expression / expression .) ]
  ! DOTSUB          [ reduce using rule 17 (expression -> expression / expression .) ]
  ! DOTMLP          [ reduce using rule 17 (expression -> expression / expression .) ]
  ! DOTDIV          [ reduce using rule 17 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! *               [ shift and go to state 45 ]
  ! /               [ shift and go to state 46 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 83

    (18) expression -> expression DOTADD expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 18 (expression -> expression DOTADD expression .)
    +               reduce using rule 18 (expression -> expression DOTADD expression .)
    -               reduce using rule 18 (expression -> expression DOTADD expression .)
    *               reduce using rule 18 (expression -> expression DOTADD expression .)
    /               reduce using rule 18 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 18 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 18 (expression -> expression DOTADD expression .)
    TRANSPOSE       reduce using rule 18 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 18 (expression -> expression DOTADD expression .)
    NE              reduce using rule 18 (expression -> expression DOTADD expression .)
    >               reduce using rule 18 (expression -> expression DOTADD expression .)
    GOE             reduce using rule 18 (expression -> expression DOTADD expression .)
    <               reduce using rule 18 (expression -> expression DOTADD expression .)
    LOE             reduce using rule 18 (expression -> expression DOTADD expression .)
    ,               reduce using rule 18 (expression -> expression DOTADD expression .)
    ]               reduce using rule 18 (expression -> expression DOTADD expression .)
    )               reduce using rule 18 (expression -> expression DOTADD expression .)
    :               reduce using rule 18 (expression -> expression DOTADD expression .)
    {               reduce using rule 18 (expression -> expression DOTADD expression .)
    ID              reduce using rule 18 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 18 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 18 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 18 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 18 (expression -> expression DOTADD expression .)
    IF              reduce using rule 18 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 18 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 18 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 18 (expression -> expression DOTADD expression .)
    [               reduce using rule 18 (expression -> expression DOTADD expression .)
    ZEROES          reduce using rule 18 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 18 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 18 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 18 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 18 (expression -> expression DOTADD expression .)
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! DOTMLP          [ reduce using rule 18 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 18 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! *               [ shift and go to state 45 ]
  ! /               [ shift and go to state 46 ]
  ! DOTADD          [ shift and go to state 47 ]
  ! DOTSUB          [ shift and go to state 48 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 84

    (19) expression -> expression DOTSUB expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 19 (expression -> expression DOTSUB expression .)
    +               reduce using rule 19 (expression -> expression DOTSUB expression .)
    -               reduce using rule 19 (expression -> expression DOTSUB expression .)
    *               reduce using rule 19 (expression -> expression DOTSUB expression .)
    /               reduce using rule 19 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 19 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 19 (expression -> expression DOTSUB expression .)
    TRANSPOSE       reduce using rule 19 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 19 (expression -> expression DOTSUB expression .)
    NE              reduce using rule 19 (expression -> expression DOTSUB expression .)
    >               reduce using rule 19 (expression -> expression DOTSUB expression .)
    GOE             reduce using rule 19 (expression -> expression DOTSUB expression .)
    <               reduce using rule 19 (expression -> expression DOTSUB expression .)
    LOE             reduce using rule 19 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 19 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 19 (expression -> expression DOTSUB expression .)
    )               reduce using rule 19 (expression -> expression DOTSUB expression .)
    :               reduce using rule 19 (expression -> expression DOTSUB expression .)
    {               reduce using rule 19 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 19 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 19 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 19 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 19 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 19 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 19 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 19 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 19 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 19 (expression -> expression DOTSUB expression .)
    [               reduce using rule 19 (expression -> expression DOTSUB expression .)
    ZEROES          reduce using rule 19 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 19 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 19 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 19 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 19 (expression -> expression DOTSUB expression .)
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! DOTMLP          [ reduce using rule 19 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 19 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! *               [ shift and go to state 45 ]
  ! /               [ shift and go to state 46 ]
  ! DOTADD          [ shift and go to state 47 ]
  ! DOTSUB          [ shift and go to state 48 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 85

    (20) expression -> expression DOTMLP expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 20 (expression -> expression DOTMLP expression .)
    +               reduce using rule 20 (expression -> expression DOTMLP expression .)
    -               reduce using rule 20 (expression -> expression DOTMLP expression .)
    *               reduce using rule 20 (expression -> expression DOTMLP expression .)
    /               reduce using rule 20 (expression -> expression DOTMLP expression .)
    DOTADD          reduce using rule 20 (expression -> expression DOTMLP expression .)
    DOTSUB          reduce using rule 20 (expression -> expression DOTMLP expression .)
    DOTMLP          reduce using rule 20 (expression -> expression DOTMLP expression .)
    DOTDIV          reduce using rule 20 (expression -> expression DOTMLP expression .)
    TRANSPOSE       reduce using rule 20 (expression -> expression DOTMLP expression .)
    EQ              reduce using rule 20 (expression -> expression DOTMLP expression .)
    NE              reduce using rule 20 (expression -> expression DOTMLP expression .)
    >               reduce using rule 20 (expression -> expression DOTMLP expression .)
    GOE             reduce using rule 20 (expression -> expression DOTMLP expression .)
    <               reduce using rule 20 (expression -> expression DOTMLP expression .)
    LOE             reduce using rule 20 (expression -> expression DOTMLP expression .)
    ,               reduce using rule 20 (expression -> expression DOTMLP expression .)
    ]               reduce using rule 20 (expression -> expression DOTMLP expression .)
    )               reduce using rule 20 (expression -> expression DOTMLP expression .)
    :               reduce using rule 20 (expression -> expression DOTMLP expression .)
    {               reduce using rule 20 (expression -> expression DOTMLP expression .)
    ID              reduce using rule 20 (expression -> expression DOTMLP expression .)
    BREAK           reduce using rule 20 (expression -> expression DOTMLP expression .)
    CONTINUE        reduce using rule 20 (expression -> expression DOTMLP expression .)
    FOR             reduce using rule 20 (expression -> expression DOTMLP expression .)
    WHILE           reduce using rule 20 (expression -> expression DOTMLP expression .)
    IF              reduce using rule 20 (expression -> expression DOTMLP expression .)
    PRINT           reduce using rule 20 (expression -> expression DOTMLP expression .)
    RETURN          reduce using rule 20 (expression -> expression DOTMLP expression .)
    STRING          reduce using rule 20 (expression -> expression DOTMLP expression .)
    [               reduce using rule 20 (expression -> expression DOTMLP expression .)
    ZEROES          reduce using rule 20 (expression -> expression DOTMLP expression .)
    EYE             reduce using rule 20 (expression -> expression DOTMLP expression .)
    ONES            reduce using rule 20 (expression -> expression DOTMLP expression .)
    INTNUM          reduce using rule 20 (expression -> expression DOTMLP expression .)
    FLOATNUM        reduce using rule 20 (expression -> expression DOTMLP expression .)

  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! *               [ shift and go to state 45 ]
  ! /               [ shift and go to state 46 ]
  ! DOTADD          [ shift and go to state 47 ]
  ! DOTSUB          [ shift and go to state 48 ]
  ! DOTMLP          [ shift and go to state 49 ]
  ! DOTDIV          [ shift and go to state 50 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 86

    (21) expression -> expression DOTDIV expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 21 (expression -> expression DOTDIV expression .)
    +               reduce using rule 21 (expression -> expression DOTDIV expression .)
    -               reduce using rule 21 (expression -> expression DOTDIV expression .)
    *               reduce using rule 21 (expression -> expression DOTDIV expression .)
    /               reduce using rule 21 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 21 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 21 (expression -> expression DOTDIV expression .)
    DOTMLP          reduce using rule 21 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 21 (expression -> expression DOTDIV expression .)
    TRANSPOSE       reduce using rule 21 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 21 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 21 (expression -> expression DOTDIV expression .)
    >               reduce using rule 21 (expression -> expression DOTDIV expression .)
    GOE             reduce using rule 21 (expression -> expression DOTDIV expression .)
    <               reduce using rule 21 (expression -> expression DOTDIV expression .)
    LOE             reduce using rule 21 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 21 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 21 (expression -> expression DOTDIV expression .)
    )               reduce using rule 21 (expression -> expression DOTDIV expression .)
    :               reduce using rule 21 (expression -> expression DOTDIV expression .)
    {               reduce using rule 21 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 21 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 21 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 21 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 21 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 21 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 21 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 21 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 21 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 21 (expression -> expression DOTDIV expression .)
    [               reduce using rule 21 (expression -> expression DOTDIV expression .)
    ZEROES          reduce using rule 21 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 21 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 21 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 21 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 21 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 43 ]
  ! -               [ shift and go to state 44 ]
  ! *               [ shift and go to state 45 ]
  ! /               [ shift and go to state 46 ]
  ! DOTADD          [ shift and go to state 47 ]
  ! DOTSUB          [ shift and go to state 48 ]
  ! DOTMLP          [ shift and go to state 49 ]
  ! DOTDIV          [ shift and go to state 50 ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 87

    (23) expression -> expression EQ expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 23 (expression -> expression EQ expression .)
    TRANSPOSE       reduce using rule 23 (expression -> expression EQ expression .)
    EQ              reduce using rule 23 (expression -> expression EQ expression .)
    NE              reduce using rule 23 (expression -> expression EQ expression .)
    >               reduce using rule 23 (expression -> expression EQ expression .)
    GOE             reduce using rule 23 (expression -> expression EQ expression .)
    <               reduce using rule 23 (expression -> expression EQ expression .)
    LOE             reduce using rule 23 (expression -> expression EQ expression .)
    ,               reduce using rule 23 (expression -> expression EQ expression .)
    ]               reduce using rule 23 (expression -> expression EQ expression .)
    )               reduce using rule 23 (expression -> expression EQ expression .)
    :               reduce using rule 23 (expression -> expression EQ expression .)
    {               reduce using rule 23 (expression -> expression EQ expression .)
    ID              reduce using rule 23 (expression -> expression EQ expression .)
    BREAK           reduce using rule 23 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 23 (expression -> expression EQ expression .)
    FOR             reduce using rule 23 (expression -> expression EQ expression .)
    WHILE           reduce using rule 23 (expression -> expression EQ expression .)
    IF              reduce using rule 23 (expression -> expression EQ expression .)
    PRINT           reduce using rule 23 (expression -> expression EQ expression .)
    RETURN          reduce using rule 23 (expression -> expression EQ expression .)
    STRING          reduce using rule 23 (expression -> expression EQ expression .)
    [               reduce using rule 23 (expression -> expression EQ expression .)
    ZEROES          reduce using rule 23 (expression -> expression EQ expression .)
    EYE             reduce using rule 23 (expression -> expression EQ expression .)
    ONES            reduce using rule 23 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 23 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 23 (expression -> expression EQ expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! +               [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! DOTMLP          [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 88

    (24) expression -> expression NE expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 24 (expression -> expression NE expression .)
    TRANSPOSE       reduce using rule 24 (expression -> expression NE expression .)
    EQ              reduce using rule 24 (expression -> expression NE expression .)
    NE              reduce using rule 24 (expression -> expression NE expression .)
    >               reduce using rule 24 (expression -> expression NE expression .)
    GOE             reduce using rule 24 (expression -> expression NE expression .)
    <               reduce using rule 24 (expression -> expression NE expression .)
    LOE             reduce using rule 24 (expression -> expression NE expression .)
    ,               reduce using rule 24 (expression -> expression NE expression .)
    ]               reduce using rule 24 (expression -> expression NE expression .)
    )               reduce using rule 24 (expression -> expression NE expression .)
    :               reduce using rule 24 (expression -> expression NE expression .)
    {               reduce using rule 24 (expression -> expression NE expression .)
    ID              reduce using rule 24 (expression -> expression NE expression .)
    BREAK           reduce using rule 24 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 24 (expression -> expression NE expression .)
    FOR             reduce using rule 24 (expression -> expression NE expression .)
    WHILE           reduce using rule 24 (expression -> expression NE expression .)
    IF              reduce using rule 24 (expression -> expression NE expression .)
    PRINT           reduce using rule 24 (expression -> expression NE expression .)
    RETURN          reduce using rule 24 (expression -> expression NE expression .)
    STRING          reduce using rule 24 (expression -> expression NE expression .)
    [               reduce using rule 24 (expression -> expression NE expression .)
    ZEROES          reduce using rule 24 (expression -> expression NE expression .)
    EYE             reduce using rule 24 (expression -> expression NE expression .)
    ONES            reduce using rule 24 (expression -> expression NE expression .)
    INTNUM          reduce using rule 24 (expression -> expression NE expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression NE expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! +               [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! -               [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! *               [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! /               [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! DOTADD          [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! DOTSUB          [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! DOTMLP          [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! DOTDIV          [ reduce using rule 24 (expression -> expression NE expression .) ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 89

    (25) expression -> expression > expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 25 (expression -> expression > expression .)
    TRANSPOSE       reduce using rule 25 (expression -> expression > expression .)
    EQ              reduce using rule 25 (expression -> expression > expression .)
    NE              reduce using rule 25 (expression -> expression > expression .)
    >               reduce using rule 25 (expression -> expression > expression .)
    GOE             reduce using rule 25 (expression -> expression > expression .)
    <               reduce using rule 25 (expression -> expression > expression .)
    LOE             reduce using rule 25 (expression -> expression > expression .)
    ,               reduce using rule 25 (expression -> expression > expression .)
    ]               reduce using rule 25 (expression -> expression > expression .)
    )               reduce using rule 25 (expression -> expression > expression .)
    :               reduce using rule 25 (expression -> expression > expression .)
    {               reduce using rule 25 (expression -> expression > expression .)
    ID              reduce using rule 25 (expression -> expression > expression .)
    BREAK           reduce using rule 25 (expression -> expression > expression .)
    CONTINUE        reduce using rule 25 (expression -> expression > expression .)
    FOR             reduce using rule 25 (expression -> expression > expression .)
    WHILE           reduce using rule 25 (expression -> expression > expression .)
    IF              reduce using rule 25 (expression -> expression > expression .)
    PRINT           reduce using rule 25 (expression -> expression > expression .)
    RETURN          reduce using rule 25 (expression -> expression > expression .)
    STRING          reduce using rule 25 (expression -> expression > expression .)
    [               reduce using rule 25 (expression -> expression > expression .)
    ZEROES          reduce using rule 25 (expression -> expression > expression .)
    EYE             reduce using rule 25 (expression -> expression > expression .)
    ONES            reduce using rule 25 (expression -> expression > expression .)
    INTNUM          reduce using rule 25 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression > expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! +               [ reduce using rule 25 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 25 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 25 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 25 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 25 (expression -> expression > expression .) ]
  ! DOTMLP          [ reduce using rule 25 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> expression > expression .) ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 90

    (26) expression -> expression GOE expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 26 (expression -> expression GOE expression .)
    TRANSPOSE       reduce using rule 26 (expression -> expression GOE expression .)
    EQ              reduce using rule 26 (expression -> expression GOE expression .)
    NE              reduce using rule 26 (expression -> expression GOE expression .)
    >               reduce using rule 26 (expression -> expression GOE expression .)
    GOE             reduce using rule 26 (expression -> expression GOE expression .)
    <               reduce using rule 26 (expression -> expression GOE expression .)
    LOE             reduce using rule 26 (expression -> expression GOE expression .)
    ,               reduce using rule 26 (expression -> expression GOE expression .)
    ]               reduce using rule 26 (expression -> expression GOE expression .)
    )               reduce using rule 26 (expression -> expression GOE expression .)
    :               reduce using rule 26 (expression -> expression GOE expression .)
    {               reduce using rule 26 (expression -> expression GOE expression .)
    ID              reduce using rule 26 (expression -> expression GOE expression .)
    BREAK           reduce using rule 26 (expression -> expression GOE expression .)
    CONTINUE        reduce using rule 26 (expression -> expression GOE expression .)
    FOR             reduce using rule 26 (expression -> expression GOE expression .)
    WHILE           reduce using rule 26 (expression -> expression GOE expression .)
    IF              reduce using rule 26 (expression -> expression GOE expression .)
    PRINT           reduce using rule 26 (expression -> expression GOE expression .)
    RETURN          reduce using rule 26 (expression -> expression GOE expression .)
    STRING          reduce using rule 26 (expression -> expression GOE expression .)
    [               reduce using rule 26 (expression -> expression GOE expression .)
    ZEROES          reduce using rule 26 (expression -> expression GOE expression .)
    EYE             reduce using rule 26 (expression -> expression GOE expression .)
    ONES            reduce using rule 26 (expression -> expression GOE expression .)
    INTNUM          reduce using rule 26 (expression -> expression GOE expression .)
    FLOATNUM        reduce using rule 26 (expression -> expression GOE expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! +               [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! -               [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! *               [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! /               [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! DOTADD          [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! DOTSUB          [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! DOTMLP          [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! DOTDIV          [ reduce using rule 26 (expression -> expression GOE expression .) ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 91

    (27) expression -> expression < expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 27 (expression -> expression < expression .)
    TRANSPOSE       reduce using rule 27 (expression -> expression < expression .)
    EQ              reduce using rule 27 (expression -> expression < expression .)
    NE              reduce using rule 27 (expression -> expression < expression .)
    >               reduce using rule 27 (expression -> expression < expression .)
    GOE             reduce using rule 27 (expression -> expression < expression .)
    <               reduce using rule 27 (expression -> expression < expression .)
    LOE             reduce using rule 27 (expression -> expression < expression .)
    ,               reduce using rule 27 (expression -> expression < expression .)
    ]               reduce using rule 27 (expression -> expression < expression .)
    )               reduce using rule 27 (expression -> expression < expression .)
    :               reduce using rule 27 (expression -> expression < expression .)
    {               reduce using rule 27 (expression -> expression < expression .)
    ID              reduce using rule 27 (expression -> expression < expression .)
    BREAK           reduce using rule 27 (expression -> expression < expression .)
    CONTINUE        reduce using rule 27 (expression -> expression < expression .)
    FOR             reduce using rule 27 (expression -> expression < expression .)
    WHILE           reduce using rule 27 (expression -> expression < expression .)
    IF              reduce using rule 27 (expression -> expression < expression .)
    PRINT           reduce using rule 27 (expression -> expression < expression .)
    RETURN          reduce using rule 27 (expression -> expression < expression .)
    STRING          reduce using rule 27 (expression -> expression < expression .)
    [               reduce using rule 27 (expression -> expression < expression .)
    ZEROES          reduce using rule 27 (expression -> expression < expression .)
    EYE             reduce using rule 27 (expression -> expression < expression .)
    ONES            reduce using rule 27 (expression -> expression < expression .)
    INTNUM          reduce using rule 27 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 27 (expression -> expression < expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! +               [ reduce using rule 27 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 27 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 27 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 27 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 27 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 27 (expression -> expression < expression .) ]
  ! DOTMLP          [ reduce using rule 27 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 27 (expression -> expression < expression .) ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 92

    (28) expression -> expression LOE expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 28 (expression -> expression LOE expression .)
    TRANSPOSE       reduce using rule 28 (expression -> expression LOE expression .)
    EQ              reduce using rule 28 (expression -> expression LOE expression .)
    NE              reduce using rule 28 (expression -> expression LOE expression .)
    >               reduce using rule 28 (expression -> expression LOE expression .)
    GOE             reduce using rule 28 (expression -> expression LOE expression .)
    <               reduce using rule 28 (expression -> expression LOE expression .)
    LOE             reduce using rule 28 (expression -> expression LOE expression .)
    ,               reduce using rule 28 (expression -> expression LOE expression .)
    ]               reduce using rule 28 (expression -> expression LOE expression .)
    )               reduce using rule 28 (expression -> expression LOE expression .)
    :               reduce using rule 28 (expression -> expression LOE expression .)
    {               reduce using rule 28 (expression -> expression LOE expression .)
    ID              reduce using rule 28 (expression -> expression LOE expression .)
    BREAK           reduce using rule 28 (expression -> expression LOE expression .)
    CONTINUE        reduce using rule 28 (expression -> expression LOE expression .)
    FOR             reduce using rule 28 (expression -> expression LOE expression .)
    WHILE           reduce using rule 28 (expression -> expression LOE expression .)
    IF              reduce using rule 28 (expression -> expression LOE expression .)
    PRINT           reduce using rule 28 (expression -> expression LOE expression .)
    RETURN          reduce using rule 28 (expression -> expression LOE expression .)
    STRING          reduce using rule 28 (expression -> expression LOE expression .)
    [               reduce using rule 28 (expression -> expression LOE expression .)
    ZEROES          reduce using rule 28 (expression -> expression LOE expression .)
    EYE             reduce using rule 28 (expression -> expression LOE expression .)
    ONES            reduce using rule 28 (expression -> expression LOE expression .)
    INTNUM          reduce using rule 28 (expression -> expression LOE expression .)
    FLOATNUM        reduce using rule 28 (expression -> expression LOE expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50

  ! +               [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! -               [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! *               [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! /               [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! DOTMLP          [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> expression LOE expression .) ]
  ! TRANSPOSE       [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NE              [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! GOE             [ shift and go to state 55 ]
  ! <               [ shift and go to state 56 ]
  ! LOE             [ shift and go to state 57 ]


state 93

    (40) code_block -> { statements_list } .

    {               reduce using rule 40 (code_block -> { statements_list } .)
    ID              reduce using rule 40 (code_block -> { statements_list } .)
    BREAK           reduce using rule 40 (code_block -> { statements_list } .)
    CONTINUE        reduce using rule 40 (code_block -> { statements_list } .)
    FOR             reduce using rule 40 (code_block -> { statements_list } .)
    WHILE           reduce using rule 40 (code_block -> { statements_list } .)
    IF              reduce using rule 40 (code_block -> { statements_list } .)
    PRINT           reduce using rule 40 (code_block -> { statements_list } .)
    RETURN          reduce using rule 40 (code_block -> { statements_list } .)
    STRING          reduce using rule 40 (code_block -> { statements_list } .)
    [               reduce using rule 40 (code_block -> { statements_list } .)
    ZEROES          reduce using rule 40 (code_block -> { statements_list } .)
    EYE             reduce using rule 40 (code_block -> { statements_list } .)
    ONES            reduce using rule 40 (code_block -> { statements_list } .)
    -               reduce using rule 40 (code_block -> { statements_list } .)
    INTNUM          reduce using rule 40 (code_block -> { statements_list } .)
    FLOATNUM        reduce using rule 40 (code_block -> { statements_list } .)
    $end            reduce using rule 40 (code_block -> { statements_list } .)
    }               reduce using rule 40 (code_block -> { statements_list } .)
    ELSE            reduce using rule 40 (code_block -> { statements_list } .)


state 94

    (41) code_block -> { instruction } .

    {               reduce using rule 41 (code_block -> { instruction } .)
    ID              reduce using rule 41 (code_block -> { instruction } .)
    BREAK           reduce using rule 41 (code_block -> { instruction } .)
    CONTINUE        reduce using rule 41 (code_block -> { instruction } .)
    FOR             reduce using rule 41 (code_block -> { instruction } .)
    WHILE           reduce using rule 41 (code_block -> { instruction } .)
    IF              reduce using rule 41 (code_block -> { instruction } .)
    PRINT           reduce using rule 41 (code_block -> { instruction } .)
    RETURN          reduce using rule 41 (code_block -> { instruction } .)
    STRING          reduce using rule 41 (code_block -> { instruction } .)
    [               reduce using rule 41 (code_block -> { instruction } .)
    ZEROES          reduce using rule 41 (code_block -> { instruction } .)
    EYE             reduce using rule 41 (code_block -> { instruction } .)
    ONES            reduce using rule 41 (code_block -> { instruction } .)
    -               reduce using rule 41 (code_block -> { instruction } .)
    INTNUM          reduce using rule 41 (code_block -> { instruction } .)
    FLOATNUM        reduce using rule 41 (code_block -> { instruction } .)
    $end            reduce using rule 41 (code_block -> { instruction } .)
    }               reduce using rule 41 (code_block -> { instruction } .)
    ELSE            reduce using rule 41 (code_block -> { instruction } .)


state 95

    (8) expression -> [ expression ] .

    ;               reduce using rule 8 (expression -> [ expression ] .)
    +               reduce using rule 8 (expression -> [ expression ] .)
    -               reduce using rule 8 (expression -> [ expression ] .)
    *               reduce using rule 8 (expression -> [ expression ] .)
    /               reduce using rule 8 (expression -> [ expression ] .)
    DOTADD          reduce using rule 8 (expression -> [ expression ] .)
    DOTSUB          reduce using rule 8 (expression -> [ expression ] .)
    DOTMLP          reduce using rule 8 (expression -> [ expression ] .)
    DOTDIV          reduce using rule 8 (expression -> [ expression ] .)
    TRANSPOSE       reduce using rule 8 (expression -> [ expression ] .)
    EQ              reduce using rule 8 (expression -> [ expression ] .)
    NE              reduce using rule 8 (expression -> [ expression ] .)
    >               reduce using rule 8 (expression -> [ expression ] .)
    GOE             reduce using rule 8 (expression -> [ expression ] .)
    <               reduce using rule 8 (expression -> [ expression ] .)
    LOE             reduce using rule 8 (expression -> [ expression ] .)
    ,               reduce using rule 8 (expression -> [ expression ] .)
    ]               reduce using rule 8 (expression -> [ expression ] .)
    )               reduce using rule 8 (expression -> [ expression ] .)
    :               reduce using rule 8 (expression -> [ expression ] .)
    {               reduce using rule 8 (expression -> [ expression ] .)
    ID              reduce using rule 8 (expression -> [ expression ] .)
    BREAK           reduce using rule 8 (expression -> [ expression ] .)
    CONTINUE        reduce using rule 8 (expression -> [ expression ] .)
    FOR             reduce using rule 8 (expression -> [ expression ] .)
    WHILE           reduce using rule 8 (expression -> [ expression ] .)
    IF              reduce using rule 8 (expression -> [ expression ] .)
    PRINT           reduce using rule 8 (expression -> [ expression ] .)
    RETURN          reduce using rule 8 (expression -> [ expression ] .)
    STRING          reduce using rule 8 (expression -> [ expression ] .)
    [               reduce using rule 8 (expression -> [ expression ] .)
    ZEROES          reduce using rule 8 (expression -> [ expression ] .)
    EYE             reduce using rule 8 (expression -> [ expression ] .)
    ONES            reduce using rule 8 (expression -> [ expression ] .)
    INTNUM          reduce using rule 8 (expression -> [ expression ] .)
    FLOATNUM        reduce using rule 8 (expression -> [ expression ] .)


state 96

    (9) expression -> [ table ] .

    ;               reduce using rule 9 (expression -> [ table ] .)
    +               reduce using rule 9 (expression -> [ table ] .)
    -               reduce using rule 9 (expression -> [ table ] .)
    *               reduce using rule 9 (expression -> [ table ] .)
    /               reduce using rule 9 (expression -> [ table ] .)
    DOTADD          reduce using rule 9 (expression -> [ table ] .)
    DOTSUB          reduce using rule 9 (expression -> [ table ] .)
    DOTMLP          reduce using rule 9 (expression -> [ table ] .)
    DOTDIV          reduce using rule 9 (expression -> [ table ] .)
    TRANSPOSE       reduce using rule 9 (expression -> [ table ] .)
    EQ              reduce using rule 9 (expression -> [ table ] .)
    NE              reduce using rule 9 (expression -> [ table ] .)
    >               reduce using rule 9 (expression -> [ table ] .)
    GOE             reduce using rule 9 (expression -> [ table ] .)
    <               reduce using rule 9 (expression -> [ table ] .)
    LOE             reduce using rule 9 (expression -> [ table ] .)
    ,               reduce using rule 9 (expression -> [ table ] .)
    ]               reduce using rule 9 (expression -> [ table ] .)
    )               reduce using rule 9 (expression -> [ table ] .)
    :               reduce using rule 9 (expression -> [ table ] .)
    {               reduce using rule 9 (expression -> [ table ] .)
    ID              reduce using rule 9 (expression -> [ table ] .)
    BREAK           reduce using rule 9 (expression -> [ table ] .)
    CONTINUE        reduce using rule 9 (expression -> [ table ] .)
    FOR             reduce using rule 9 (expression -> [ table ] .)
    WHILE           reduce using rule 9 (expression -> [ table ] .)
    IF              reduce using rule 9 (expression -> [ table ] .)
    PRINT           reduce using rule 9 (expression -> [ table ] .)
    RETURN          reduce using rule 9 (expression -> [ table ] .)
    STRING          reduce using rule 9 (expression -> [ table ] .)
    [               reduce using rule 9 (expression -> [ table ] .)
    ZEROES          reduce using rule 9 (expression -> [ table ] .)
    EYE             reduce using rule 9 (expression -> [ table ] .)
    ONES            reduce using rule 9 (expression -> [ table ] .)
    INTNUM          reduce using rule 9 (expression -> [ table ] .)
    FLOATNUM        reduce using rule 9 (expression -> [ table ] .)


state 97

    (10) expression -> ZEROES ( number . )

    )               shift and go to state 111


state 98

    (11) expression -> EYE ( number . )

    )               shift and go to state 112


state 99

    (12) expression -> ONES ( number . )

    )               shift and go to state 113


state 100

    (30) instruction -> ID = expression ; .

    {               reduce using rule 30 (instruction -> ID = expression ; .)
    ID              reduce using rule 30 (instruction -> ID = expression ; .)
    BREAK           reduce using rule 30 (instruction -> ID = expression ; .)
    CONTINUE        reduce using rule 30 (instruction -> ID = expression ; .)
    FOR             reduce using rule 30 (instruction -> ID = expression ; .)
    WHILE           reduce using rule 30 (instruction -> ID = expression ; .)
    IF              reduce using rule 30 (instruction -> ID = expression ; .)
    PRINT           reduce using rule 30 (instruction -> ID = expression ; .)
    RETURN          reduce using rule 30 (instruction -> ID = expression ; .)
    STRING          reduce using rule 30 (instruction -> ID = expression ; .)
    [               reduce using rule 30 (instruction -> ID = expression ; .)
    ZEROES          reduce using rule 30 (instruction -> ID = expression ; .)
    EYE             reduce using rule 30 (instruction -> ID = expression ; .)
    ONES            reduce using rule 30 (instruction -> ID = expression ; .)
    -               reduce using rule 30 (instruction -> ID = expression ; .)
    INTNUM          reduce using rule 30 (instruction -> ID = expression ; .)
    FLOATNUM        reduce using rule 30 (instruction -> ID = expression ; .)
    $end            reduce using rule 30 (instruction -> ID = expression ; .)
    }               reduce using rule 30 (instruction -> ID = expression ; .)


state 101

    (31) instruction -> ID SUBASSIGN expression ; .

    {               reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    ID              reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    BREAK           reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    FOR             reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    WHILE           reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    IF              reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    PRINT           reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    RETURN          reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    STRING          reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    [               reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    ZEROES          reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    EYE             reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    ONES            reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    -               reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    INTNUM          reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    FLOATNUM        reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    $end            reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)
    }               reduce using rule 31 (instruction -> ID SUBASSIGN expression ; .)


state 102

    (32) instruction -> ID ADDASSIGN expression ; .

    {               reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    ID              reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    BREAK           reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    FOR             reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    WHILE           reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    IF              reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    PRINT           reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    RETURN          reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    STRING          reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    [               reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    ZEROES          reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    EYE             reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    ONES            reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    -               reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    INTNUM          reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    FLOATNUM        reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    $end            reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)
    }               reduce using rule 32 (instruction -> ID ADDASSIGN expression ; .)


state 103

    (33) instruction -> ID MLPASSIGN expression ; .

    {               reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    ID              reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    BREAK           reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    CONTINUE        reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    FOR             reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    WHILE           reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    IF              reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    PRINT           reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    RETURN          reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    STRING          reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    [               reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    ZEROES          reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    EYE             reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    ONES            reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    -               reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    INTNUM          reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    FLOATNUM        reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    $end            reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)
    }               reduce using rule 33 (instruction -> ID MLPASSIGN expression ; .)


state 104

    (34) instruction -> ID DIVASSIGN expression ; .

    {               reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    ID              reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    BREAK           reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    FOR             reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    WHILE           reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    IF              reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    PRINT           reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    RETURN          reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    STRING          reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    [               reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    ZEROES          reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    EYE             reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    ONES            reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    -               reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    INTNUM          reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    FLOATNUM        reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    $end            reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)
    }               reduce using rule 34 (instruction -> ID DIVASSIGN expression ; .)


state 105

    (44) instruction -> FOR ID = range . code_block
    (45) instruction -> FOR ID = range . instruction
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 14
    ID              shift and go to state 15
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    code_block                     shift and go to state 114
    instruction                    shift and go to state 115
    expression                     shift and go to state 13
    number                         shift and go to state 16

state 106

    (29) range -> expression . : expression
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    :               shift and go to state 116
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 107

    (46) instruction -> WHILE ( expression ) . code_block
    (47) instruction -> WHILE ( expression ) . instruction
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (30) instruction -> . ID = expression ;
    (31) instruction -> . ID SUBASSIGN expression ;
    (32) instruction -> . ID ADDASSIGN expression ;
    (33) instruction -> . ID MLPASSIGN expression ;
    (34) instruction -> . ID DIVASSIGN expression ;
    (42) instruction -> . BREAK ;
    (43) instruction -> . CONTINUE ;
    (44) instruction -> . FOR ID = range code_block
    (45) instruction -> . FOR ID = range instruction
    (46) instruction -> . WHILE ( expression ) code_block
    (47) instruction -> . WHILE ( expression ) instruction
    (48) instruction -> . IF ( expression ) code_block
    (49) instruction -> . IF ( expression ) code_block else_block
    (51) instruction -> . PRINT table ;
    (52) instruction -> . PRINT expression ;
    (53) instruction -> . RETURN ;
    (54) instruction -> . RETURN expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 14
    ID              shift and go to state 15
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    RETURN          shift and go to state 10
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 13
    code_block                     shift and go to state 117
    instruction                    shift and go to state 118
    number                         shift and go to state 16

state 108

    (48) instruction -> IF ( expression ) . code_block
    (49) instruction -> IF ( expression ) . code_block else_block
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 14
    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 13
    code_block                     shift and go to state 119
    number                         shift and go to state 16

state 109

    (7) table -> table , expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 7 (table -> table , expression .)
    ,               reduce using rule 7 (table -> table , expression .)
    ]               reduce using rule 7 (table -> table , expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 110

    (6) table -> expression , expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

    ;               reduce using rule 6 (table -> expression , expression .)
    ,               reduce using rule 6 (table -> expression , expression .)
    ]               reduce using rule 6 (table -> expression , expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57


state 111

    (10) expression -> ZEROES ( number ) .

    ;               reduce using rule 10 (expression -> ZEROES ( number ) .)
    +               reduce using rule 10 (expression -> ZEROES ( number ) .)
    -               reduce using rule 10 (expression -> ZEROES ( number ) .)
    *               reduce using rule 10 (expression -> ZEROES ( number ) .)
    /               reduce using rule 10 (expression -> ZEROES ( number ) .)
    DOTADD          reduce using rule 10 (expression -> ZEROES ( number ) .)
    DOTSUB          reduce using rule 10 (expression -> ZEROES ( number ) .)
    DOTMLP          reduce using rule 10 (expression -> ZEROES ( number ) .)
    DOTDIV          reduce using rule 10 (expression -> ZEROES ( number ) .)
    TRANSPOSE       reduce using rule 10 (expression -> ZEROES ( number ) .)
    EQ              reduce using rule 10 (expression -> ZEROES ( number ) .)
    NE              reduce using rule 10 (expression -> ZEROES ( number ) .)
    >               reduce using rule 10 (expression -> ZEROES ( number ) .)
    GOE             reduce using rule 10 (expression -> ZEROES ( number ) .)
    <               reduce using rule 10 (expression -> ZEROES ( number ) .)
    LOE             reduce using rule 10 (expression -> ZEROES ( number ) .)
    ,               reduce using rule 10 (expression -> ZEROES ( number ) .)
    ]               reduce using rule 10 (expression -> ZEROES ( number ) .)
    )               reduce using rule 10 (expression -> ZEROES ( number ) .)
    :               reduce using rule 10 (expression -> ZEROES ( number ) .)
    {               reduce using rule 10 (expression -> ZEROES ( number ) .)
    ID              reduce using rule 10 (expression -> ZEROES ( number ) .)
    BREAK           reduce using rule 10 (expression -> ZEROES ( number ) .)
    CONTINUE        reduce using rule 10 (expression -> ZEROES ( number ) .)
    FOR             reduce using rule 10 (expression -> ZEROES ( number ) .)
    WHILE           reduce using rule 10 (expression -> ZEROES ( number ) .)
    IF              reduce using rule 10 (expression -> ZEROES ( number ) .)
    PRINT           reduce using rule 10 (expression -> ZEROES ( number ) .)
    RETURN          reduce using rule 10 (expression -> ZEROES ( number ) .)
    STRING          reduce using rule 10 (expression -> ZEROES ( number ) .)
    [               reduce using rule 10 (expression -> ZEROES ( number ) .)
    ZEROES          reduce using rule 10 (expression -> ZEROES ( number ) .)
    EYE             reduce using rule 10 (expression -> ZEROES ( number ) .)
    ONES            reduce using rule 10 (expression -> ZEROES ( number ) .)
    INTNUM          reduce using rule 10 (expression -> ZEROES ( number ) .)
    FLOATNUM        reduce using rule 10 (expression -> ZEROES ( number ) .)


state 112

    (11) expression -> EYE ( number ) .

    ;               reduce using rule 11 (expression -> EYE ( number ) .)
    +               reduce using rule 11 (expression -> EYE ( number ) .)
    -               reduce using rule 11 (expression -> EYE ( number ) .)
    *               reduce using rule 11 (expression -> EYE ( number ) .)
    /               reduce using rule 11 (expression -> EYE ( number ) .)
    DOTADD          reduce using rule 11 (expression -> EYE ( number ) .)
    DOTSUB          reduce using rule 11 (expression -> EYE ( number ) .)
    DOTMLP          reduce using rule 11 (expression -> EYE ( number ) .)
    DOTDIV          reduce using rule 11 (expression -> EYE ( number ) .)
    TRANSPOSE       reduce using rule 11 (expression -> EYE ( number ) .)
    EQ              reduce using rule 11 (expression -> EYE ( number ) .)
    NE              reduce using rule 11 (expression -> EYE ( number ) .)
    >               reduce using rule 11 (expression -> EYE ( number ) .)
    GOE             reduce using rule 11 (expression -> EYE ( number ) .)
    <               reduce using rule 11 (expression -> EYE ( number ) .)
    LOE             reduce using rule 11 (expression -> EYE ( number ) .)
    ,               reduce using rule 11 (expression -> EYE ( number ) .)
    ]               reduce using rule 11 (expression -> EYE ( number ) .)
    )               reduce using rule 11 (expression -> EYE ( number ) .)
    :               reduce using rule 11 (expression -> EYE ( number ) .)
    {               reduce using rule 11 (expression -> EYE ( number ) .)
    ID              reduce using rule 11 (expression -> EYE ( number ) .)
    BREAK           reduce using rule 11 (expression -> EYE ( number ) .)
    CONTINUE        reduce using rule 11 (expression -> EYE ( number ) .)
    FOR             reduce using rule 11 (expression -> EYE ( number ) .)
    WHILE           reduce using rule 11 (expression -> EYE ( number ) .)
    IF              reduce using rule 11 (expression -> EYE ( number ) .)
    PRINT           reduce using rule 11 (expression -> EYE ( number ) .)
    RETURN          reduce using rule 11 (expression -> EYE ( number ) .)
    STRING          reduce using rule 11 (expression -> EYE ( number ) .)
    [               reduce using rule 11 (expression -> EYE ( number ) .)
    ZEROES          reduce using rule 11 (expression -> EYE ( number ) .)
    EYE             reduce using rule 11 (expression -> EYE ( number ) .)
    ONES            reduce using rule 11 (expression -> EYE ( number ) .)
    INTNUM          reduce using rule 11 (expression -> EYE ( number ) .)
    FLOATNUM        reduce using rule 11 (expression -> EYE ( number ) .)


state 113

    (12) expression -> ONES ( number ) .

    ;               reduce using rule 12 (expression -> ONES ( number ) .)
    +               reduce using rule 12 (expression -> ONES ( number ) .)
    -               reduce using rule 12 (expression -> ONES ( number ) .)
    *               reduce using rule 12 (expression -> ONES ( number ) .)
    /               reduce using rule 12 (expression -> ONES ( number ) .)
    DOTADD          reduce using rule 12 (expression -> ONES ( number ) .)
    DOTSUB          reduce using rule 12 (expression -> ONES ( number ) .)
    DOTMLP          reduce using rule 12 (expression -> ONES ( number ) .)
    DOTDIV          reduce using rule 12 (expression -> ONES ( number ) .)
    TRANSPOSE       reduce using rule 12 (expression -> ONES ( number ) .)
    EQ              reduce using rule 12 (expression -> ONES ( number ) .)
    NE              reduce using rule 12 (expression -> ONES ( number ) .)
    >               reduce using rule 12 (expression -> ONES ( number ) .)
    GOE             reduce using rule 12 (expression -> ONES ( number ) .)
    <               reduce using rule 12 (expression -> ONES ( number ) .)
    LOE             reduce using rule 12 (expression -> ONES ( number ) .)
    ,               reduce using rule 12 (expression -> ONES ( number ) .)
    ]               reduce using rule 12 (expression -> ONES ( number ) .)
    )               reduce using rule 12 (expression -> ONES ( number ) .)
    :               reduce using rule 12 (expression -> ONES ( number ) .)
    {               reduce using rule 12 (expression -> ONES ( number ) .)
    ID              reduce using rule 12 (expression -> ONES ( number ) .)
    BREAK           reduce using rule 12 (expression -> ONES ( number ) .)
    CONTINUE        reduce using rule 12 (expression -> ONES ( number ) .)
    FOR             reduce using rule 12 (expression -> ONES ( number ) .)
    WHILE           reduce using rule 12 (expression -> ONES ( number ) .)
    IF              reduce using rule 12 (expression -> ONES ( number ) .)
    PRINT           reduce using rule 12 (expression -> ONES ( number ) .)
    RETURN          reduce using rule 12 (expression -> ONES ( number ) .)
    STRING          reduce using rule 12 (expression -> ONES ( number ) .)
    [               reduce using rule 12 (expression -> ONES ( number ) .)
    ZEROES          reduce using rule 12 (expression -> ONES ( number ) .)
    EYE             reduce using rule 12 (expression -> ONES ( number ) .)
    ONES            reduce using rule 12 (expression -> ONES ( number ) .)
    INTNUM          reduce using rule 12 (expression -> ONES ( number ) .)
    FLOATNUM        reduce using rule 12 (expression -> ONES ( number ) .)


state 114

    (44) instruction -> FOR ID = range code_block .

    {               reduce using rule 44 (instruction -> FOR ID = range code_block .)
    ID              reduce using rule 44 (instruction -> FOR ID = range code_block .)
    BREAK           reduce using rule 44 (instruction -> FOR ID = range code_block .)
    CONTINUE        reduce using rule 44 (instruction -> FOR ID = range code_block .)
    FOR             reduce using rule 44 (instruction -> FOR ID = range code_block .)
    WHILE           reduce using rule 44 (instruction -> FOR ID = range code_block .)
    IF              reduce using rule 44 (instruction -> FOR ID = range code_block .)
    PRINT           reduce using rule 44 (instruction -> FOR ID = range code_block .)
    RETURN          reduce using rule 44 (instruction -> FOR ID = range code_block .)
    STRING          reduce using rule 44 (instruction -> FOR ID = range code_block .)
    [               reduce using rule 44 (instruction -> FOR ID = range code_block .)
    ZEROES          reduce using rule 44 (instruction -> FOR ID = range code_block .)
    EYE             reduce using rule 44 (instruction -> FOR ID = range code_block .)
    ONES            reduce using rule 44 (instruction -> FOR ID = range code_block .)
    -               reduce using rule 44 (instruction -> FOR ID = range code_block .)
    INTNUM          reduce using rule 44 (instruction -> FOR ID = range code_block .)
    FLOATNUM        reduce using rule 44 (instruction -> FOR ID = range code_block .)
    $end            reduce using rule 44 (instruction -> FOR ID = range code_block .)
    }               reduce using rule 44 (instruction -> FOR ID = range code_block .)


state 115

    (45) instruction -> FOR ID = range instruction .

    {               reduce using rule 45 (instruction -> FOR ID = range instruction .)
    ID              reduce using rule 45 (instruction -> FOR ID = range instruction .)
    BREAK           reduce using rule 45 (instruction -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 45 (instruction -> FOR ID = range instruction .)
    FOR             reduce using rule 45 (instruction -> FOR ID = range instruction .)
    WHILE           reduce using rule 45 (instruction -> FOR ID = range instruction .)
    IF              reduce using rule 45 (instruction -> FOR ID = range instruction .)
    PRINT           reduce using rule 45 (instruction -> FOR ID = range instruction .)
    RETURN          reduce using rule 45 (instruction -> FOR ID = range instruction .)
    STRING          reduce using rule 45 (instruction -> FOR ID = range instruction .)
    [               reduce using rule 45 (instruction -> FOR ID = range instruction .)
    ZEROES          reduce using rule 45 (instruction -> FOR ID = range instruction .)
    EYE             reduce using rule 45 (instruction -> FOR ID = range instruction .)
    ONES            reduce using rule 45 (instruction -> FOR ID = range instruction .)
    -               reduce using rule 45 (instruction -> FOR ID = range instruction .)
    INTNUM          reduce using rule 45 (instruction -> FOR ID = range instruction .)
    FLOATNUM        reduce using rule 45 (instruction -> FOR ID = range instruction .)
    $end            reduce using rule 45 (instruction -> FOR ID = range instruction .)
    }               reduce using rule 45 (instruction -> FOR ID = range instruction .)


state 116

    (29) range -> expression : . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    expression                     shift and go to state 120
    number                         shift and go to state 16

state 117

    (46) instruction -> WHILE ( expression ) code_block .

    {               reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    ID              reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    BREAK           reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    CONTINUE        reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    FOR             reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    WHILE           reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    IF              reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    PRINT           reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    RETURN          reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    STRING          reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    [               reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    ZEROES          reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    EYE             reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    ONES            reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    -               reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    INTNUM          reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    FLOATNUM        reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    $end            reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)
    }               reduce using rule 46 (instruction -> WHILE ( expression ) code_block .)


state 118

    (47) instruction -> WHILE ( expression ) instruction .

    {               reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    ID              reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    IF              reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    STRING          reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    [               reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    ZEROES          reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    -               reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    FLOATNUM        reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    $end            reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)
    }               reduce using rule 47 (instruction -> WHILE ( expression ) instruction .)


state 119

    (48) instruction -> IF ( expression ) code_block .
    (49) instruction -> IF ( expression ) code_block . else_block
    (50) else_block -> . ELSE code_block

    {               reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    ID              reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    BREAK           reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    CONTINUE        reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    FOR             reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    WHILE           reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    IF              reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    PRINT           reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    RETURN          reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    STRING          reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    [               reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    ZEROES          reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    EYE             reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    ONES            reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    -               reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    INTNUM          reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    FLOATNUM        reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    $end            reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    }               reduce using rule 48 (instruction -> IF ( expression ) code_block .)
    ELSE            shift and go to state 122

    else_block                     shift and go to state 121

state 120

    (29) range -> expression : expression .
    (14) expression -> expression . + expression
    (15) expression -> expression . - expression
    (16) expression -> expression . * expression
    (17) expression -> expression . / expression
    (18) expression -> expression . DOTADD expression
    (19) expression -> expression . DOTSUB expression
    (20) expression -> expression . DOTMLP expression
    (21) expression -> expression . DOTDIV expression
    (22) expression -> expression . TRANSPOSE
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NE expression
    (25) expression -> expression . > expression
    (26) expression -> expression . GOE expression
    (27) expression -> expression . < expression
    (28) expression -> expression . LOE expression

  ! shift/reduce conflict for - resolved as shift
    {               reduce using rule 29 (range -> expression : expression .)
    ID              reduce using rule 29 (range -> expression : expression .)
    BREAK           reduce using rule 29 (range -> expression : expression .)
    CONTINUE        reduce using rule 29 (range -> expression : expression .)
    FOR             reduce using rule 29 (range -> expression : expression .)
    WHILE           reduce using rule 29 (range -> expression : expression .)
    IF              reduce using rule 29 (range -> expression : expression .)
    PRINT           reduce using rule 29 (range -> expression : expression .)
    RETURN          reduce using rule 29 (range -> expression : expression .)
    STRING          reduce using rule 29 (range -> expression : expression .)
    [               reduce using rule 29 (range -> expression : expression .)
    ZEROES          reduce using rule 29 (range -> expression : expression .)
    EYE             reduce using rule 29 (range -> expression : expression .)
    ONES            reduce using rule 29 (range -> expression : expression .)
    INTNUM          reduce using rule 29 (range -> expression : expression .)
    FLOATNUM        reduce using rule 29 (range -> expression : expression .)
    +               shift and go to state 43
    -               shift and go to state 44
    *               shift and go to state 45
    /               shift and go to state 46
    DOTADD          shift and go to state 47
    DOTSUB          shift and go to state 48
    DOTMLP          shift and go to state 49
    DOTDIV          shift and go to state 50
    TRANSPOSE       shift and go to state 51
    EQ              shift and go to state 52
    NE              shift and go to state 53
    >               shift and go to state 54
    GOE             shift and go to state 55
    <               shift and go to state 56
    LOE             shift and go to state 57

  ! -               [ reduce using rule 29 (range -> expression : expression .) ]


state 121

    (49) instruction -> IF ( expression ) code_block else_block .

    {               reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    ID              reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    BREAK           reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    CONTINUE        reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    FOR             reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    WHILE           reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    IF              reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    PRINT           reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    RETURN          reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    STRING          reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    [               reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    ZEROES          reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    EYE             reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    ONES            reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    -               reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    INTNUM          reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    FLOATNUM        reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    $end            reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)
    }               reduce using rule 49 (instruction -> IF ( expression ) code_block else_block .)


state 122

    (50) else_block -> ELSE . code_block
    (39) code_block -> . expression ;
    (40) code_block -> . { statements_list }
    (41) code_block -> . { instruction }
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ table ]
    (10) expression -> . ZEROES ( number )
    (11) expression -> . EYE ( number )
    (12) expression -> . ONES ( number )
    (13) expression -> . - expression
    (14) expression -> . expression + expression
    (15) expression -> . expression - expression
    (16) expression -> . expression * expression
    (17) expression -> . expression / expression
    (18) expression -> . expression DOTADD expression
    (19) expression -> . expression DOTSUB expression
    (20) expression -> . expression DOTMLP expression
    (21) expression -> . expression DOTDIV expression
    (22) expression -> . expression TRANSPOSE
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NE expression
    (25) expression -> . expression > expression
    (26) expression -> . expression GOE expression
    (27) expression -> . expression < expression
    (28) expression -> . expression LOE expression
    (1) number -> . INTNUM
    (2) number -> . FLOATNUM

    {               shift and go to state 14
    ID              shift and go to state 39
    STRING          shift and go to state 17
    [               shift and go to state 18
    ZEROES          shift and go to state 19
    EYE             shift and go to state 20
    ONES            shift and go to state 21
    -               shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24

    code_block                     shift and go to state 123
    expression                     shift and go to state 13
    number                         shift and go to state 16

state 123

    (50) else_block -> ELSE code_block .

    {               reduce using rule 50 (else_block -> ELSE code_block .)
    ID              reduce using rule 50 (else_block -> ELSE code_block .)
    BREAK           reduce using rule 50 (else_block -> ELSE code_block .)
    CONTINUE        reduce using rule 50 (else_block -> ELSE code_block .)
    FOR             reduce using rule 50 (else_block -> ELSE code_block .)
    WHILE           reduce using rule 50 (else_block -> ELSE code_block .)
    IF              reduce using rule 50 (else_block -> ELSE code_block .)
    PRINT           reduce using rule 50 (else_block -> ELSE code_block .)
    RETURN          reduce using rule 50 (else_block -> ELSE code_block .)
    STRING          reduce using rule 50 (else_block -> ELSE code_block .)
    [               reduce using rule 50 (else_block -> ELSE code_block .)
    ZEROES          reduce using rule 50 (else_block -> ELSE code_block .)
    EYE             reduce using rule 50 (else_block -> ELSE code_block .)
    ONES            reduce using rule 50 (else_block -> ELSE code_block .)
    -               reduce using rule 50 (else_block -> ELSE code_block .)
    INTNUM          reduce using rule 50 (else_block -> ELSE code_block .)
    FLOATNUM        reduce using rule 50 (else_block -> ELSE code_block .)
    $end            reduce using rule 50 (else_block -> ELSE code_block .)
    }               reduce using rule 50 (else_block -> ELSE code_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for - in state 120 resolved as shift
