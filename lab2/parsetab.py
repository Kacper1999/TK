
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocIFXnonassoc=SUBASSIGNADDASSIGNMLPASSIGNDIVASSIGNleftEQNE>GOE<LOEleft+-left*/leftDOTADDDOTSUBleftDOTMLPDOTDIVADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMLP DOTSUB ELSE EQ EYE FLOATNUM FOR GOE ID IF INTNUM LOE MLPASSIGN NE ONES PRINT RETURN STRING SUBASSIGN THEN TRANSPOSE WHILE ZEROESnumber : INTNUM\n              | FLOATNUMexpression : ID\n                  | number\n                  | STRINGtable : expression ',' expression\n                   | table ',' expression\n       expression  : '[' expression ']'\n                   | '[' table ']' expression : ZEROES '(' number ')'\n                  | EYE '(' number ')'\n                  | ONES '(' number ')' expression : '-' expressionexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expressionexpression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMLP expression\n                  | expression DOTDIV expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expression\n                  | expression '>' expression\n                  | expression GOE expression\n                  | expression '<' expression\n                  | expression LOE expressionrange : expression ':' expressioninstruction : ID '=' expression ';'\n                 | ID SUBASSIGN expression ';'\n                 | ID ADDASSIGN expression ';'\n                 | ID MLPASSIGN expression ';'\n                 | ID DIVASSIGN expression ';' statements_list :  statements_list code_block\n                        | statements_list instruction\n                        | instruction code_block\n                        | instruction instructioncode_block : expression ';'\n                  | '{' statements_list '}'\n                  | '{' instruction '}' instruction : BREAK ';'\n                  | CONTINUE ';' instruction : FOR ID '=' range code_block\n                   | FOR ID '=' range instructioninstruction : WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' instructioninstruction  : IF '(' expression ')' code_block %prec IFX\n                  | IF '(' expression ')' code_block else_block\n       else_block : ELSE code_blockinstruction : PRINT table ';'\n                  | PRINT expression ';' instruction : RETURN ';'\n                 | RETURN expression ';' "
    
_lr_action_items = {'ID':([0,1,2,6,9,10,11,12,14,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[3,15,15,34,39,39,-35,-36,3,-4,-5,39,39,-1,-2,-38,-37,39,39,39,39,39,-42,-43,39,39,-3,-53,-39,39,39,39,39,39,39,39,39,-22,39,39,39,39,39,39,15,15,-13,39,-51,39,-52,39,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,15,15,39,-10,-11,-12,-44,-45,39,-46,-47,-48,-29,-49,39,-50,]),'BREAK':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[4,4,4,-35,-36,4,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,4,4,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,4,4,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'CONTINUE':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[5,5,5,-35,-36,5,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,5,5,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,5,5,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'FOR':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[6,6,6,-35,-36,6,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,6,6,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,6,6,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'WHILE':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[7,7,7,-35,-36,7,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,7,7,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,7,7,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'IF':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[8,8,8,-35,-36,8,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,8,8,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,8,8,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'PRINT':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[9,9,9,-35,-36,9,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,9,9,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,9,9,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'RETURN':([0,1,2,11,12,14,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,111,112,113,114,115,117,118,119,120,121,123,],[10,10,10,-35,-36,10,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,10,10,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,10,10,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,-50,]),'$end':([1,11,12,25,26,32,33,40,42,74,76,78,93,94,100,101,102,103,104,114,115,117,118,119,121,123,],[0,-35,-36,-38,-37,-42,-43,-53,-39,-51,-52,-54,-40,-41,-30,-31,-32,-33,-34,-44,-45,-46,-47,-48,-49,-50,]),'{':([1,2,11,12,16,17,23,24,25,26,32,33,39,40,42,51,58,59,65,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,117,118,119,120,121,122,123,],[14,14,-35,-36,-4,-5,-1,-2,-38,-37,-42,-43,-3,-53,-39,-22,14,14,-13,-51,-52,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,14,14,14,-10,-11,-12,-44,-45,-46,-47,-48,-29,-49,14,-50,]),'STRING':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[17,17,17,17,-35,-36,-4,-5,17,17,-1,-2,-38,-37,17,17,17,17,17,-42,-43,17,17,-3,-53,-39,17,17,17,17,17,17,17,17,-22,17,17,17,17,17,17,17,17,-13,17,-51,17,-52,17,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,17,17,17,-10,-11,-12,-44,-45,17,-46,-47,-48,-29,-49,17,-50,]),'[':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[18,18,18,18,-35,-36,-4,-5,18,18,-1,-2,-38,-37,18,18,18,18,18,-42,-43,18,18,-3,-53,-39,18,18,18,18,18,18,18,18,-22,18,18,18,18,18,18,18,18,-13,18,-51,18,-52,18,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,18,18,18,-10,-11,-12,-44,-45,18,-46,-47,-48,-29,-49,18,-50,]),'ZEROES':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[19,19,19,19,-35,-36,-4,-5,19,19,-1,-2,-38,-37,19,19,19,19,19,-42,-43,19,19,-3,-53,-39,19,19,19,19,19,19,19,19,-22,19,19,19,19,19,19,19,19,-13,19,-51,19,-52,19,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,19,19,19,-10,-11,-12,-44,-45,19,-46,-47,-48,-29,-49,19,-50,]),'EYE':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[20,20,20,20,-35,-36,-4,-5,20,20,-1,-2,-38,-37,20,20,20,20,20,-42,-43,20,20,-3,-53,-39,20,20,20,20,20,20,20,20,-22,20,20,20,20,20,20,20,20,-13,20,-51,20,-52,20,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,20,20,20,-10,-11,-12,-44,-45,20,-46,-47,-48,-29,-49,20,-50,]),'ONES':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[21,21,21,21,-35,-36,-4,-5,21,21,-1,-2,-38,-37,21,21,21,21,21,-42,-43,21,21,-3,-53,-39,21,21,21,21,21,21,21,21,-22,21,21,21,21,21,21,21,21,-13,21,-51,21,-52,21,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,21,21,21,-10,-11,-12,-44,-45,21,-46,-47,-48,-29,-49,21,-50,]),'-':([1,2,9,10,11,12,13,15,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,],[22,22,22,22,-35,-36,44,-3,-4,-5,22,22,-1,-2,-38,-37,22,22,22,22,22,-42,-43,22,22,44,-3,-53,44,-39,22,22,22,22,22,22,22,22,-22,22,22,22,22,22,22,22,22,44,-13,44,44,44,44,44,22,44,44,-51,22,-52,22,-54,-14,-15,-16,-17,-18,-19,-20,-21,44,44,44,44,44,44,-40,-41,-8,-9,-30,-31,-32,-33,-34,22,44,22,22,44,44,-10,-11,-12,-44,-45,22,-46,-47,-48,44,-49,22,-50,]),'INTNUM':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[23,23,23,23,-35,-36,-4,-5,23,23,-1,-2,-38,-37,23,23,23,23,23,-42,-43,23,23,-3,-53,-39,23,23,23,23,23,23,23,23,-22,23,23,23,23,23,23,23,23,23,23,23,-13,23,-51,23,-52,23,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,23,23,23,-10,-11,-12,-44,-45,23,-46,-47,-48,-29,-49,23,-50,]),'FLOATNUM':([1,2,9,10,11,12,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,],[24,24,24,24,-35,-36,-4,-5,24,24,-1,-2,-38,-37,24,24,24,24,24,-42,-43,24,24,-3,-53,-39,24,24,24,24,24,24,24,24,-22,24,24,24,24,24,24,24,24,24,24,24,-13,24,-51,24,-52,24,-54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-40,-41,-8,-9,-30,-31,-32,-33,-34,24,24,24,-10,-11,-12,-44,-45,24,-46,-47,-48,-29,-49,24,-50,]),'=':([3,15,34,],[27,27,71,]),'SUBASSIGN':([3,15,],[28,28,]),'ADDASSIGN':([3,15,],[29,29,]),'MLPASSIGN':([3,15,],[30,30,]),'DIVASSIGN':([3,15,],[31,31,]),';':([4,5,10,13,15,16,17,23,24,37,38,39,41,51,65,66,67,68,69,70,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,109,110,111,112,113,],[32,33,40,42,-3,-4,-5,-1,-2,74,76,-3,78,-22,-13,100,101,102,103,104,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,-7,-6,-10,-11,-12,]),'(':([7,8,19,20,21,],[35,36,62,63,64,]),'}':([11,12,25,26,32,33,40,42,58,59,74,76,78,93,94,100,101,102,103,104,114,115,117,118,119,121,123,],[-35,-36,-38,-37,-42,-43,-53,-39,93,94,-51,-52,-54,-40,-41,-30,-31,-32,-33,-34,-44,-45,-46,-47,-48,-49,-50,]),'+':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[43,-3,-4,-5,-1,-2,43,-3,43,-22,43,-13,43,43,43,43,43,43,43,-14,-15,-16,-17,-18,-19,-20,-21,43,43,43,43,43,43,-8,-9,43,43,43,-10,-11,-12,43,]),'*':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[45,-3,-4,-5,-1,-2,45,-3,45,-22,45,45,45,45,45,45,45,45,45,45,45,-16,-17,-18,-19,-20,-21,45,45,45,45,45,45,-8,-9,45,45,45,-10,-11,-12,45,]),'/':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[46,-3,-4,-5,-1,-2,46,-3,46,-22,46,46,46,46,46,46,46,46,46,46,46,-16,-17,-18,-19,-20,-21,46,46,46,46,46,46,-8,-9,46,46,46,-10,-11,-12,46,]),'DOTADD':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[47,-3,-4,-5,-1,-2,47,-3,47,-22,47,47,47,47,47,47,47,47,47,47,47,47,47,-18,-19,-20,-21,47,47,47,47,47,47,-8,-9,47,47,47,-10,-11,-12,47,]),'DOTSUB':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[48,-3,-4,-5,-1,-2,48,-3,48,-22,48,48,48,48,48,48,48,48,48,48,48,48,48,-18,-19,-20,-21,48,48,48,48,48,48,-8,-9,48,48,48,-10,-11,-12,48,]),'DOTMLP':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[49,-3,-4,-5,-1,-2,49,-3,49,-22,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-20,-21,49,49,49,49,49,49,-8,-9,49,49,49,-10,-11,-12,49,]),'DOTDIV':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[50,-3,-4,-5,-1,-2,50,-3,50,-22,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-20,-21,50,50,50,50,50,50,-8,-9,50,50,50,-10,-11,-12,50,]),'TRANSPOSE':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[51,-3,-4,-5,-1,-2,51,-3,51,-22,51,-13,51,51,51,51,51,51,51,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,51,51,51,-10,-11,-12,51,]),'EQ':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[52,-3,-4,-5,-1,-2,52,-3,52,-22,52,-13,52,52,52,52,52,52,52,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,52,52,52,-10,-11,-12,52,]),'NE':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[53,-3,-4,-5,-1,-2,53,-3,53,-22,53,-13,53,53,53,53,53,53,53,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,53,53,53,-10,-11,-12,53,]),'>':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[54,-3,-4,-5,-1,-2,54,-3,54,-22,54,-13,54,54,54,54,54,54,54,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,54,54,54,-10,-11,-12,54,]),'GOE':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[55,-3,-4,-5,-1,-2,55,-3,55,-22,55,-13,55,55,55,55,55,55,55,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,55,55,55,-10,-11,-12,55,]),'<':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[56,-3,-4,-5,-1,-2,56,-3,56,-22,56,-13,56,56,56,56,56,56,56,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,56,56,56,-10,-11,-12,56,]),'LOE':([13,15,16,17,23,24,38,39,41,51,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,109,110,111,112,113,120,],[57,-3,-4,-5,-1,-2,57,-3,57,-22,57,-13,57,57,57,57,57,57,57,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,57,57,57,-10,-11,-12,57,]),',':([16,17,23,24,37,38,39,51,60,61,65,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,109,110,111,112,113,],[-4,-5,-1,-2,75,77,-3,-22,77,75,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,-7,-6,-10,-11,-12,]),']':([16,17,23,24,39,51,60,61,65,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,109,110,111,112,113,],[-4,-5,-1,-2,-3,-22,95,96,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,-7,-6,-10,-11,-12,]),')':([16,17,23,24,39,51,65,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,97,98,99,111,112,113,],[-4,-5,-1,-2,-3,-22,-13,107,108,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,111,112,113,-10,-11,-12,]),':':([16,17,23,24,39,51,65,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,106,111,112,113,],[-4,-5,-1,-2,-3,-22,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-8,-9,116,-10,-11,-12,]),'ELSE':([42,93,94,119,],[-39,-40,-41,122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,14,],[1,58,]),'instruction':([0,1,2,14,58,59,105,107,],[2,12,25,59,12,25,115,118,]),'code_block':([1,2,58,59,105,107,108,122,],[11,26,11,26,114,117,119,123,]),'expression':([1,2,9,10,18,22,27,28,29,30,31,35,36,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,71,75,77,105,107,108,116,122,],[13,13,38,41,60,65,66,67,68,69,70,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,13,13,106,109,110,13,13,13,120,13,]),'number':([1,2,9,10,18,22,27,28,29,30,31,35,36,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,62,63,64,71,75,77,105,107,108,116,122,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,97,98,99,16,16,16,16,16,16,16,16,]),'table':([9,18,],[37,61,]),'range':([71,],[105,]),'else_block':([119,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INTNUM','number',1,'p_number','parser.py',16),
  ('number -> FLOATNUM','number',1,'p_number','parser.py',17),
  ('expression -> ID','expression',1,'p_expression','parser.py',21),
  ('expression -> number','expression',1,'p_expression','parser.py',22),
  ('expression -> STRING','expression',1,'p_expression','parser.py',23),
  ('table -> expression , expression','table',3,'p_table','parser.py',27),
  ('table -> table , expression','table',3,'p_table','parser.py',28),
  ('expression -> [ expression ]','expression',3,'p_table','parser.py',29),
  ('expression -> [ table ]','expression',3,'p_table','parser.py',30),
  ('expression -> ZEROES ( number )','expression',4,'p_create_matrix','parser.py',34),
  ('expression -> EYE ( number )','expression',4,'p_create_matrix','parser.py',35),
  ('expression -> ONES ( number )','expression',4,'p_create_matrix','parser.py',36),
  ('expression -> - expression','expression',2,'p_negation','parser.py',40),
  ('expression -> expression + expression','expression',3,'p_binary_expression','parser.py',44),
  ('expression -> expression - expression','expression',3,'p_binary_expression','parser.py',45),
  ('expression -> expression * expression','expression',3,'p_binary_expression','parser.py',46),
  ('expression -> expression / expression','expression',3,'p_binary_expression','parser.py',47),
  ('expression -> expression DOTADD expression','expression',3,'p_binary_matrix_expression','parser.py',51),
  ('expression -> expression DOTSUB expression','expression',3,'p_binary_matrix_expression','parser.py',52),
  ('expression -> expression DOTMLP expression','expression',3,'p_binary_matrix_expression','parser.py',53),
  ('expression -> expression DOTDIV expression','expression',3,'p_binary_matrix_expression','parser.py',54),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',58),
  ('expression -> expression EQ expression','expression',3,'p_compare_expression','parser.py',62),
  ('expression -> expression NE expression','expression',3,'p_compare_expression','parser.py',63),
  ('expression -> expression > expression','expression',3,'p_compare_expression','parser.py',64),
  ('expression -> expression GOE expression','expression',3,'p_compare_expression','parser.py',65),
  ('expression -> expression < expression','expression',3,'p_compare_expression','parser.py',66),
  ('expression -> expression LOE expression','expression',3,'p_compare_expression','parser.py',67),
  ('range -> expression : expression','range',3,'p_range','parser.py',71),
  ('instruction -> ID = expression ;','instruction',4,'p_assign_expression','parser.py',75),
  ('instruction -> ID SUBASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',76),
  ('instruction -> ID ADDASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',77),
  ('instruction -> ID MLPASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',78),
  ('instruction -> ID DIVASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',79),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',83),
  ('statements_list -> statements_list instruction','statements_list',2,'p_statements_list','parser.py',84),
  ('statements_list -> instruction code_block','statements_list',2,'p_statements_list','parser.py',85),
  ('statements_list -> instruction instruction','statements_list',2,'p_statements_list','parser.py',86),
  ('code_block -> expression ;','code_block',2,'p_code_block','parser.py',90),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',91),
  ('code_block -> { instruction }','code_block',3,'p_code_block','parser.py',92),
  ('instruction -> BREAK ;','instruction',2,'p_break_continue_statement','parser.py',96),
  ('instruction -> CONTINUE ;','instruction',2,'p_break_continue_statement','parser.py',97),
  ('instruction -> FOR ID = range code_block','instruction',5,'p_for_loop','parser.py',101),
  ('instruction -> FOR ID = range instruction','instruction',5,'p_for_loop','parser.py',102),
  ('instruction -> WHILE ( expression ) code_block','instruction',5,'p_while_loop','parser.py',106),
  ('instruction -> WHILE ( expression ) instruction','instruction',5,'p_while_loop','parser.py',107),
  ('instruction -> IF ( expression ) code_block','instruction',5,'p_if_else_statement','parser.py',111),
  ('instruction -> IF ( expression ) code_block else_block','instruction',6,'p_if_else_statement','parser.py',112),
  ('else_block -> ELSE code_block','else_block',2,'p_if_else_statement','parser.py',113),
  ('instruction -> PRINT table ;','instruction',3,'p_print','parser.py',117),
  ('instruction -> PRINT expression ;','instruction',3,'p_print','parser.py',118),
  ('instruction -> RETURN ;','instruction',2,'p_return_expresion','parser.py',122),
  ('instruction -> RETURN expression ;','instruction',3,'p_return_expresion','parser.py',123),
]
