
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocIFXnonassoc=SUBASSIGNADDASSIGNMLPASSIGNDIVASSIGNleftEQNE>GOE<LOEleft+-left*/leftDOTADDDOTSUBleftDOTMLPDOTDIVADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMLP DOTSUB ELSE EQ EYE FLOATNUM FOR GOE ID IF INTNUM LOE MLPASSIGN NE ONES PRINT RETURN STRING SUBASSIGN THEN TRANSPOSE WHILE ZEROESnumber : INTNUM\n              | FLOATNUMmatrix_el : ID '[' number ',' number ']'expression : ID\n                  | number\n                  | STRINGtable : expression ',' expression\n                   | table ',' expression\n       expression  : '[' expression ']'\n                   | '[' table ']' expression : ZEROES '(' number ')'\n                  | EYE '(' number ')'\n                  | ONES '(' number ')' expression : '-' expressionexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expressionexpression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMLP expression\n                  | expression DOTDIV expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expression\n                  | expression '>' expression\n                  | expression GOE expression\n                  | expression '<' expression\n                  | expression LOE expressionrange : expression ':' expressioninstruction : ID '=' expression ';'\n                 | ID SUBASSIGN expression ';'\n                 | ID ADDASSIGN expression ';'\n                 | ID MLPASSIGN expression ';'\n                 | ID DIVASSIGN expression ';'\n                 | matrix_el '=' expression ';'\n                 | matrix_el SUBASSIGN expression ';'\n                 | matrix_el ADDASSIGN expression ';'\n                 | matrix_el MLPASSIGN expression ';'\n                 | matrix_el DIVASSIGN expression ';'statements_list :  statements_list code_block\n                        | statements_list instruction\n                        | instruction code_block\n                        | instruction instructioncode_block : expression ';'\n                  | '{' statements_list '}'\n                  | '{' instruction '}' instruction : BREAK ';'\n                  | CONTINUE ';' instruction : FOR ID '=' range code_block\n                   | FOR ID '=' range instructioninstruction : WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' instructioninstruction  : IF '(' expression ')' code_block %prec IFX\n                  | IF '(' expression ')' code_block else_block\n       else_block : ELSE code_blockinstruction : PRINT table ';'\n                  | PRINT expression ';' instruction : RETURN ';'\n                 | RETURN expression ';' "
    
_lr_action_items = {'ID':([0,1,2,7,10,11,12,13,15,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[3,16,16,41,46,46,-41,-42,3,-5,-6,46,46,-1,-2,-44,-43,46,46,46,46,46,46,46,46,46,46,-48,-49,46,46,-4,-59,-45,46,46,46,46,46,46,46,46,-23,46,46,46,46,46,46,16,16,-14,46,-57,46,-58,46,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,16,16,46,-11,-12,-13,-50,-51,46,-52,-53,-54,-30,-55,46,-56,]),'BREAK':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[5,5,5,-41,-42,5,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,5,5,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,5,5,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'CONTINUE':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[6,6,6,-41,-42,6,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,6,6,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,6,6,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'FOR':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[7,7,7,-41,-42,7,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,7,7,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,7,7,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'WHILE':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[8,8,8,-41,-42,8,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,8,8,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,8,8,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'IF':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[9,9,9,-41,-42,9,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,9,9,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,9,9,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'PRINT':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[10,10,10,-41,-42,10,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,10,10,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,10,10,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'RETURN':([0,1,2,12,13,15,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,130,131,132,134,135,137,138,139,141,142,144,],[11,11,11,-41,-42,11,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,11,11,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,11,11,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,-56,]),'$end':([1,12,13,26,27,39,40,47,49,87,89,91,106,107,113,114,115,116,117,119,120,121,122,123,134,135,137,138,139,142,144,],[0,-41,-42,-44,-43,-48,-49,-59,-45,-57,-58,-60,-46,-47,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-50,-51,-52,-53,-54,-55,-56,]),'{':([1,2,12,13,17,18,24,25,26,27,39,40,46,47,49,58,65,66,72,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,137,138,139,141,142,143,144,],[15,15,-41,-42,-5,-6,-1,-2,-44,-43,-48,-49,-4,-59,-45,-23,15,15,-14,-57,-58,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,15,15,15,-11,-12,-13,-50,-51,-52,-53,-54,-30,-55,15,-56,]),'STRING':([1,2,10,11,12,13,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[18,18,18,18,-41,-42,-5,-6,18,18,-1,-2,-44,-43,18,18,18,18,18,18,18,18,18,18,-48,-49,18,18,-4,-59,-45,18,18,18,18,18,18,18,18,-23,18,18,18,18,18,18,18,18,-14,18,-57,18,-58,18,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,18,18,18,-11,-12,-13,-50,-51,18,-52,-53,-54,-30,-55,18,-56,]),'[':([1,2,3,10,11,12,13,16,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[19,19,33,19,19,-41,-42,33,-5,-6,19,19,-1,-2,-44,-43,19,19,19,19,19,19,19,19,19,19,-48,-49,19,19,-4,-59,-45,19,19,19,19,19,19,19,19,-23,19,19,19,19,19,19,19,19,-14,19,-57,19,-58,19,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,19,19,19,-11,-12,-13,-50,-51,19,-52,-53,-54,-30,-55,19,-56,]),'ZEROES':([1,2,10,11,12,13,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[20,20,20,20,-41,-42,-5,-6,20,20,-1,-2,-44,-43,20,20,20,20,20,20,20,20,20,20,-48,-49,20,20,-4,-59,-45,20,20,20,20,20,20,20,20,-23,20,20,20,20,20,20,20,20,-14,20,-57,20,-58,20,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,20,20,20,-11,-12,-13,-50,-51,20,-52,-53,-54,-30,-55,20,-56,]),'EYE':([1,2,10,11,12,13,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[21,21,21,21,-41,-42,-5,-6,21,21,-1,-2,-44,-43,21,21,21,21,21,21,21,21,21,21,-48,-49,21,21,-4,-59,-45,21,21,21,21,21,21,21,21,-23,21,21,21,21,21,21,21,21,-14,21,-57,21,-58,21,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,21,21,21,-11,-12,-13,-50,-51,21,-52,-53,-54,-30,-55,21,-56,]),'ONES':([1,2,10,11,12,13,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[22,22,22,22,-41,-42,-5,-6,22,22,-1,-2,-44,-43,22,22,22,22,22,22,22,22,22,22,-48,-49,22,22,-4,-59,-45,22,22,22,22,22,22,22,22,-23,22,22,22,22,22,22,22,22,-14,22,-57,22,-58,22,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,22,22,22,-11,-12,-13,-50,-51,22,-52,-53,-54,-30,-55,22,-56,]),'-':([1,2,10,11,12,13,14,16,17,18,19,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,141,142,143,144,],[23,23,23,23,-41,-42,51,-4,-5,-6,23,23,-1,-2,-44,-43,23,23,23,23,23,23,23,23,23,23,-48,-49,23,23,51,-4,-59,51,-45,23,23,23,23,23,23,23,23,-23,23,23,23,23,23,23,23,23,51,-14,51,51,51,51,51,51,51,51,51,51,23,51,51,-57,23,-58,23,-60,-15,-16,-17,-18,-19,-20,-21,-22,51,51,51,51,51,51,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,23,51,23,23,51,51,-11,-12,-13,-50,-51,23,-52,-53,-54,51,-55,23,-56,]),'INTNUM':([1,2,10,11,12,13,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[24,24,24,24,-41,-42,-5,-6,24,24,-1,-2,-44,-43,24,24,24,24,24,24,24,24,24,24,24,-48,-49,24,24,-4,-59,-45,24,24,24,24,24,24,24,24,-23,24,24,24,24,24,24,24,24,24,24,24,-14,24,-57,24,-58,24,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,24,-36,-37,-38,-39,-40,24,24,24,-11,-12,-13,-50,-51,24,-52,-53,-54,-30,-55,24,-56,]),'FLOATNUM':([1,2,10,11,12,13,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,126,127,130,131,132,134,135,136,137,138,139,141,142,143,144,],[25,25,25,25,-41,-42,-5,-6,25,25,-1,-2,-44,-43,25,25,25,25,25,25,25,25,25,25,25,-48,-49,25,25,-4,-59,-45,25,25,25,25,25,25,25,25,-23,25,25,25,25,25,25,25,25,25,25,25,-14,25,-57,25,-58,25,-60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,25,-36,-37,-38,-39,-40,25,25,25,-11,-12,-13,-50,-51,25,-52,-53,-54,-30,-55,25,-56,]),'=':([3,4,16,41,140,],[28,34,28,84,-3,]),'SUBASSIGN':([3,4,16,140,],[29,35,29,-3,]),'ADDASSIGN':([3,4,16,140,],[30,36,30,-3,]),'MLPASSIGN':([3,4,16,140,],[31,37,31,-3,]),'DIVASSIGN':([3,4,16,140,],[32,38,32,-3,]),';':([5,6,11,14,16,17,18,24,25,44,45,46,48,58,72,73,74,75,76,77,79,80,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,128,129,130,131,132,],[39,40,47,49,-4,-5,-6,-1,-2,87,89,-4,91,-23,-14,113,114,115,116,117,119,120,121,122,123,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,-8,-7,-11,-12,-13,]),'(':([8,9,20,21,22,],[42,43,69,70,71,]),'}':([12,13,26,27,39,40,47,49,65,66,87,89,91,106,107,113,114,115,116,117,119,120,121,122,123,134,135,137,138,139,142,144,],[-41,-42,-44,-43,-48,-49,-59,-45,106,107,-57,-58,-60,-46,-47,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-50,-51,-52,-53,-54,-55,-56,]),'+':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[50,-4,-5,-6,-1,-2,50,-4,50,-23,50,-14,50,50,50,50,50,50,50,50,50,50,50,50,-15,-16,-17,-18,-19,-20,-21,-22,50,50,50,50,50,50,-9,-10,50,50,50,-11,-12,-13,50,]),'*':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[52,-4,-5,-6,-1,-2,52,-4,52,-23,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-17,-18,-19,-20,-21,-22,52,52,52,52,52,52,-9,-10,52,52,52,-11,-12,-13,52,]),'/':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[53,-4,-5,-6,-1,-2,53,-4,53,-23,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-17,-18,-19,-20,-21,-22,53,53,53,53,53,53,-9,-10,53,53,53,-11,-12,-13,53,]),'DOTADD':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[54,-4,-5,-6,-1,-2,54,-4,54,-23,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-19,-20,-21,-22,54,54,54,54,54,54,-9,-10,54,54,54,-11,-12,-13,54,]),'DOTSUB':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[55,-4,-5,-6,-1,-2,55,-4,55,-23,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-19,-20,-21,-22,55,55,55,55,55,55,-9,-10,55,55,55,-11,-12,-13,55,]),'DOTMLP':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[56,-4,-5,-6,-1,-2,56,-4,56,-23,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-21,-22,56,56,56,56,56,56,-9,-10,56,56,56,-11,-12,-13,56,]),'DOTDIV':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[57,-4,-5,-6,-1,-2,57,-4,57,-23,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-21,-22,57,57,57,57,57,57,-9,-10,57,57,57,-11,-12,-13,57,]),'TRANSPOSE':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[58,-4,-5,-6,-1,-2,58,-4,58,-23,58,-14,58,58,58,58,58,58,58,58,58,58,58,58,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,58,58,58,-11,-12,-13,58,]),'EQ':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[59,-4,-5,-6,-1,-2,59,-4,59,-23,59,-14,59,59,59,59,59,59,59,59,59,59,59,59,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,59,59,59,-11,-12,-13,59,]),'NE':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[60,-4,-5,-6,-1,-2,60,-4,60,-23,60,-14,60,60,60,60,60,60,60,60,60,60,60,60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,60,60,60,-11,-12,-13,60,]),'>':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[61,-4,-5,-6,-1,-2,61,-4,61,-23,61,-14,61,61,61,61,61,61,61,61,61,61,61,61,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,61,61,61,-11,-12,-13,61,]),'GOE':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[62,-4,-5,-6,-1,-2,62,-4,62,-23,62,-14,62,62,62,62,62,62,62,62,62,62,62,62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,62,62,62,-11,-12,-13,62,]),'<':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[63,-4,-5,-6,-1,-2,63,-4,63,-23,63,-14,63,63,63,63,63,63,63,63,63,63,63,63,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,63,63,63,-11,-12,-13,63,]),'LOE':([14,16,17,18,24,25,45,46,48,58,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,128,129,130,131,132,141,],[64,-4,-5,-6,-1,-2,64,-4,64,-23,64,-14,64,64,64,64,64,64,64,64,64,64,64,64,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,64,64,64,-11,-12,-13,64,]),',':([17,18,24,25,44,45,46,58,67,68,72,78,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,128,129,130,131,132,],[-5,-6,-1,-2,88,90,-4,-23,90,88,-14,118,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,-8,-7,-11,-12,-13,]),']':([17,18,24,25,46,58,67,68,72,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,128,129,130,131,132,133,],[-5,-6,-1,-2,-4,-23,108,109,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,-8,-7,-11,-12,-13,140,]),')':([17,18,24,25,46,58,72,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,130,131,132,],[-5,-6,-1,-2,-4,-23,-14,126,127,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,130,131,132,-11,-12,-13,]),':':([17,18,24,25,46,58,72,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,125,130,131,132,],[-5,-6,-1,-2,-4,-23,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,136,-11,-12,-13,]),'ELSE':([49,106,107,139,],[-45,-46,-47,143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,15,],[1,65,]),'instruction':([0,1,2,15,65,66,124,126,],[2,13,26,66,13,26,135,138,]),'matrix_el':([0,1,2,15,65,66,124,126,],[4,4,4,4,4,4,4,4,]),'code_block':([1,2,65,66,124,126,127,143,],[12,27,12,27,134,137,139,144,]),'expression':([1,2,10,11,19,23,28,29,30,31,32,34,35,36,37,38,42,43,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,84,88,90,124,126,127,136,143,],[14,14,45,48,67,72,73,74,75,76,77,79,80,81,82,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,14,14,125,128,129,14,14,14,141,14,]),'number':([1,2,10,11,19,23,28,29,30,31,32,33,34,35,36,37,38,42,43,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,69,70,71,84,88,90,118,124,126,127,136,143,],[17,17,17,17,17,17,17,17,17,17,17,78,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,110,111,112,17,17,17,133,17,17,17,17,17,]),'table':([10,19,],[44,68,]),'range':([84,],[124,]),'else_block':([139,],[142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INTNUM','number',1,'p_number','parser.py',16),
  ('number -> FLOATNUM','number',1,'p_number','parser.py',17),
  ('matrix_el -> ID [ number , number ]','matrix_el',6,'p_matrix_el','parser.py',21),
  ('expression -> ID','expression',1,'p_expression','parser.py',25),
  ('expression -> number','expression',1,'p_expression','parser.py',26),
  ('expression -> STRING','expression',1,'p_expression','parser.py',27),
  ('table -> expression , expression','table',3,'p_table','parser.py',31),
  ('table -> table , expression','table',3,'p_table','parser.py',32),
  ('expression -> [ expression ]','expression',3,'p_table','parser.py',33),
  ('expression -> [ table ]','expression',3,'p_table','parser.py',34),
  ('expression -> ZEROES ( number )','expression',4,'p_create_matrix','parser.py',38),
  ('expression -> EYE ( number )','expression',4,'p_create_matrix','parser.py',39),
  ('expression -> ONES ( number )','expression',4,'p_create_matrix','parser.py',40),
  ('expression -> - expression','expression',2,'p_negation','parser.py',44),
  ('expression -> expression + expression','expression',3,'p_binary_expression','parser.py',48),
  ('expression -> expression - expression','expression',3,'p_binary_expression','parser.py',49),
  ('expression -> expression * expression','expression',3,'p_binary_expression','parser.py',50),
  ('expression -> expression / expression','expression',3,'p_binary_expression','parser.py',51),
  ('expression -> expression DOTADD expression','expression',3,'p_binary_matrix_expression','parser.py',55),
  ('expression -> expression DOTSUB expression','expression',3,'p_binary_matrix_expression','parser.py',56),
  ('expression -> expression DOTMLP expression','expression',3,'p_binary_matrix_expression','parser.py',57),
  ('expression -> expression DOTDIV expression','expression',3,'p_binary_matrix_expression','parser.py',58),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',62),
  ('expression -> expression EQ expression','expression',3,'p_compare_expression','parser.py',66),
  ('expression -> expression NE expression','expression',3,'p_compare_expression','parser.py',67),
  ('expression -> expression > expression','expression',3,'p_compare_expression','parser.py',68),
  ('expression -> expression GOE expression','expression',3,'p_compare_expression','parser.py',69),
  ('expression -> expression < expression','expression',3,'p_compare_expression','parser.py',70),
  ('expression -> expression LOE expression','expression',3,'p_compare_expression','parser.py',71),
  ('range -> expression : expression','range',3,'p_range','parser.py',75),
  ('instruction -> ID = expression ;','instruction',4,'p_assign_expression','parser.py',79),
  ('instruction -> ID SUBASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',80),
  ('instruction -> ID ADDASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',81),
  ('instruction -> ID MLPASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',82),
  ('instruction -> ID DIVASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',83),
  ('instruction -> matrix_el = expression ;','instruction',4,'p_assign_expression','parser.py',84),
  ('instruction -> matrix_el SUBASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',85),
  ('instruction -> matrix_el ADDASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',86),
  ('instruction -> matrix_el MLPASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',87),
  ('instruction -> matrix_el DIVASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',88),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',92),
  ('statements_list -> statements_list instruction','statements_list',2,'p_statements_list','parser.py',93),
  ('statements_list -> instruction code_block','statements_list',2,'p_statements_list','parser.py',94),
  ('statements_list -> instruction instruction','statements_list',2,'p_statements_list','parser.py',95),
  ('code_block -> expression ;','code_block',2,'p_code_block','parser.py',99),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',100),
  ('code_block -> { instruction }','code_block',3,'p_code_block','parser.py',101),
  ('instruction -> BREAK ;','instruction',2,'p_break_continue_statement','parser.py',105),
  ('instruction -> CONTINUE ;','instruction',2,'p_break_continue_statement','parser.py',106),
  ('instruction -> FOR ID = range code_block','instruction',5,'p_for_loop','parser.py',110),
  ('instruction -> FOR ID = range instruction','instruction',5,'p_for_loop','parser.py',111),
  ('instruction -> WHILE ( expression ) code_block','instruction',5,'p_while_loop','parser.py',115),
  ('instruction -> WHILE ( expression ) instruction','instruction',5,'p_while_loop','parser.py',116),
  ('instruction -> IF ( expression ) code_block','instruction',5,'p_if_else_statement','parser.py',120),
  ('instruction -> IF ( expression ) code_block else_block','instruction',6,'p_if_else_statement','parser.py',121),
  ('else_block -> ELSE code_block','else_block',2,'p_if_else_statement','parser.py',122),
  ('instruction -> PRINT table ;','instruction',3,'p_print','parser.py',126),
  ('instruction -> PRINT expression ;','instruction',3,'p_print','parser.py',127),
  ('instruction -> RETURN ;','instruction',2,'p_return_expresion','parser.py',131),
  ('instruction -> RETURN expression ;','instruction',3,'p_return_expresion','parser.py',132),
]
