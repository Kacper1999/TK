
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocIFXnonassoc=SUBASSIGNADDASSIGNMLPASSIGNDIVASSIGNleftEQNE>GOE<LOEleft+-left*/leftDOTADDDOTSUBleftDOTMLPDOTDIVADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMLP DOTSUB ELSE EQ EYE FLOATNUM FOR GOE ID IF INTNUM LOE MLPASSIGN NE ONES PRINT RETURN STRING SUBASSIGN THEN TRANSPOSE WHILE ZEROESnumber : INTNUM\n              | FLOATNUMmatrix_el : ID '[' number ',' number ']'expression : ID\n                  | number\n                  | STRINGtable : expression ',' expression\n                   | table ',' expression\n       expression  : '[' expression ']'\n                   | '[' table ']' expression : ZEROES '(' number ')'\n                  | EYE '(' number ')'\n                  | ONES '(' number ')' expression : '-' expressionexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expressionexpression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMLP expression\n                  | expression DOTDIV expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expression\n                  | expression '>' expression\n                  | expression GOE expression\n                  | expression '<' expression\n                  | expression LOE expressionrange : expression ':' expressioninstruction : ID '=' expression ';'\n                 | ID SUBASSIGN expression ';'\n                 | ID ADDASSIGN expression ';'\n                 | ID MLPASSIGN expression ';'\n                 | ID DIVASSIGN expression ';'\n                 | matrix_el '=' expression ';'\n                 | matrix_el SUBASSIGN expression ';'\n                 | matrix_el ADDASSIGN expression ';'\n                 | matrix_el MLPASSIGN expression ';'\n                 | matrix_el DIVASSIGN expression ';'statements_list :  statements_list code_block\n                        | statements_list instruction\n                        | instruction code_block\n                        | instruction instructioncode_block : expression ';'\n                  | '{' statements_list '}'\n                  | '{' instruction '}' instruction : BREAK ';'\n                  | CONTINUE ';' instruction : FOR ID '=' range code_block\n                   | FOR ID '=' range instructioninstruction : WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' instructioninstruction : if_block\n    if_block  : IF '(' expression ')' code_block %prec IFX\n                  | IF '(' expression ')' code_block elseif_block else_block\n        elseif_block : ELSE if_block\n       else_block : ELSE code_blockinstruction : PRINT table ';'\n                  | PRINT expression ';' instruction : RETURN ';'\n                 | RETURN expression ';' "
    
_lr_action_items = {'ID':([0,1,2,7,9,10,11,13,14,16,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[3,17,17,42,-54,46,46,-41,-42,3,-5,-6,46,46,-1,-2,-44,-43,46,46,46,46,46,46,46,46,46,46,-48,-49,46,-4,-61,46,-45,46,46,46,46,46,46,46,46,-23,46,46,46,46,46,46,17,17,-14,46,-59,46,-60,46,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,17,17,46,-11,-12,-13,-50,-51,46,-52,-53,-55,-30,-56,46,-58,]),'BREAK':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,145,148,],[5,5,5,-54,-41,-42,5,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,5,5,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,5,5,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,-58,]),'CONTINUE':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,145,148,],[6,6,6,-54,-41,-42,6,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,6,6,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,6,6,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,-58,]),'FOR':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,145,148,],[7,7,7,-54,-41,-42,7,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,7,7,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,7,7,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,-58,]),'WHILE':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,145,148,],[8,8,8,-54,-41,-42,8,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,8,8,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,8,8,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,-58,]),'PRINT':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,145,148,],[10,10,10,-54,-41,-42,10,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,10,10,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,10,10,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,-58,]),'RETURN':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,145,148,],[11,11,11,-54,-41,-42,11,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,11,11,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,11,11,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,-58,]),'IF':([0,1,2,9,13,14,16,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,131,132,133,135,136,138,139,140,142,144,145,148,],[12,12,12,-54,-41,-42,12,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,12,12,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,12,12,-11,-12,-13,-50,-51,-52,-53,-55,-30,12,-56,-58,]),'$end':([1,9,13,14,27,28,40,41,47,50,87,89,91,107,108,114,115,116,117,118,120,121,122,123,124,135,136,138,139,140,145,148,],[0,-54,-41,-42,-44,-43,-48,-49,-61,-45,-59,-60,-62,-46,-47,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-50,-51,-52,-53,-55,-56,-58,]),'{':([1,2,9,13,14,18,19,25,26,27,28,40,41,46,47,50,59,66,67,73,87,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,138,139,140,142,145,146,148,],[16,16,-54,-41,-42,-5,-6,-1,-2,-44,-43,-48,-49,-4,-61,-45,-23,16,16,-14,-59,-60,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,16,16,16,-11,-12,-13,-50,-51,-52,-53,-55,-30,-56,16,-58,]),'STRING':([1,2,9,10,11,13,14,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[19,19,-54,19,19,-41,-42,-5,-6,19,19,-1,-2,-44,-43,19,19,19,19,19,19,19,19,19,19,-48,-49,19,-4,-61,19,-45,19,19,19,19,19,19,19,19,-23,19,19,19,19,19,19,19,19,-14,19,-59,19,-60,19,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,19,19,19,-11,-12,-13,-50,-51,19,-52,-53,-55,-30,-56,19,-58,]),'[':([1,2,3,9,10,11,13,14,17,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[20,20,34,-54,20,20,-41,-42,34,-5,-6,20,20,-1,-2,-44,-43,20,20,20,20,20,20,20,20,20,20,-48,-49,20,-4,-61,20,-45,20,20,20,20,20,20,20,20,-23,20,20,20,20,20,20,20,20,-14,20,-59,20,-60,20,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,20,20,20,-11,-12,-13,-50,-51,20,-52,-53,-55,-30,-56,20,-58,]),'ZEROES':([1,2,9,10,11,13,14,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[21,21,-54,21,21,-41,-42,-5,-6,21,21,-1,-2,-44,-43,21,21,21,21,21,21,21,21,21,21,-48,-49,21,-4,-61,21,-45,21,21,21,21,21,21,21,21,-23,21,21,21,21,21,21,21,21,-14,21,-59,21,-60,21,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,21,21,21,-11,-12,-13,-50,-51,21,-52,-53,-55,-30,-56,21,-58,]),'EYE':([1,2,9,10,11,13,14,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[22,22,-54,22,22,-41,-42,-5,-6,22,22,-1,-2,-44,-43,22,22,22,22,22,22,22,22,22,22,-48,-49,22,-4,-61,22,-45,22,22,22,22,22,22,22,22,-23,22,22,22,22,22,22,22,22,-14,22,-59,22,-60,22,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,22,22,22,-11,-12,-13,-50,-51,22,-52,-53,-55,-30,-56,22,-58,]),'ONES':([1,2,9,10,11,13,14,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[23,23,-54,23,23,-41,-42,-5,-6,23,23,-1,-2,-44,-43,23,23,23,23,23,23,23,23,23,23,-48,-49,23,-4,-61,23,-45,23,23,23,23,23,23,23,23,-23,23,23,23,23,23,23,23,23,-14,23,-59,23,-60,23,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,23,23,23,-11,-12,-13,-50,-51,23,-52,-53,-55,-30,-56,23,-58,]),'-':([1,2,9,10,11,13,14,15,17,18,19,20,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[24,24,-54,24,24,-41,-42,52,-4,-5,-6,24,24,-1,-2,-44,-43,24,24,24,24,24,24,24,24,24,24,-48,-49,24,52,-4,-61,52,24,-45,24,24,24,24,24,24,24,24,-23,24,24,24,24,24,24,24,24,52,-14,52,52,52,52,52,52,52,52,52,52,24,52,-59,24,-60,24,-62,52,-15,-16,-17,-18,-19,-20,-21,-22,52,52,52,52,52,52,-46,-47,-9,-10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,24,52,24,52,52,24,-11,-12,-13,-50,-51,24,-52,-53,-55,52,-56,24,-58,]),'INTNUM':([1,2,9,10,11,13,14,18,19,20,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,119,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[25,25,-54,25,25,-41,-42,-5,-6,25,25,-1,-2,-44,-43,25,25,25,25,25,25,25,25,25,25,25,-48,-49,25,-4,-61,25,-45,25,25,25,25,25,25,25,25,-23,25,25,25,25,25,25,25,25,25,25,25,-14,25,-59,25,-60,25,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,25,-36,-37,-38,-39,-40,25,25,25,-11,-12,-13,-50,-51,25,-52,-53,-55,-30,-56,25,-58,]),'FLOATNUM':([1,2,9,10,11,13,14,18,19,20,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,85,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,119,120,121,122,123,124,125,127,130,131,132,133,135,136,137,138,139,140,142,145,146,148,],[26,26,-54,26,26,-41,-42,-5,-6,26,26,-1,-2,-44,-43,26,26,26,26,26,26,26,26,26,26,26,-48,-49,26,-4,-61,26,-45,26,26,26,26,26,26,26,26,-23,26,26,26,26,26,26,26,26,26,26,26,-14,26,-59,26,-60,26,-62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-46,-47,-9,-10,-31,-32,-33,-34,-35,26,-36,-37,-38,-39,-40,26,26,26,-11,-12,-13,-50,-51,26,-52,-53,-55,-30,-56,26,-58,]),'=':([3,4,17,42,141,],[29,35,29,85,-3,]),'SUBASSIGN':([3,4,17,141,],[30,36,30,-3,]),'ADDASSIGN':([3,4,17,141,],[31,37,31,-3,]),'MLPASSIGN':([3,4,17,141,],[32,38,32,-3,]),'DIVASSIGN':([3,4,17,141,],[33,39,33,-3,]),';':([5,6,11,15,17,18,19,25,26,44,45,46,48,59,73,74,75,76,77,78,80,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,128,129,131,132,133,],[40,41,47,50,-4,-5,-6,-1,-2,87,89,-4,91,-23,-14,114,115,116,117,118,120,121,122,123,124,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,-8,-7,-11,-12,-13,]),'(':([8,12,21,22,23,],[43,49,70,71,72,]),'}':([9,13,14,27,28,40,41,47,50,66,67,87,89,91,107,108,114,115,116,117,118,120,121,122,123,124,135,136,138,139,140,145,148,],[-54,-41,-42,-44,-43,-48,-49,-61,-45,107,108,-59,-60,-62,-46,-47,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-50,-51,-52,-53,-55,-56,-58,]),'+':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[51,-4,-5,-6,-1,-2,51,-4,51,-23,51,-14,51,51,51,51,51,51,51,51,51,51,51,51,-15,-16,-17,-18,-19,-20,-21,-22,51,51,51,51,51,51,-9,-10,51,51,51,-11,-12,-13,51,]),'*':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[53,-4,-5,-6,-1,-2,53,-4,53,-23,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-17,-18,-19,-20,-21,-22,53,53,53,53,53,53,-9,-10,53,53,53,-11,-12,-13,53,]),'/':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[54,-4,-5,-6,-1,-2,54,-4,54,-23,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-17,-18,-19,-20,-21,-22,54,54,54,54,54,54,-9,-10,54,54,54,-11,-12,-13,54,]),'DOTADD':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[55,-4,-5,-6,-1,-2,55,-4,55,-23,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-19,-20,-21,-22,55,55,55,55,55,55,-9,-10,55,55,55,-11,-12,-13,55,]),'DOTSUB':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[56,-4,-5,-6,-1,-2,56,-4,56,-23,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-19,-20,-21,-22,56,56,56,56,56,56,-9,-10,56,56,56,-11,-12,-13,56,]),'DOTMLP':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[57,-4,-5,-6,-1,-2,57,-4,57,-23,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-21,-22,57,57,57,57,57,57,-9,-10,57,57,57,-11,-12,-13,57,]),'DOTDIV':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[58,-4,-5,-6,-1,-2,58,-4,58,-23,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-21,-22,58,58,58,58,58,58,-9,-10,58,58,58,-11,-12,-13,58,]),'TRANSPOSE':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[59,-4,-5,-6,-1,-2,59,-4,59,-23,59,-14,59,59,59,59,59,59,59,59,59,59,59,59,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,59,59,59,-11,-12,-13,59,]),'EQ':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[60,-4,-5,-6,-1,-2,60,-4,60,-23,60,-14,60,60,60,60,60,60,60,60,60,60,60,60,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,60,60,60,-11,-12,-13,60,]),'NE':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[61,-4,-5,-6,-1,-2,61,-4,61,-23,61,-14,61,61,61,61,61,61,61,61,61,61,61,61,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,61,61,61,-11,-12,-13,61,]),'>':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[62,-4,-5,-6,-1,-2,62,-4,62,-23,62,-14,62,62,62,62,62,62,62,62,62,62,62,62,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,62,62,62,-11,-12,-13,62,]),'GOE':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[63,-4,-5,-6,-1,-2,63,-4,63,-23,63,-14,63,63,63,63,63,63,63,63,63,63,63,63,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,63,63,63,-11,-12,-13,63,]),'<':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[64,-4,-5,-6,-1,-2,64,-4,64,-23,64,-14,64,64,64,64,64,64,64,64,64,64,64,64,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,64,64,64,-11,-12,-13,64,]),'LOE':([15,17,18,19,25,26,45,46,48,59,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,128,129,131,132,133,142,],[65,-4,-5,-6,-1,-2,65,-4,65,-23,65,-14,65,65,65,65,65,65,65,65,65,65,65,65,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,65,65,65,-11,-12,-13,65,]),',':([18,19,25,26,44,45,46,59,68,69,73,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,128,129,131,132,133,],[-5,-6,-1,-2,88,90,-4,-23,90,88,-14,119,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,-8,-7,-11,-12,-13,]),']':([18,19,25,26,46,59,68,69,73,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,128,129,131,132,133,134,],[-5,-6,-1,-2,-4,-23,109,110,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,-8,-7,-11,-12,-13,141,]),')':([18,19,25,26,46,59,73,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,131,132,133,],[-5,-6,-1,-2,-4,-23,-14,127,130,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,131,132,133,-11,-12,-13,]),':':([18,19,25,26,46,59,73,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,126,131,132,133,],[-5,-6,-1,-2,-4,-23,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-9,-10,137,-11,-12,-13,]),'ELSE':([50,107,108,140,143,145,147,148,],[-45,-46,-47,-55,146,-56,-57,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,16,],[1,66,]),'instruction':([0,1,2,16,66,67,125,127,],[2,14,27,67,14,27,136,139,]),'matrix_el':([0,1,2,16,66,67,125,127,],[4,4,4,4,4,4,4,4,]),'if_block':([0,1,2,16,66,67,125,127,144,],[9,9,9,9,9,9,9,9,147,]),'code_block':([1,2,66,67,125,127,130,146,],[13,28,13,28,135,138,140,148,]),'expression':([1,2,10,11,20,24,29,30,31,32,33,35,36,37,38,39,43,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,85,88,90,125,127,130,137,146,],[15,15,45,48,68,73,74,75,76,77,78,80,81,82,83,84,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,15,15,126,128,129,15,15,15,142,15,]),'number':([1,2,10,11,20,24,29,30,31,32,33,34,35,36,37,38,39,43,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,70,71,72,85,88,90,119,125,127,130,137,146,],[18,18,18,18,18,18,18,18,18,18,18,79,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,111,112,113,18,18,18,134,18,18,18,18,18,]),'table':([10,20,],[44,69,]),'range':([85,],[125,]),'elseif_block':([140,],[143,]),'else_block':([143,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INTNUM','number',1,'p_number','parser.py',16),
  ('number -> FLOATNUM','number',1,'p_number','parser.py',17),
  ('matrix_el -> ID [ number , number ]','matrix_el',6,'p_matrix_el','parser.py',21),
  ('expression -> ID','expression',1,'p_expression','parser.py',25),
  ('expression -> number','expression',1,'p_expression','parser.py',26),
  ('expression -> STRING','expression',1,'p_expression','parser.py',27),
  ('table -> expression , expression','table',3,'p_table','parser.py',31),
  ('table -> table , expression','table',3,'p_table','parser.py',32),
  ('expression -> [ expression ]','expression',3,'p_table','parser.py',33),
  ('expression -> [ table ]','expression',3,'p_table','parser.py',34),
  ('expression -> ZEROES ( number )','expression',4,'p_create_matrix','parser.py',38),
  ('expression -> EYE ( number )','expression',4,'p_create_matrix','parser.py',39),
  ('expression -> ONES ( number )','expression',4,'p_create_matrix','parser.py',40),
  ('expression -> - expression','expression',2,'p_negation','parser.py',44),
  ('expression -> expression + expression','expression',3,'p_binary_expression','parser.py',48),
  ('expression -> expression - expression','expression',3,'p_binary_expression','parser.py',49),
  ('expression -> expression * expression','expression',3,'p_binary_expression','parser.py',50),
  ('expression -> expression / expression','expression',3,'p_binary_expression','parser.py',51),
  ('expression -> expression DOTADD expression','expression',3,'p_binary_matrix_expression','parser.py',55),
  ('expression -> expression DOTSUB expression','expression',3,'p_binary_matrix_expression','parser.py',56),
  ('expression -> expression DOTMLP expression','expression',3,'p_binary_matrix_expression','parser.py',57),
  ('expression -> expression DOTDIV expression','expression',3,'p_binary_matrix_expression','parser.py',58),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',62),
  ('expression -> expression EQ expression','expression',3,'p_compare_expression','parser.py',66),
  ('expression -> expression NE expression','expression',3,'p_compare_expression','parser.py',67),
  ('expression -> expression > expression','expression',3,'p_compare_expression','parser.py',68),
  ('expression -> expression GOE expression','expression',3,'p_compare_expression','parser.py',69),
  ('expression -> expression < expression','expression',3,'p_compare_expression','parser.py',70),
  ('expression -> expression LOE expression','expression',3,'p_compare_expression','parser.py',71),
  ('range -> expression : expression','range',3,'p_range','parser.py',75),
  ('instruction -> ID = expression ;','instruction',4,'p_assign_expression','parser.py',79),
  ('instruction -> ID SUBASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',80),
  ('instruction -> ID ADDASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',81),
  ('instruction -> ID MLPASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',82),
  ('instruction -> ID DIVASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',83),
  ('instruction -> matrix_el = expression ;','instruction',4,'p_assign_expression','parser.py',84),
  ('instruction -> matrix_el SUBASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',85),
  ('instruction -> matrix_el ADDASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',86),
  ('instruction -> matrix_el MLPASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',87),
  ('instruction -> matrix_el DIVASSIGN expression ;','instruction',4,'p_assign_expression','parser.py',88),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',92),
  ('statements_list -> statements_list instruction','statements_list',2,'p_statements_list','parser.py',93),
  ('statements_list -> instruction code_block','statements_list',2,'p_statements_list','parser.py',94),
  ('statements_list -> instruction instruction','statements_list',2,'p_statements_list','parser.py',95),
  ('code_block -> expression ;','code_block',2,'p_code_block','parser.py',99),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',100),
  ('code_block -> { instruction }','code_block',3,'p_code_block','parser.py',101),
  ('instruction -> BREAK ;','instruction',2,'p_break_continue_statement','parser.py',105),
  ('instruction -> CONTINUE ;','instruction',2,'p_break_continue_statement','parser.py',106),
  ('instruction -> FOR ID = range code_block','instruction',5,'p_for_loop','parser.py',110),
  ('instruction -> FOR ID = range instruction','instruction',5,'p_for_loop','parser.py',111),
  ('instruction -> WHILE ( expression ) code_block','instruction',5,'p_while_loop','parser.py',115),
  ('instruction -> WHILE ( expression ) instruction','instruction',5,'p_while_loop','parser.py',116),
  ('instruction -> if_block','instruction',1,'p_if_else_statement','parser.py',120),
  ('if_block -> IF ( expression ) code_block','if_block',5,'p_if_else_statement','parser.py',121),
  ('if_block -> IF ( expression ) code_block elseif_block else_block','if_block',7,'p_if_else_statement','parser.py',122),
  ('elseif_block -> ELSE if_block','elseif_block',2,'p_if_else_statement','parser.py',123),
  ('else_block -> ELSE code_block','else_block',2,'p_if_else_statement','parser.py',124),
  ('instruction -> PRINT table ;','instruction',3,'p_print','parser.py',128),
  ('instruction -> PRINT expression ;','instruction',3,'p_print','parser.py',129),
  ('instruction -> RETURN ;','instruction',2,'p_return_expresion','parser.py',133),
  ('instruction -> RETURN expression ;','instruction',3,'p_return_expresion','parser.py',134),
]
